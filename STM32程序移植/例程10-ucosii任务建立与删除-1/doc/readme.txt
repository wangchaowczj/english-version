例程目的：学习ucosii的任务建立和删除的基本函数
具体内容：建立两个任务，一个是LED任务，一个是LCD任务
需学习内容：
1.ucosii任务建立所有关联的配置
2.任务堆栈建立大小多少合适，怎么计算 嵌套的中断层数和定义的变量有关
3.需要的函数：列出来

最基本：
OSInit() 系统初始化，初始化系统参数和任务堆栈TCB 
TaskCreate() 建立任务，目的是建立初始程序
OSStart()  开启任务

任务建立和删除：
在开启任务中建立其他任务
建立任务用到的函数：
OSTaskCreate()	
OSTaskCreateExt()

OSTaskDel()
OSTaskDelReq() 这两个函数都是删除任务函数，后者提交请求验证现在是否有其他任务的删除请求，通过返回值确认可以删除，
然后就释放掉当前任务的资源

OSTaskSuspend()
OSTaskResume()

OSTaskQuery()  查询TCB的数据，会返回TCB的数据
OSTaskStkChk() 查询堆栈的使用情况，一般不用

任务的建立用到的参数：
任务的优先级：#define XX_TASK_PRIO		XX
任务栈的大小（单位为OS_STK）: #define XX_TASK_STK_SIZE		XX
栈的数据结构——建立一个所有任务栈的结构体，OS_STK类型



疑问：在函数中参数为指针型，变量名需要声明么就比如void AppStartUpTask(void* p_arg)，这个里面p_arg是需要声明的么。
答：不需要，在函数声明的时候就以及告诉编译器了，且编译器也分配好地址了，参数名称只是一个符号，换成其他的符号也可
以，符号是为了让人们看懂的。对于计算机来说只是一个地址。返回来说，这就是一个临时的参数，在函数建立起来的时候也随
之建立起来，建立在堆栈中，当使用完后就立即被销毁。所以他是临时的，地址是自动被分配的，只要写清楚参数类型就OK了。

遇到的问题：写完两个任务函数，把该有的配置也完成了。但是没有再开启任务中建立LCD的任务，只建立了LED的任务，结果就是
	LCD（OLED）点不亮。
教训：在开启任务中建立任务很重要

问题：优先级冲突。在将LCD的优先级高于LED的优先级后，出现LCD亮，LED不亮
分析：设计另一个实验，建立两个led灯任务去分析模拟。
结果：发现任务调用这样的设计并不是自动的，需要手动设置好跳转点
设计进一步实验：用3个LED灯

实验结果：在启动任务中建立其他任务，就会不断循环。

