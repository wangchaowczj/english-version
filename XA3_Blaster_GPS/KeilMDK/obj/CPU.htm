<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\obj\CPU.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\obj\CPU.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Mon Apr 27 09:09:12 2020
<BR><P>
<H3>Maximum Stack Usage =       1704 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
AppWifiTask &rArr; WifiScanAP &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[201]">__user_initial_stackheap</a>
 <LI><a href="#[737]">OS_CPU_SR_Save</a>
 <LI><a href="#[738]">OS_CPU_SR_Restore</a>
 <LI><a href="#[74f]">OSStartHighRdy</a>
 <LI><a href="#[760]">OSCtxSw</a>
 <LI><a href="#[747]">OSIntCtxSw</a>
 <LI><a href="#[38]">PendSV_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[7ae]">SdCardSendCmd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7ae]">SdCardSendCmd</a><BR>
 <LI><a href="#[93b]">putc_bfd</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[93b]">putc_bfd</a><BR>
 <LI><a href="#[886]">WM__InvalidateRect</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[886]">WM__InvalidateRect</a><BR>
 <LI><a href="#[865]">WM_InvalidateWindowAndDescsEx</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[865]">WM_InvalidateWindowAndDescsEx</a><BR>
 <LI><a href="#[85f]">WM__InvalidateDrawAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[85f]">WM__InvalidateDrawAndDescs</a><BR>
 <LI><a href="#[84a]">WM_SendToParent</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[696]">WM__SendMessage</a><BR>
 <LI><a href="#[864]">WM_InvalidateWindowAndDescs</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[864]">WM_InvalidateWindowAndDescs</a><BR>
 <LI><a href="#[84e]">_DeleteAllChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[593]">WM_DeleteWindow</a><BR>
 <LI><a href="#[8b3]">_PopFreeBlock</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8e8]">_EnlargeBlocks</a><BR>
 <LI><a href="#[56b]">_Alloc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[570]">_InitOnce</a><BR>
 <LI><a href="#[8ea]">_Findy1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8ea]">_Findy1</a><BR>
 <LI><a href="#[8ec]">_Findx1</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8ec]">_Findx1</a><BR>
 <LI><a href="#[8eb]">_Findx0</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8eb]">_Findx0</a><BR>
 <LI><a href="#[88b]">_PaintTransChildren</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[88b]">_PaintTransChildren</a><BR>
 <LI><a href="#[419]">WM_ResizeWindow</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[82a]">WM__UpdateChildPositions</a><BR>
 <LI><a href="#[888]">_MoveDescendents</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[888]">_MoveDescendents</a><BR>
 <LI><a href="#[854]">WM__ForEachDesc</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[854]">WM__ForEachDesc</a><BR>
 <LI><a href="#[85b]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[85b]">_GetDialogItem</a><BR>
 <LI><a href="#[855]">_GetDialogItem</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[855]">_GetDialogItem</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[4c]">ADC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[11c]">AppBackgroundTask</a> from task.o(i.AppBackgroundTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[119]">AppDetOperateTask</a> from task.o(i.AppDetOperateTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[115]">AppKeyScanTask</a> from task.o(i.AppKeyScanTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[11e]">AppLowPriTask</a> from task.o(i.AppLowPriTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[11a]">AppRS485Task</a> from task.o(i.AppRS485Task) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[117]">AppSafeMonitorTask</a> from task.o(i.AppSafeMonitorTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[11d]">AppSoundTask</a> from task.o(i.AppSoundTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[113]">AppStartUpTask</a> from task.o(i.AppStartUpTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[11b]">AppTemporaryTask</a> from task.o(i.AppTemporaryTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[116]">AppUSBTask</a> from task.o(i.AppUSBTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[114]">AppUserGUITask</a> from task.o(i.AppUserGUITask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[118]">AppWifiTask</a> from task.o(i.AppWifiTask) referenced from taskutils.o(i.TaskCreate)
 <LI><a href="#[97]">BUTTON_Callback</a> from button.o(i.BUTTON_Callback) referenced from button.o(i.BUTTON_CreateUser)
 <LI><a href="#[136]">BUTTON_CreateIndirect</a> from button_createindirect.o(i.BUTTON_CreateIndirect) referenced 249 times from custommessagebox.o(.constdata)
 <LI><a href="#[34]">BusFault_Handler</a> from stm32f4xx_it.o(i.BusFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4e]">CAN1_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4f]">CAN1_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[50]">CAN1_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4d]">CAN1_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7a]">CAN2_RX0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7b]">CAN2_RX1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7c]">CAN2_SCE_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[79]">CAN2_TX_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[89]">CRYP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[98]">Callback</a> from blastterminationfromappdlg.o(i.Callback) referenced from blastterminationfromappdlg.o(i.BlastTerminationFromAppDlg)
 <LI><a href="#[b2]">Callback</a> from blastcanneldlg.o(i.Callback) referenced from blastcanneldlg.o(i.ShowBlastCannelDlg)
 <LI><a href="#[b3]">Callback</a> from blastdelaydlg.o(i.Callback) referenced from blastdelaydlg.o(i.ShowBlastDelayDlg)
 <LI><a href="#[b4]">Callback</a> from blastdetdlg.o(i.Callback) referenced from blastdetdlg.o(i.ShowBlastDetDlg)
 <LI><a href="#[b5]">Callback</a> from blastenterdlg.o(i.Callback) referenced from blastenterdlg.o(i.ShowBlastEnterDlg)
 <LI><a href="#[b6]">Callback</a> from blastinfoverifydlg.o(i.Callback) referenced from blastinfoverifydlg.o(i.ShowBlastInfoVerifyDlg)
 <LI><a href="#[b7]">Callback</a> from blastmasterprocessdlg.o(i.Callback) referenced from blastmasterprocessdlg.o(i.ShowBlastMasterProcessDlg)
 <LI><a href="#[b8]">Callback</a> from blastprocessdlg.o(i.Callback) referenced from blastprocessdlg.o(i.ShowBlastProcessDlg)
 <LI><a href="#[b9]">Callback</a> from blastrecorderdetinfolistdlg.o(i.Callback) referenced from blastrecorderdetinfolistdlg.o(i.ShowBlastRecorderDetInfoListDlg)
 <LI><a href="#[ba]">Callback</a> from blastrecorderdetaileddlg.o(i.Callback) referenced from blastrecorderdetaileddlg.o(i.ShowBlastRecorderDetailedDlg)
 <LI><a href="#[bb]">Callback</a> from blastrecorderlistviewdlg.o(i.Callback) referenced from blastrecorderlistviewdlg.o(i.ShowBlastRecorderListViewDlg)
 <LI><a href="#[bc]">Callback</a> from blastrecordermasterbriefdlg.o(i.Callback) referenced from blastrecordermasterbriefdlg.o(i.ShowBlastRecorderMasterBriefDlg)
 <LI><a href="#[bd]">Callback</a> from blastrecorderslaveinfolistdlg.o(i.Callback) referenced from blastrecorderslaveinfolistdlg.o(i.ShowBlastRecorderSlaveInfoListDlg)
 <LI><a href="#[be]">Callback</a> from blasttestreportdlg.o(i.Callback) referenced from blasttestreportdlg.o(i.ShowBlastTestReportDlg)
 <LI><a href="#[bf]">Callback</a> from bluehoststatusdlg.o(i.Callback) referenced from bluehoststatusdlg.o(i.ShowBlueHostStatusDlg)
 <LI><a href="#[c0]">Callback</a> from buserrorrestoredlg.o(i.Callback) referenced from buserrorrestoredlg.o(i.ShowBusErrorRestoreDlg)
 <LI><a href="#[c1]">Callback</a> from colorsetdlg.o(i.Callback) referenced from colorsetdlg.o(i.ShowColorSetDlg)
 <LI><a href="#[c2]">Callback</a> from delaymodifybatchdlg.o(i.Callback) referenced from delaymodifybatchdlg.o(i.ShowDelayModifyBatchDlg)
 <LI><a href="#[c3]">Callback</a> from delaymodifysingledlg.o(i.Callback) referenced from delaymodifysingledlg.o(i.ShowDelayModifySingleDlg)
 <LI><a href="#[c4]">Callback</a> from delaysampleprocessblastdetdlg.o(i.Callback) referenced from delaysampleprocessblastdetdlg.o(i.ShowDelaySampleProcessBlastDetDlg)
 <LI><a href="#[c5]">Callback</a> from delaysampleprocessdelayinputdlg.o(i.Callback) referenced from delaysampleprocessdelayinputdlg.o(i.ShowDelaySampleProcessDelayInputDlg)
 <LI><a href="#[c6]">Callback</a> from delaysampleprocessdelayseldlg.o(i.Callback) referenced from delaysampleprocessdelayseldlg.o(i.ShowDelaySampleProcessDelaySelDlg)
 <LI><a href="#[c7]">Callback</a> from delaysampleprocessreadyconfirmdlg.o(i.Callback) referenced from delaysampleprocessreadyconfirmdlg.o(i.ShowDelaySampleProcessReadyConfirmDlg)
 <LI><a href="#[c8]">Callback</a> from delaysampleprocesswaitregdetdlg.o(i.Callback) referenced from delaysampleprocesswaitregdetdlg.o(i.ShowDelaySampleProcessWaitRegDetDlg)
 <LI><a href="#[c9]">Callback</a> from deletedetinputholeinfodlg.o(i.Callback) referenced from deletedetinputholeinfodlg.o(i.ShowDeleteDetInputHoleInfoDlg)
 <LI><a href="#[ca]">Callback</a> from deletedetmenudlg.o(i.Callback) referenced from deletedetmenudlg.o(i.ShowDeleteDetMenuDlg)
 <LI><a href="#[cb]">Callback</a> from detaccrediterrorfordldlg.o(i.Callback) referenced from detaccrediterrorfordldlg.o(i.ShowDetAccreditErrorForDLDlg)
 <LI><a href="#[cc]">Callback</a> from detanalystblastdlg.o(i.Callback) referenced from detanalystblastdlg.o(i.ShowDetAnalystBlastDlg)
 <LI><a href="#[cd]">Callback</a> from detanalystdlg.o(i.Callback) referenced from detanalystdlg.o(i.ShowDetAnalystDlg)
 <LI><a href="#[ce]">Callback</a> from detanalysthighvoltageinputdlg.o(i.Callback) referenced from detanalysthighvoltageinputdlg.o(i.ShowDetAnalystHighVoltageInputDlg)
 <LI><a href="#[cf]">Callback</a> from detbackupbluetypeseldlg.o(i.Callback) referenced from detbackupbluetypeseldlg.o(i.ShowDetBackupBlueTypeSelDlg)
 <LI><a href="#[d0]">Callback</a> from detbackupoperatebluetypeseldlg.o(i.Callback) referenced from detbackupoperatebluetypeseldlg.o(i.ShowDetBackupOperateBlueTypeSelDlg)
 <LI><a href="#[d1]">Callback</a> from detbackupoperatetypeseldlg.o(i.Callback) referenced from detbackupoperatetypeseldlg.o(i.ShowDetBackupOperateTypeSelDlg)
 <LI><a href="#[d2]">Callback</a> from detbluebackupmenudlg.o(i.Callback) referenced from detbluebackupmenudlg.o(i.ShowDetBlueBackupMenuDlg)
 <LI><a href="#[d3]">Callback</a> from detblueinsertmenudlg.o(i.Callback) referenced from detblueinsertmenudlg.o(i.ShowDetBlueInsertMenuDlg)
 <LI><a href="#[d4]">Callback</a> from detcodewritemenudlg.o(i.Callback) referenced from detcodewritemenudlg.o(i.ShowDetCodeWriteMenuDlg)
 <LI><a href="#[d5]">Callback</a> from detcodewritestatusdlg.o(i.Callback) referenced from detcodewritestatusdlg.o(i.ShowDetCodeWriteStatusDlg)
 <LI><a href="#[d6]">Callback</a> from detinfoinsertstatusdlg.o(i.Callback) referenced from detinfoinsertstatusdlg.o(i.ShowDetInfoInsertStatusDlg)
 <LI><a href="#[d7]">Callback</a> from detinfoinsertrangeinputdlg.o(i.Callback) referenced from detinfoinsertrangeinputdlg.o(i.ShowDetInsertRangeInputDlg)
 <LI><a href="#[d8]">Callback</a> from detoutsideinputdlg.o(i.Callback) referenced from detoutsideinputdlg.o(i.ShowDetOutsideInputDlg)
 <LI><a href="#[d9]">Callback</a> from detslavebackupmenudlg.o(i.Callback) referenced from detslavebackupmenudlg.o(i.ShowDetSlaveBackupMenuDlg)
 <LI><a href="#[da]">Callback</a> from dettypesetdlg.o(i.Callback) referenced from dettypesetdlg.o(i.ShowDetTypeSetDlg)
 <LI><a href="#[db]">Callback</a> from devicechargestartdlg.o(i.Callback) referenced from devicechargestartdlg.o(i.ShowDeviceChargeStartDlg)
 <LI><a href="#[dc]">Callback</a> from deviceinfodlg.o(i.Callback) referenced from deviceinfodlg.o(i.ShowDeviceInfoDlg)
 <LI><a href="#[dd]">Callback</a> from devicenamesetdlg.o(i.Callback) referenced from devicenamesetdlg.o(i.ShowDeviceNameSetDlg)
 <LI><a href="#[de]">Callback</a> from deviceselftestdlg.o(i.Callback) referenced from deviceselftestdlg.o(i.ShowDeviceSelfTestDlg)
 <LI><a href="#[df]">Callback</a> from devicestartdlg.o(i.Callback) referenced from devicestartdlg.o(i.ShowDeviceStartDlg)
 <LI><a href="#[e0]">Callback</a> from deviceusagessetdlg.o(i.Callback) referenced from deviceusagessetdlg.o(i.ShowDeviceUsagesSetDlg)
 <LI><a href="#[e1]">Callback</a> from dkeypasswdmodifydlg.o(i.Callback) referenced from dkeypasswdmodifydlg.o(i.ShowDkeyPasswdModifyDlg)
 <LI><a href="#[e2]">Callback</a> from filesystemformatdlg.o(i.Callback) referenced from filesystemformatdlg.o(i.ShowFileSystemFormatDlg)
 <LI><a href="#[e3]">Callback</a> from helptooldettestdlg.o(i.Callback) referenced from helptooldettestdlg.o(i.ShowHelpToolDetTestDlg)
 <LI><a href="#[e4]">Callback</a> from helptoolmenudlg.o(i.Callback) referenced from helptoolmenudlg.o(i.ShowHelpToolMenuDlg)
 <LI><a href="#[e5]">Callback</a> from infomanagedlg.o(i.Callback) referenced from infomanagedlg.o(i.ShowInfoManageDlg)
 <LI><a href="#[e6]">Callback</a> from loadingdlg.o(i.Callback) referenced from loadingdlg.o(i.ShowLoadingDlg)
 <LI><a href="#[e7]">Callback</a> from logrecorderlistviewdlg.o(i.Callback) referenced from logrecorderlistviewdlg.o(i.ShowLogRecorderListViewDlg)
 <LI><a href="#[e8]">Callback</a> from loguploaddlg.o(i.Callback) referenced from loguploaddlg.o(i.ShowLogUploadDlg)
 <LI><a href="#[e9]">Callback</a> from mainmenudlg.o(i.Callback) referenced from mainmenudlg.o(i.ShowMainMenuDlg)
 <LI><a href="#[ea]">Callback</a> from mainmenumoredlg.o(i.Callback) referenced from mainmenumoredlg.o(i.ShowMainMenuMoreDlg)
 <LI><a href="#[eb]">Callback</a> from mastertimesharesetdlg.o(i.Callback) referenced from mastertimesharesetdlg.o(i.ShowMasterTimeShareSetDlg)
 <LI><a href="#[ec]">Callback</a> from custommessagebox.o(i.Callback) referenced from custommessagebox.o(i.ShowMsgBox)
 <LI><a href="#[ed]">Callback</a> from netinfodlg.o(i.Callback) referenced from netinfodlg.o(i.ShowNetInfoDlg)
 <LI><a href="#[ee]">Callback</a> from netinfomodifymenudlg.o(i.Callback) referenced from netinfomodifymenudlg.o(i.ShowNetInfoModifyMenuDlg)
 <LI><a href="#[ef]">Callback</a> from netinfomodifyrangeinputdlg.o(i.Callback) referenced from netinfomodifyrangeinputdlg.o(i.ShowNetInfoModifyRangeInputDlg)
 <LI><a href="#[f0]">Callback</a> from netparamlistviewdlg.o(i.Callback) referenced from netparamlistviewdlg.o(i.ShowNetParamListViewDlg)
 <LI><a href="#[f1]">Callback</a> from netparammodifydlg.o(i.Callback) referenced from netparammodifydlg.o(i.ShowNetParamModifyDlg)
 <LI><a href="#[f2]">Callback</a> from nettesterrorlistviewdlg.o(i.Callback) referenced from nettesterrorlistviewdlg.o(i.ShowNetTestErrorListViewDlg)
 <LI><a href="#[f3]">Callback</a> from nettestreportdlg.o(i.Callback) referenced from nettestreportdlg.o(i.ShowNetTestReportDlg)
 <LI><a href="#[f4]">Callback</a> from poweroffdlg.o(i.Callback) referenced from poweroffdlg.o(i.ShowPowerOffDlg)
 <LI><a href="#[f5]">Callback</a> from progbarblastdlg.o(i.Callback) referenced from progbarblastdlg.o(i.ShowProgbarBlastDlg)
 <LI><a href="#[f6]">Callback</a> from progbarchargedlg.o(i.Callback) referenced from progbarchargedlg.o(i.ShowProgbarChargeDlg)
 <LI><a href="#[f7]">Callback</a> from progbarcompletedlg.o(i.Callback) referenced from progbarcompletedlg.o(i.ShowProgbarCompleteDlg)
 <LI><a href="#[f8]">Callback</a> from progbarmaskregdetdlg.o(i.Callback) referenced from progbarmaskregdetdlg.o(i.ShowProgbarMaskRegDetDlg)
 <LI><a href="#[f9]">Callback</a> from progbarquickbeforeblastdlg.o(i.Callback) referenced from progbarquickbeforeblastdlg.o(i.ShowProgbarQuickBeforeBlastDlg)
 <LI><a href="#[fa]">Callback</a> from progbarquickdlg.o(i.Callback) referenced from progbarquickdlg.o(i.ShowProgbarQuickDlg)
 <LI><a href="#[fb]">Callback</a> from regdetfeatureinputforbarcodedlg.o(i.Callback) referenced from regdetfeatureinputforbarcodedlg.o(i.ShowRegDetFeatureInputForBarcodeDlg)
 <LI><a href="#[fc]">Callback</a> from regdetoutsideinputbatchdlg.o(i.Callback) referenced from regdetoutsideinputbatchdlg.o(i.ShowRegDetOutsideInputBatchDlg)
 <LI><a href="#[fd]">Callback</a> from regholeinsertinputdlg.o(i.Callback) referenced from regholeinsertinputdlg.o(i.ShowRegHoleInsertInputDlg)
 <LI><a href="#[fe]">Callback</a> from regholeparaminputdlg.o(i.Callback) referenced from regholeparaminputdlg.o(i.ShowRegHoleParamInputDlg)
 <LI><a href="#[ff]">Callback</a> from regparammenudlg.o(i.Callback) referenced from regparammenudlg.o(i.ShowRegParamMenuDlg)
 <LI><a href="#[100]">Callback</a> from remoteblastslavestatedlg.o(i.Callback) referenced from remoteblastslavestatedlg.o(i.ShowRemoteBlastSlaveStateDlg)
 <LI><a href="#[101]">Callback</a> from slaveaccrediterrorfordldlg.o(i.Callback) referenced from slaveaccrediterrorfordldlg.o(i.ShowSlaveAccreditErrorForDLDlg)
 <LI><a href="#[102]">Callback</a> from slaveinfolistviewdlg.o(i.Callback) referenced from slaveinfolistviewdlg.o(i.ShowSlaveInfoListViewDlg)
 <LI><a href="#[103]">Callback</a> from slavenumbersetdlg.o(i.Callback) referenced from slavenumbersetdlg.o(i.ShowSlaveNumberSetDlg)
 <LI><a href="#[104]">Callback</a> from slavestatusdlg.o(i.Callback) referenced from slavestatusdlg.o(i.ShowSlaveStatusDlg)
 <LI><a href="#[105]">Callback</a> from sliderdlg.o(i.Callback) referenced from sliderdlg.o(i.ShowSliderDlg)
 <LI><a href="#[106]">Callback</a> from softwareupdatedlg.o(i.Callback) referenced from softwareupdatedlg.o(i.ShowSoftwareUpdateDlg)
 <LI><a href="#[107]">Callback</a> from systemsetmenudlg.o(i.Callback) referenced from systemsetmenudlg.o(i.ShowSystemSetMenuDlg)
 <LI><a href="#[108]">Callback</a> from toptitledlg.o(i.Callback) referenced from toptitledlg.o(i.ShowTopTitleDlg)
 <LI><a href="#[109]">Callback</a> from uploadblastrecorddlg.o(i.Callback) referenced from uploadblastrecorddlg.o(i.ShowUploadBlastRecordDlg)
 <LI><a href="#[10a]">Callback</a> from waitlincurrentreadydlg.o(i.Callback) referenced from waitlincurrentreadydlg.o(i.ShowWaitLinCurrentReadyDlg)
 <LI><a href="#[10b]">Callback</a> from waitpoweroffdlg.o(i.Callback) referenced from waitpoweroffdlg.o(i.ShowWaitPowerOffDlg)
 <LI><a href="#[10c]">Callback</a> from waitreglistviewdlg.o(i.Callback) referenced from waitreglistviewdlg.o(i.ShowWaitRegListViewDlg)
 <LI><a href="#[10d]">Callback</a> from wificonnectdlg.o(i.Callback) referenced from wificonnectdlg.o(i.ShowWifiConnectDlg)
 <LI><a href="#[10e]">Callback</a> from wifinetinfodlg.o(i.Callback) referenced from wifinetinfodlg.o(i.ShowWifiNetInfoDlg)
 <LI><a href="#[10f]">Callback</a> from wifinetinitdlg.o(i.Callback) referenced from wifinetinitdlg.o(i.ShowWifiNetInitDlg)
 <LI><a href="#[110]">Callback</a> from wifinetsetdlg.o(i.Callback) referenced from wifinetsetdlg.o(i.ShowWifiNetSetDlg)
 <LI><a href="#[111]">Callback</a> from wifipassworddlg.o(i.Callback) referenced from wifipassworddlg.o(i.ShowWifiPasswordDlg)
 <LI><a href="#[88]">DCMI_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[45]">DMA1_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[46]">DMA1_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[47]">DMA1_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[48]">DMA1_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[49]">DMA1_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[69]">DMA1_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[72]">DMA2_Stream0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[73]">DMA2_Stream1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[74]">DMA2_Stream2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[75]">DMA2_Stream3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[76]">DMA2_Stream4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7e]">DMA2_Stream5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[7f]">DMA2_Stream6_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[80]">DMA2_Stream7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[37]">DebugMon_Handler</a> from stm32f4xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[96]">DeskCallback</a> from mainmenudlg.o(i.DeskCallback) referenced from task.o(i.AppUserGUITask)
 <LI><a href="#[77]">ETH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[78]">ETH_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[40]">EXTI0_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[62]">EXTI15_10_IRQHandler</a> from stm32f4xx_it.o(i.EXTI15_10_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[41]">EXTI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[42]">EXTI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[43]">EXTI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[44]">EXTI4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[51]">EXTI9_5_IRQHandler</a> from stm32f4xx_it.o(i.EXTI9_5_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3e]">FLASH_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[8b]">FPU_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6a]">FSMC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[15b]">GUIMONO_DispChar</a> from gui_charm.o(i.GUIMONO_DispChar) referenced from f6x8.o(.constdata)
 <LI><a href="#[15c]">GUIMONO_GetCharDistX</a> from gui_charm.o(i.GUIMONO_GetCharDistX) referenced from f6x8.o(.constdata)
 <LI><a href="#[15d]">GUIMONO_GetFontInfo</a> from gui_charm.o(i.GUIMONO_GetFontInfo) referenced from f6x8.o(.constdata)
 <LI><a href="#[15e]">GUIMONO_IsInFont</a> from gui_charm.o(i.GUIMONO_IsInFont) referenced from f6x8.o(.constdata)
 <LI><a href="#[14a]">GUIPROP_DispChar</a> from gui_charp.o(i.GUIPROP_DispChar) referenced 4 times from songti16.o(.constdata)
 <LI><a href="#[14b]">GUIPROP_GetCharDistX</a> from gui_charp.o(i.GUIPROP_GetCharDistX) referenced 4 times from songti16.o(.constdata)
 <LI><a href="#[14c]">GUIPROP_GetFontInfo</a> from gui_charp.o(i.GUIPROP_GetFontInfo) referenced 4 times from songti16.o(.constdata)
 <LI><a href="#[14d]">GUIPROP_IsInFont</a> from gui_charp.o(i.GUIPROP_IsInFont) referenced 4 times from songti16.o(.constdata)
 <LI><a href="#[133]">GUI_MEMDEV_Paint1Static</a> from guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static) referenced from wm.o(i._Paint1)
 <LI><a href="#[131]">GUI_MEMDEV__WriteToActiveAlpha</a> from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha) referenced from guidev_32.o(i._GetDevFunc)
 <LI><a href="#[130]">GUI_MEMDEV__WriteToActiveOpaque</a> from guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque) referenced from guidev_16.o(i._GetDevFunc)
 <LI><a href="#[16b]">GUI_MULTIBUF_Begin</a> from gui_multibuf.o(i.GUI_MULTIBUF_Begin) referenced from wm_multibuf.o(.constdata)
 <LI><a href="#[16c]">GUI_MULTIBUF_End</a> from gui_multibuf.o(i.GUI_MULTIBUF_End) referenced from wm_multibuf.o(.constdata)
 <LI><a href="#[9e]">GUI_TIMER_Exec</a> from gui_timer.o(i.GUI_TIMER_Exec) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[1a5]">GUI_USAGE_BM_AddHLine</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1a4]">GUI_USAGE_BM_AddPixel</a> from guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1a6]">GUI_USAGE_BM_Clear</a> from guidev_usagebm.o(i.GUI_USAGE_BM_Clear) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[1a8]">GUI_USAGE_BM_GetNextDirty</a> from guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[2c]">GUI_X_ExecIdle</a> from gui_x_ucosii.o(i.GUI_X_ExecIdle) referenced 2 times from gui_waitevent.o(.data)
 <LI><a href="#[2e]">GUI__MixColors</a> from gui__alpha.o(i.GUI__MixColors) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[2f]">GUI__MixColorsBulk</a> from gui__alpha.o(i.GUI__MixColorsBulk) referenced 2 times from gui__alpha.o(.data)
 <LI><a href="#[8a]">HASH_RNG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[a3]">HEADER_Callback</a> from header.o(i.HEADER_Callback) referenced from header.o(i.HEADER_CreateUser)
 <LI><a href="#[32]">HardFault_Handler</a> from stm32f4xx_it.o(i.HardFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5a]">I2C1_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[59]">I2C1_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5c]">I2C2_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5b]">I2C2_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[83]">I2C3_ER_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[82]">I2C3_EV_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[153]">LCD_DrawHLine</a> from lcd.o(i.LCD_DrawHLine) referenced from gui_core.o(.constdata)
 <LI><a href="#[154]">LCD_DrawPixel</a> from lcd.o(i.LCD_DrawPixel) referenced from gui_core.o(.constdata)
 <LI><a href="#[23]">LCD_GetpPalConvTableBM</a> from lcd_color.o(i.LCD_GetpPalConvTableBM) referenced 2 times from gui_core.o(.data)
 <LI><a href="#[a1]">LCD_Index2Color_888</a> from guicc_888_index2color.o(i.LCD_Index2Color_888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[9d]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced 2 times from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[9d]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
 <LI><a href="#[9d]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui__alpha.o(i.GUI__DoAlphaBlending)
 <LI><a href="#[9d]">LCD_Index2Color_8888</a> from guicc_8888_index2color.o(i.LCD_Index2Color_8888) referenced from gui_drawbitmap_8888.o(i._DrawBitmap_8888)
 <LI><a href="#[14f]">LCD_Index2Color_M565</a> from guicc_m565_index2color.o(i.LCD_Index2Color_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[128]">LCD_SetPixelAA</a> from lcd_aa.o(i.LCD_SetPixelAA) referenced from guiaa_lib.o(i._FlushLine)
 <LI><a href="#[a5]">LISTBOX_Callback</a> from listbox.o(i.LISTBOX_Callback) referenced from listbox.o(i.LISTBOX_CreateUser)
 <LI><a href="#[13c]">LISTBOX_CreateIndirect</a> from listbox_createindirect.o(i.LISTBOX_CreateIndirect) referenced from devicenamesetdlg.o(.constdata)
 <LI><a href="#[a6]">LISTBOX_OwnerDraw</a> from listbox.o(i.LISTBOX_OwnerDraw) referenced from listbox.o(i.LISTBOX_CreateUser)
 <LI><a href="#[a7]">LISTVIEW_Callback</a> from listview.o(i.LISTVIEW_Callback) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[139]">LISTVIEW_CreateIndirect</a> from listview_createindirect.o(i.LISTVIEW_CreateIndirect) referenced 13 times from netinfodlg.o(.constdata)
 <LI><a href="#[a8]">LISTVIEW_OwnerDraw</a> from listview.o(i.LISTVIEW_OwnerDraw) referenced from listview.o(i.LISTVIEW_CreateUser)
 <LI><a href="#[a9]">MULTIEDIT_Callback</a> from multiedit.o(i.MULTIEDIT_Callback) referenced from multiedit.o(i.MULTIEDIT_CreateUser)
 <LI><a href="#[138]">MULTIEDIT_CreateIndirect</a> from multiedit_createindirect.o(i.MULTIEDIT_CreateIndirect) referenced 37 times from blastenterdlg.o(.constdata)
 <LI><a href="#[33]">MemManage_Handler</a> from stm32f4xx_it.o(i.MemManage_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[31]">NMI_Handler</a> from stm32f4xx_it.o(i.NMI_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[8e]">OSTaskSwHook</a> from os_cpu_c.o(i.OSTaskSwHook) referenced from os_cpu_a.o(.text)
 <LI><a href="#[ab]">OSTmr_Task</a> from os_tmr.o(i.OSTmr_Task) referenced from os_tmr.o(i.OSTmr_InitTask)
 <LI><a href="#[ac]">OS_TaskIdle</a> from os_core.o(i.OS_TaskIdle) referenced from os_core.o(i.OS_InitTaskIdle)
 <LI><a href="#[aa]">OS_TaskReturn</a> from os_task.o(i.OS_TaskReturn) referenced from os_cpu_c.o(i.OSTaskStkInit)
 <LI><a href="#[ad]">OS_TaskStat</a> from os_core.o(i.OS_TaskStat) referenced from os_core.o(i.OS_InitTaskStat)
 <LI><a href="#[7d]">OTG_FS_IRQHandler</a> from stm32f4xx_it.o(i.OTG_FS_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[64]">OTG_FS_WKUP_IRQHandler</a> from stm32f4xx_it.o(i.OTG_FS_WKUP_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[85]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[84]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[87]">OTG_HS_IRQHandler</a> from stm32f4xx_it.o(i.OTG_HS_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[86]">OTG_HS_WKUP_IRQHandler</a> from stm32f4xx_it.o(i.OTG_HS_WKUP_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[ae]">PROGBAR_Callback</a> from progbar.o(i.PROGBAR_Callback) referenced from progbar.o(i.PROGBAR_CreateUser)
 <LI><a href="#[13d]">PROGBAR_CreateIndirect</a> from progbar_createindirect.o(i.PROGBAR_CreateIndirect) referenced 8 times from progbarblastdlg.o(.constdata)
 <LI><a href="#[3b]">PVD_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[38]">PendSV_Handler</a> from os_cpu_a.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[af]">RADIO_Callback</a> from radio.o(i.RADIO_Callback) referenced from radio.o(i.RADIO_CreateUser)
 <LI><a href="#[13b]">RADIO_CreateIndirect</a> from radio_createindirect.o(i.RADIO_CreateIndirect) referenced 6 times from wifinetsetdlg.o(.constdata)
 <LI><a href="#[25]">RADIO__GetButtonSize</a> from radio.o(i.RADIO__GetButtonSize) referenced 2 times from radio.o(.data)
 <LI><a href="#[3f]">RCC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[63]">RTC_Alarm_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[3d]">RTC_WKUP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[30]">Reset_Handler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[b0]">SCROLLBAR_Callback</a> from scrollbar.o(i.SCROLLBAR_Callback) referenced from scrollbar.o(i.SCROLLBAR_CreateUser)
 <LI><a href="#[124]">SCROLLBAR_Dec</a> from scrollbar.o(i.SCROLLBAR_Dec) referenced from multiedit.o(i._AddKey)
 <LI><a href="#[125]">SCROLLBAR_Inc</a> from scrollbar.o(i.SCROLLBAR_Inc) referenced from multiedit.o(i._AddKey)
 <LI><a href="#[6b]">SDIO_IRQHandler</a> from stm32f4xx_it.o(i.SDIO_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[b1]">SLIDER_Callback</a> from slider.o(i.SLIDER_Callback) referenced from slider.o(i.SLIDER_CreateUser)
 <LI><a href="#[13a]">SLIDER_CreateIndirect</a> from slider_createindirect.o(i.SLIDER_CreateIndirect) referenced from sliderdlg.o(.constdata)
 <LI><a href="#[5d]">SPI1_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5e]">SPI2_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6d]">SPI3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[36]">SVC_Handler</a> from stm32f4xx_it.o(i.SVC_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[39]">SysTick_Handler</a> from stm32f4xx_it.o(i.SysTick_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[8c]">SystemInit</a> from system_stm32f4xx.o(i.SystemInit) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[3c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[112]">TEXT_Callback</a> from text.o(i.TEXT_Callback) referenced from text.o(i.TEXT_CreateUser)
 <LI><a href="#[137]">TEXT_CreateIndirect</a> from text_createindirect.o(i.TEXT_CreateIndirect) referenced 115 times from custommessagebox.o(.constdata)
 <LI><a href="#[52]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[55]">TIM1_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[54]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[53]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[56]">TIM2_IRQHandler</a> from stm32f4xx_it.o(i.TIM2_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[57]">TIM3_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[58]">TIM4_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6c]">TIM5_IRQHandler</a> from stm32f4xx_it.o(i.TIM5_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[70]">TIM6_DAC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[71]">TIM7_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[65]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[68]">TIM8_CC_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[67]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[66]">TIM8_UP_TIM13_IRQHandler</a> from stm32f4xx_it.o(i.TIM8_UP_TIM13_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6e]">UART4_IRQHandler</a> from stm32f4xx_it.o(i.UART4_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[6f]">UART5_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[5f]">USART1_IRQHandler</a> from stm32f4xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[60]">USART2_IRQHandler</a> from stm32f4xx_it.o(i.USART2_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[61]">USART3_IRQHandler</a> from stm32f4xx_it.o(i.USART3_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[81]">USART6_IRQHandler</a> from stm32f4xx_it.o(i.USART6_IRQHandler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[4]">USBD_DataInStage</a> from usbd_core.o(i.USBD_DataInStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[3]">USBD_DataOutStage</a> from usbd_core.o(i.USBD_DataOutStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[1a]">USBD_HID_ConfigStrDescriptor</a> from usbd_hid_desc.o(i.USBD_HID_ConfigStrDescriptor) referenced 2 times from usbd_hid_desc.o(.data)
 <LI><a href="#[f]">USBD_HID_DataIn</a> from usbd_hid_core.o(i.USBD_HID_DataIn) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[10]">USBD_HID_DataOut</a> from usbd_hid_core.o(i.USBD_HID_DataOut) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[d]">USBD_HID_DeInit</a> from usbd_hid_core.o(i.USBD_HID_DeInit) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[15]">USBD_HID_DeviceDescriptor</a> from usbd_hid_desc.o(i.USBD_HID_DeviceDescriptor) referenced 2 times from usbd_hid_desc.o(.data)
 <LI><a href="#[11]">USBD_HID_GetCfgDesc</a> from usbd_hid_core.o(i.USBD_HID_GetCfgDesc) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[c]">USBD_HID_Init</a> from usbd_hid_core.o(i.USBD_HID_Init) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[1b]">USBD_HID_InterfaceStrDescriptor</a> from usbd_hid_desc.o(i.USBD_HID_InterfaceStrDescriptor) referenced 2 times from usbd_hid_desc.o(.data)
 <LI><a href="#[16]">USBD_HID_LangIDStrDescriptor</a> from usbd_hid_desc.o(i.USBD_HID_LangIDStrDescriptor) referenced 2 times from usbd_hid_desc.o(.data)
 <LI><a href="#[17]">USBD_HID_ManufacturerStrDescriptor</a> from usbd_hid_desc.o(i.USBD_HID_ManufacturerStrDescriptor) referenced 2 times from usbd_hid_desc.o(.data)
 <LI><a href="#[18]">USBD_HID_ProductStrDescriptor</a> from usbd_hid_desc.o(i.USBD_HID_ProductStrDescriptor) referenced 2 times from usbd_hid_desc.o(.data)
 <LI><a href="#[19]">USBD_HID_SerialStrDescriptor</a> from usbd_hid_desc.o(i.USBD_HID_SerialStrDescriptor) referenced 2 times from usbd_hid_desc.o(.data)
 <LI><a href="#[e]">USBD_HID_Setup</a> from usbd_hid_core.o(i.USBD_HID_Setup) referenced 2 times from usbd_hid_core.o(.data)
 <LI><a href="#[a]">USBD_IsoINIncomplete</a> from usbd_core.o(i.USBD_IsoINIncomplete) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[b]">USBD_IsoOUTIncomplete</a> from usbd_core.o(i.USBD_IsoOUTIncomplete) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[7]">USBD_Reset</a> from usbd_core.o(i.USBD_Reset) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[9]">USBD_Resume</a> from usbd_core.o(i.USBD_Resume) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[6]">USBD_SOF</a> from usbd_core.o(i.USBD_SOF) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[5]">USBD_SetupStage</a> from usbd_core.o(i.USBD_SetupStage) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[8]">USBD_Suspend</a> from usbd_core.o(i.USBD_Suspend) referenced 2 times from usbd_core.o(.data)
 <LI><a href="#[1e]">USBD_USR_DeviceConfigured</a> from usbd_usr.o(i.USBD_USR_DeviceConfigured) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[21]">USBD_USR_DeviceConnected</a> from usbd_usr.o(i.USBD_USR_DeviceConnected) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[22]">USBD_USR_DeviceDisconnected</a> from usbd_usr.o(i.USBD_USR_DeviceDisconnected) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[1d]">USBD_USR_DeviceReset</a> from usbd_usr.o(i.USBD_USR_DeviceReset) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[20]">USBD_USR_DeviceResumed</a> from usbd_usr.o(i.USBD_USR_DeviceResumed) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[1f]">USBD_USR_DeviceSuspended</a> from usbd_usr.o(i.USBD_USR_DeviceSuspended) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[1c]">USBD_USR_Init</a> from usbd_usr.o(i.USBD_USR_Init) referenced 2 times from usbd_usr.o(.data)
 <LI><a href="#[13]">USBH_Connected</a> from usbh_core.o(i.USBH_Connected) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[14]">USBH_Disconnected</a> from usbh_core.o(i.USBH_Disconnected) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[12]">USBH_SOF</a> from usbh_core.o(i.USBH_SOF) referenced 2 times from usbh_core.o(.data)
 <LI><a href="#[35]">UsageFault_Handler</a> from stm32f4xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[1a9]">WIDGET_EFFECT_3D_DrawUp</a> from widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp) referenced from widget_effect_3d.o(.constdata)
 <LI><a href="#[11f]">WINDOW_Callback</a> from window.o(i.WINDOW_Callback) referenced from window.o(i.WINDOW_CreateUser)
 <LI><a href="#[135]">WINDOW_CreateIndirect</a> from window.o(i.WINDOW_CreateIndirect) referenced 97 times from custommessagebox.o(.constdata)
 <LI><a href="#[134]">WM__Paint1</a> from wm.o(i.WM__Paint1) referenced from wm.o(i._Paint1)
 <LI><a href="#[3a]">WWDG_IRQHandler</a> from startup_stm32f40_41xxx.o(.text) referenced from startup_stm32f40_41xxx.o(RESET)
 <LI><a href="#[127]">_CalcPositions</a> from scrollbar_skinclassic.o(i._CalcPositions) referenced from scrollbar_skinclassic.o(i._Create)
 <LI><a href="#[159]">_CalcSizeOfChar</a> from gui_uc_encodeutf8.o(i._CalcSizeOfChar) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[151]">_Color2IndexBulk</a> from guicc_m565.o(i._Color2IndexBulk) referenced 2 times from guicc_m565.o(.constdata)
 <LI><a href="#[191]">_Color2Index_0</a> from guicc_0.o(i._Color2Index_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[194]">_Color2Index_8888</a> from guicc_8888.o(i._Color2Index_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[14e]">_Color2Index_M565</a> from guicc_m565.o(i._Color2Index_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[175]">_Create</a> from button_skinclassic.o(i._Create) referenced 6 times from button_skinclassic.o(.constdata)
 <LI><a href="#[13e]">_DrawBitmap</a> from guidrv_template.o(i._DrawBitmap) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[156]">_DrawBitmapHW_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmapHW_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[155]">_DrawBitmap_8888</a> from gui_drawbitmap_8888.o(i._DrawBitmap_8888) referenced from gui_drawbitmap_8888.o(.constdata)
 <LI><a href="#[182]">_DrawDown</a> from widget_effect_none.o(i._DrawDown) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[183]">_DrawDownRect</a> from widget_effect_none.o(i._DrawDownRect) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[184]">_DrawFlat</a> from widget_effect_none.o(i._DrawFlat) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[13f]">_DrawHLine</a> from guidrv_template.o(i._DrawHLine) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[9b]">_DrawHLine</a> from guiaa_lib.o(i._DrawHLine) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[180]">_DrawUp</a> from widget_effect_none.o(i._DrawUp) referenced from widget_effect_none.o(.constdata)
 <LI><a href="#[181]">_DrawUpRect</a> from widget_effect_none.o(i._DrawUpRect) referenced 2 times from widget_effect_none.o(.constdata)
 <LI><a href="#[140]">_DrawVLine</a> from guidrv_template.o(i._DrawVLine) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[15a]">_Encode</a> from gui_uc_encodeutf8.o(i._Encode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[141]">_FillRect</a> from guidrv_template.o(i._FillRect) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[1a7]">_GUI_USAGE_BM_Delete</a> from guidev_usagebm.o(i._GUI_USAGE_BM_Delete) referenced from guidev_usagebm.o(.constdata)
 <LI><a href="#[2d]">_GetButtonSize</a> from radio_skinclassic.o(i._GetButtonSize) referenced 2 times from radio_skinclassic.o(.data)
 <LI><a href="#[157]">_GetCharCode</a> from gui_uc_encodeutf8.o(i._GetCharCode) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[158]">_GetCharSize</a> from gui_uc_encodeutf8.o(i._GetCharSize) referenced 2 times from gui_uc_encodeutf8.o(.constdata)
 <LI><a href="#[2a]">_GetCharWrap</a> from gui__wrap.o(i._GetCharWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[28]">_GetCursorCharacter</a> from gui__getcursorpos.o(i._GetCursorCharacter) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[27]">_GetCursorPosChar</a> from gui__getcursorpos.o(i._GetCursorPosChar) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[26]">_GetCursorPosX</a> from gui__getcursorpos.o(i._GetCursorPosX) referenced 2 times from gui__getcursorpos.o(.data)
 <LI><a href="#[148]">_GetDevData</a> from guidrv_template.o(i._GetDevData) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[146]">_GetDevFunc</a> from guidrv_template.o(i._GetDevFunc) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[147]">_GetDevProp</a> from guidrv_template.o(i._GetDevProp) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[193]">_GetIndexMask_0</a> from guicc_0.o(i._GetIndexMask_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[195]">_GetIndexMask_8888</a> from guicc_8888.o(i._GetIndexMask_8888) referenced from guicc_8888.o(.constdata)
 <LI><a href="#[150]">_GetIndexMask_M565</a> from guicc_m565.o(i._GetIndexMask_M565) referenced from guicc_m565.o(.constdata)
 <LI><a href="#[142]">_GetPixelIndex</a> from guidrv_template.o(i._GetPixelIndex) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[149]">_GetRect</a> from guidrv_template.o(i._GetRect) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[29]">_GetWordWrap</a> from gui__wrap.o(i._GetWordWrap) referenced 2 times from gui__wrap.o(.data)
 <LI><a href="#[152]">_Index2ColorBulk</a> from guicc_m565.o(i._Index2ColorBulk) referenced 2 times from guicc_m565.o(.constdata)
 <LI><a href="#[192]">_Index2Color_0</a> from guicc_0.o(i._Index2Color_0) referenced from guicc_0.o(.constdata)
 <LI><a href="#[12c]">_Init</a> from guidrv_template.o(i._Init) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[2b]">_Log2VisBuffered</a> from gui_charline.o(i._Log2VisBuffered) referenced 2 times from gui_charline.o(.data)
 <LI><a href="#[12e]">_Off</a> from guidrv_template.o(i._Off) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[12d]">_On</a> from guidrv_template.o(i._On) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[99]">_OnExit</a> from gui_task.o(i._OnExit) referenced from gui_task.o(i.GUITASK_Init)
 <LI><a href="#[9a]">_OnExit</a> from guiaa_lib.o(i._OnExit) referenced from guiaa_lib.o(i.GUI_AA_Init)
 <LI><a href="#[9c]">_OnExit</a> from gui_curs1.o(i._OnExit) referenced from gui_curs1.o(i.GUI_CURSOR_SelectEx)
 <LI><a href="#[9f]">_OnExit</a> from gui_timer.o(i._OnExit) referenced from gui_timer.o(i.GUI_TIMER_Create)
 <LI><a href="#[a0]">_OnExit</a> from gui_core.o(i._OnExit) referenced from gui_core.o(i.GUI__Config)
 <LI><a href="#[a2]">_OnExit</a> from gui__alpha.o(i._OnExit) referenced from gui__alpha.o(i.GUI__GetAlphaBuffer)
 <LI><a href="#[a4]">_OnExit</a> from lcd_color.o(i._OnExit) referenced from lcd_color.o(i.LCD_InitColors)
 <LI><a href="#[122]">_OnExit</a> from wm.o(i._OnExit) referenced from wm.o(i.WM_Init)
 <LI><a href="#[132]">_OnExit</a> from gui_alloc.o(i._OnExit) referenced from gui_alloc.o(i._InitOnce)
 <LI><a href="#[24]">_OnTouchDefault</a> from button.o(i._OnTouchDefault) referenced 2 times from button.o(.data)
 <LI><a href="#[174]">_Paint</a> from button_skinclassic.o(i._Paint) referenced 6 times from button_skinclassic.o(.constdata)
 <LI><a href="#[172]">_SetBkColor</a> from lcd.o(i._SetBkColor) referenced from lcd.o(.constdata)
 <LI><a href="#[171]">_SetColor</a> from lcd.o(i._SetColor) referenced from lcd.o(.constdata)
 <LI><a href="#[173]">_SetDrawMode</a> from lcd.o(i._SetDrawMode) referenced from lcd.o(.constdata)
 <LI><a href="#[12f]">_SetLUTEntry</a> from guidrv_template.o(i._SetLUTEntry) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[145]">_SetOrg</a> from guidrv_template.o(i._SetOrg) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[143]">_SetPixelIndex</a> from guidrv_template.o(i._SetPixelIndex) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[12b]">_SetSize</a> from guidrv_template.o(i._SetSize) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[129]">_SetVRAMAddr</a> from guidrv_template.o(i._SetVRAMAddr) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[12a]">_SetVSize</a> from guidrv_template.o(i._SetVSize) referenced from guidrv_template.o(i._GetDevFunc)
 <LI><a href="#[144]">_XorPixel</a> from guidrv_template.o(i._XorPixel) referenced 4 times from guidrv_template.o(.constdata)
 <LI><a href="#[1ad]">__main</a> from __main.o(!!!main) referenced from startup_stm32f40_41xxx.o(.text)
 <LI><a href="#[126]">_cbInvalidateOne</a> from wm_bringtotop.o(i._cbInvalidateOne) referenced from wm_bringtotop.o(i._BringToTop)
 <LI><a href="#[123]">_cbPaintMemDev</a> from wm.o(i._cbPaintMemDev) referenced from wm.o(i.WM__Paint)
 <LI><a href="#[120]">_cbTimer</a> from wm_timer.o(i._cbTimer) referenced from wm_timer.o(i.WM_CreateTimer)
 <LI><a href="#[95]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[92]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[91]">_sbackspace</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[93]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[90]">_sgetc</a> from _sgetc.o(.text) referenced from __0sscanf.o(.text)
 <LI><a href="#[8f]">_sputc</a> from _sputc.o(.text) referenced from __2sprintf.o(.text)
 <LI><a href="#[121]">cbBackWin</a> from wm.o(i.cbBackWin) referenced from wm.o(i.WM_Init)
 <LI><a href="#[94]">isspace</a> from isspace.o(.text) referenced from scanf_char.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[1ad]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[1ae]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[1b0]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[959]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[95a]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[95b]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[95c]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[95d]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[1b1]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[1d6]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[1b3]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1b5]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[1b6]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[1b8]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[1ba]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[95e]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[1c6]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[1bc]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[95f]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[1be]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[960]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[961]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[962]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[1c0]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000010))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[963]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[964]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[1c1]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[965]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[966]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[967]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[968]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[969]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[96a]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[96b]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[96c]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[96d]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[96e]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[96f]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[970]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[971]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[1cb]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[972]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[973]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[974]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[975]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[976]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[977]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[1af]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[978]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[1c3]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[1c5]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[979]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[1c7]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; OSInit &rArr; OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[97a]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[205]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[1ca]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[97b]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[1cc]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[30]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[89]"></a>CRYP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[7e]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>FSMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[8a]"></a>HASH_RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f40_41xxx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[201]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f40_41xxx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[737]"></a>OS_CPU_SR_Save</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[738]"></a>OS_CPU_SR_Restore</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
<LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[74f]"></a>OSStartHighRdy</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
</UL>

<P><STRONG><a name="[760]"></a>OSCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[747]"></a>OSIntCtxSw</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
</UL>

<P><STRONG><a name="[38]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, os_cpu_a.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[1ce]"></a>__2sprintf</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, __2sprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllAccreditErrorFile
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSTM32ChipIDStr
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSInfoTimeIsPass
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCode2UIDStr
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcStructToTimeString
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAddrU32ToString
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetStartBlast
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileVerifyResultData
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileDataData
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataSecondPackFromRecorder
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataFirstPackFromRecorder
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedHexFileSize
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAccreditErrorFile
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenBlasterRecordFile
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedFileExistState
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileIndex
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileCount
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserDataToMULTIEDIT
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyUserInfoError
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorString2ForDL
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorString1ForDL
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataFirstPack
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataEndPack
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListBoxData
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllUnRegFollow
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaud
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[1d1]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[1d2]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>

<P><STRONG><a name="[1d0]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[1b4]"></a>_printf_int_dec</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
</UL>

<P><STRONG><a name="[1b7]"></a>_printf_int_hex</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[97c]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[1d4]"></a>__printf</STRONG> (Thumb, 390 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[1d7]"></a>__0sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileU32
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
</UL>

<P><STRONG><a name="[1d9]"></a>_scanf_int</STRONG> (Thumb, 336 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[2b8]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatIsSameForDetInfo
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatForDetInfo
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasterIs36
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasterIs04
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecoderUploadState
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderIndexFromFileName
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFeatureDefult
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderIndexFromFileName
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HelpSupportEnter
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveFilter
</UL>

<P><STRONG><a name="[355]"></a>strcpy</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, strcpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecoderUploadState
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSetServerReadyForUpdateData
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileVerifyResultData
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfoData
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataSecondPackFromRecorder
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataFirstPackFromRecorder
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedFileExistState
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderFileSize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderDeviceUsages
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderDeviceName
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp2
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetTypeName
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorString2ForDL
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorString1ForDL
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataFirstPack
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataEndPack
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>

<P><STRONG><a name="[215]"></a>strlen</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, strlen.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHardwareVersion
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSetServerReadyForUpdateData
<LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileVerifyResultData
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfoData
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataSecondPackFromRecorder
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataFirstPackFromRecorder
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddrStringToU32
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderIndexFromFileName
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderFileSize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderIndexFromFileName
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp2
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HelpSupportEnter
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataFirstPack
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataEndPack
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveFilter
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaud
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>

<P><STRONG><a name="[517]"></a>strncmp</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>

<P><STRONG><a name="[1de]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U16DataFallRank
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_tedata
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMC_FormatAnalyze
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerCurrentTime
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastGPSInfo
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSameWifiScanResult
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueScanSlave
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileData
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetData
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveFilter
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueWaitReceive
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitReceive
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_DataOut
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[1db]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[97d]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[8fe]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[1dd]"></a>__rt_memmove</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, rt_memmove_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__memmove_aligned
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[97e]"></a>__memmove_lastfew</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_v6.o(.text), UNUSED)

<P><STRONG><a name="[1dc]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnDelay
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove_w
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[97f]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[980]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[981]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[1e0]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFactoryConfigParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_AddHLine
</UL>

<P><STRONG><a name="[1e5]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_tedata
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMC_FormatAnalyze
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerCurrentTime
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueScanSlave
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_Pack
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsZEBRA
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>

<P><STRONG><a name="[1e2]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[1e1]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[217]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFactoryConfigParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleMaxMinRegInside
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetInfo
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderFileSize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Clear
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[982]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[983]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[1e3]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[1e4]"></a>strncpy</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
</UL>

<P><STRONG><a name="[440]"></a>strcmp</STRONG> (Thumb, 128 bytes, Stack size 0 bytes, strcmpv7m.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSameWifiScanResult
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[1e6]"></a>mktime</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeDifferSec
</UL>

<P><STRONG><a name="[984]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[985]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[986]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[1e8]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>

<P><STRONG><a name="[1ea]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[1d3]"></a>_printf_int_common</STRONG> (Thumb, 184 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[987]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[1f1]"></a>_printf_fp_dec_real</STRONG> (Thumb, 628 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[1cf]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[8f]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> __2sprintf.o(.text)
</UL>
<P><STRONG><a name="[1f4]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[1b9]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[1bb]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[1da]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>

<P><STRONG><a name="[1f8]"></a>_scanf_really_real</STRONG> (Thumb, 672 bytes, Stack size 120 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>

<P><STRONG><a name="[1d8]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[90]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[91]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __0sscanf.o(.text)
</UL>
<P><STRONG><a name="[988]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[989]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[1fd]"></a>__rt_memmove_w</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[1df]"></a>__memmove_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memmove
</UL>

<P><STRONG><a name="[98a]"></a>__memmove_lastfew_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memmove_w.o(.text), UNUSED)

<P><STRONG><a name="[1bf]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
</UL>

<P><STRONG><a name="[1e9]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>

<P><STRONG><a name="[98b]"></a>__errno$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[98c]"></a>__rt_errno_addr$intlibspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr_intlibspace.o(.text), UNUSED)

<P><STRONG><a name="[1f0]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[94]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[1f3]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[1fc]"></a>__vfscanf</STRONG> (Thumb, 876 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[1ec]"></a>_btod_etento</STRONG> (Thumb, 222 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[98d]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[200]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[98e]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[1c4]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[1fe]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[202]"></a>_scanf_really_hex_real</STRONG> (Thumb, 776 bytes, Stack size 80 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>

<P><STRONG><a name="[958]"></a>_scanf_really_infnan</STRONG> (Thumb, 298 bytes, Stack size 72 bytes, scanf_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
</UL>

<P><STRONG><a name="[1c9]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[203]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[98f]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[1cd]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[990]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[991]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[992]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[1ed]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[207]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[206]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[20a]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[208]"></a>_e2d</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, btod.o(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[209]"></a>_e2e</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[1ee]"></a>_btod_ediv</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1f7]"></a>_btod_edivd</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[1ef]"></a>_btod_emul</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1f6]"></a>_btod_emuld</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, btod.o(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[20b]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[20c]"></a>ADCConfig</STRONG> (Thumb, 270 bytes, Stack size 56 bytes, adc.o(i.ADCConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ADCConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CommonInit
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[213]"></a>ADC_Cmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCConfig
</UL>

<P><STRONG><a name="[211]"></a>ADC_CommonInit</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_CommonInit))
<BR><BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCConfig
</UL>

<P><STRONG><a name="[64c]"></a>ADC_GetConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_GetConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[64b]"></a>ADC_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[212]"></a>ADC_Init</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, stm32f4xx_adc.o(i.ADC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ADC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCConfig
</UL>

<P><STRONG><a name="[649]"></a>ADC_RegularChannelConfig</STRONG> (Thumb, 184 bytes, Stack size 20 bytes, stm32f4xx_adc.o(i.ADC_RegularChannelConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_RegularChannelConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[64a]"></a>ADC_SoftwareStartConv</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_adc.o(i.ADC_SoftwareStartConv))
<BR><BR>[Called By]<UL><LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[214]"></a>AccreditAreaVerifyForDL</STRONG> (Thumb, 524 bytes, Stack size 136 bytes, recorder.o(i.AccreditAreaVerifyForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = AccreditAreaVerifyForDL &rArr; GPSFormatConvert &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileU32
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[21d]"></a>AccreditOneDeviceForDL</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, midfunction.o(i.AccreditOneDeviceForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = AccreditOneDeviceForDL &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
</UL>

<P><STRONG><a name="[35e]"></a>Adc2VoltageOrCurrent</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, adc.o(i.Adc2VoltageOrCurrent))
<BR><BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusCurrentRangeMax
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLowCurrent
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusHighCurrent
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusCurrentInRange
</UL>

<P><STRONG><a name="[227]"></a>AddCurrentDetInfoToBlasterRecord</STRONG> (Thumb, 2156 bytes, Stack size 80 bytes, recorder.o(i.AddCurrentDetInfoToBlasterRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = AddCurrentDetInfoToBlasterRecord &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIndexFromAddrName
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDetInfoToBlasterRecord
</UL>

<P><STRONG><a name="[232]"></a>AddDetInfoToBlasterRecord</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, recorder.o(i.AddDetInfoToBlasterRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = AddDetInfoToBlasterRecord &rArr; AddCurrentDetInfoToBlasterRecord &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetMaxDelay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
</UL>

<P><STRONG><a name="[236]"></a>AddEndFlagToBlasterRecord</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, recorder.o(i.AddEndFlagToBlasterRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = AddEndFlagToBlasterRecord &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
</UL>

<P><STRONG><a name="[237]"></a>AllDetAccreditForDL</STRONG> (Thumb, 268 bytes, Stack size 40 bytes, midfunction.o(i.AllDetAccreditForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176 + Unknown Stack Size
<LI>Call Chain = AllDetAccreditForDL &rArr; AccreditOneDeviceForDL &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllAccreditErrorFile
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditOneDeviceForDL
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[23a]"></a>AllDetFactoryCodeIsRulePass</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, midfunction.o(i.AllDetFactoryCodeIsRulePass))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = AllDetFactoryCodeIsRulePass &rArr; GetDetFactoryCode
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterFactoryCode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFactoryCode
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[23d]"></a>AllDetStartBlast</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, det_operart.o(i.AllDetStartBlast))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = AllDetStartBlast &rArr; XA3_ExpenAllByBlastSignalPin &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ExpenAllByBlastSignalPin
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetBlastOne
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetBlast
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[243]"></a>AllDisCharge</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, det_operart.o(i.AllDisCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ClearAll
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[246]"></a>AllRegDetRankBaseOnDelay</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, midfunction.o(i.AllRegDetRankBaseOnDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AllRegDetRankBaseOnDelay &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[230]"></a>AllRegDetRankBaseOnHoleInfo</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, midfunction.o(i.AllRegDetRankBaseOnHoleInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AllRegDetRankBaseOnHoleInfo &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegHoleMinIndexFromHoleRange
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetErrorDetIndex
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoleMove
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfoNotSave
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[247]"></a>AllReset</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, det_operart.o(i.AllReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = AllReset &rArr; XA3_ResetAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ResetAll
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[249]"></a>AllSlaveBlastDet</STRONG> (Thumb, 472 bytes, Stack size 32 bytes, mastermode.o(i.AllSlaveBlastDet))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = AllSlaveBlastDet &rArr; GetSlaveBlastResult &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveInitState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[24f]"></a>AllSlaveCharge</STRONG> (Thumb, 604 bytes, Stack size 40 bytes, mastermode.o(i.AllSlaveCharge))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = AllSlaveCharge &rArr; GetSlaveBlastChargeResult &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveInitState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[253]"></a>AllSlaveDetTest</STRONG> (Thumb, 2338 bytes, Stack size 48 bytes, mastermode.o(i.AllSlaveDetTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = AllSlaveDetTest &rArr; GetSlaveDetInfo &rArr; GetSlaveDetIndexInfo &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveStatusReset
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveInitState
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSlaveDetNumber
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetNumber
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetInfo
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllSlaveInfo
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveSetRtc
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[256]"></a>AllSlaveSetRtc</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mastermode.o(i.AllSlaveSetRtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = AllSlaveSetRtc &rArr; SetSlaveRtc &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
</UL>

<P><STRONG><a name="[255]"></a>AllSlaveStatusReset</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, mastermode.o(i.AllSlaveStatusReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = AllSlaveStatusReset &rArr; SetSlaveStartOperate &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[11c]"></a>AppBackgroundTask</STRONG> (Thumb, 676 bytes, Stack size 40 bytes, task.o(i.AppBackgroundTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = AppBackgroundTask &rArr; AllDetAccreditForDL &rArr; AccreditOneDeviceForDL &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDacHvValueMinFromVoltage
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaiLinCurrentSteady
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanWork
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CustomSendMessage
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHVProtectPoint
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusCurrentRangeMax
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoInsert
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoBackUp
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[119]"></a>AppDetOperateTask</STRONG> (Thumb, 2012 bytes, Stack size 0 bytes, task.o(i.AppDetOperateTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328 + Unknown Stack Size
<LI>Call Chain = AppDetOperateTask &rArr; TestDetQuick &rArr; XA3_UnlockAndWriteEEPROM &rArr; XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaiLinCurrentSteady
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlasteFireTime
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMasterTimeShareTest
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetAckCurrentWave
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCurrentProgbar
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusCurrentRangeMax
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveStatusReset
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveBlastDet
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetStartBlast
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[115]"></a>AppKeyScanTask</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, task.o(i.AppKeyScanTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = AppKeyScanTask &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardScan
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyConfig
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[11e]"></a>AppLowPriTask</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, task.o(i.AppLowPriTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = AppLowPriTask &rArr; FileSystemFormatSdCard &rArr; f_mkfs &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemFormatSdCard
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[11a]"></a>AppRS485Task</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, task.o(i.AppRS485Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = AppRS485Task &rArr; GuestRespond &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[117]"></a>AppSafeMonitorTask</STRONG> (Thumb, 760 bytes, Stack size 112 bytes, task.o(i.AppSafeMonitorTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = AppSafeMonitorTask &rArr; SendBlastFireInfoData &rArr; GetBlastDataDetInfoFromRecorder &rArr; GetConfigFileU32 &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRtcTime
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RtcStructToTimeString
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAddrU32ToString
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeDifferSec
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerCurrentTime
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecoderUploadState
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSafeMonitor
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CustomSendMessage
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[11d]"></a>AppSoundTask</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, task.o(i.AppSoundTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = AppSoundTask &rArr; SoundOutput &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[113]"></a>AppStartUpTask</STRONG> (Thumb, 280 bytes, Stack size 56 bytes, task.o(i.AppStartUpTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1048 + Unknown Stack Size
<LI>Call Chain = AppStartUpTask &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDacHvValueMinFromVoltage
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveGPSInfoStop
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Time
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMC_FormatAnalyze
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastGPSInfo
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGPSPassCount
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusCurrent
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSIsWorking
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemInitOS
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStatusIsIdle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[11b]"></a>AppTemporaryTask</STRONG> (Thumb, 498 bytes, Stack size 0 bytes, task.o(i.AppTemporaryTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = AppTemporaryTask &rArr; CheckHVProtectPoint &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcByBlueDkey
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiCurrentAPInfo
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueVersion
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHVProtectPoint
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueScanSlave
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostInit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostDisConnect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[116]"></a>AppUSBTask</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, task.o(i.AppUSBTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1376 + Unknown Stack Size
<LI>Call Chain = AppUSBTask &rArr; GuestRespond &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_tedata
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[114]"></a>AppUserGUITask</STRONG> (Thumb, 248 bytes, Stack size 0 bytes, task.o(i.AppUserGUITask))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = AppUserGUITask &rArr; GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCreateFlags
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MULTIBUF_Enable
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTopTitleDlg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceStartDlg
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceChargeStartDlg
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatVoltage
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulated
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceChargePowerOnState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[118]"></a>AppWifiTask</STRONG> (Thumb, 454 bytes, Stack size 400 bytes, task.o(i.AppWifiTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1704 + Unknown Stack Size
<LI>Call Chain = AppWifiTask &rArr; WifiScanAP &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUnlock
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiLock
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiCurrentAPInfo
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSafeMonitor
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CustomSendMessage
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSameWifiScanResult
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> taskutils.o(i.TaskCreate)
</UL>
<P><STRONG><a name="[551]"></a>Asc_Hex</STRONG> (Thumb, 152 bytes, Stack size 8 bytes, gps.o(i.Asc_Hex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Asc_Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_BufferVerify
</UL>

<P><STRONG><a name="[659]"></a>AsciiToU32</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, midfunction.o(i.AsciiToU32))
<BR><BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
</UL>

<P><STRONG><a name="[2d7]"></a>AutoConnect</STRONG> (Thumb, 224 bytes, Stack size 120 bytes, wifi.o(i.AutoConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = AutoConnect &rArr; ReadWifiInfo &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiCurrentAPInfo
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
</UL>

<P><STRONG><a name="[97]"></a>BUTTON_Callback</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, button.o(i.BUTTON_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = BUTTON_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(i.BUTTON_CreateUser)
</UL>
<P><STRONG><a name="[136]"></a>BUTTON_CreateIndirect</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, button_createindirect.o(i.BUTTON_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateIndirect &rArr; BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
</UL>
<BR>[Address Reference Count : 95]<UL><LI> custommessagebox.o(.constdata)
<LI> loadingdlg.o(.constdata)
<LI> netinfodlg.o(.constdata)
<LI> waitlincurrentreadydlg.o(.constdata)
<LI> nettestreportdlg.o(.constdata)
<LI> nettesterrorlistviewdlg.o(.constdata)
<LI> deletedetmenudlg.o(.constdata)
<LI> delaymodifysingledlg.o(.constdata)
<LI> blastrecorderlistviewdlg.o(.constdata)
<LI> systemsetmenudlg.o(.constdata)
<LI> blastdetdlg.o(.constdata)
<LI> helptooldettestdlg.o(.constdata)
<LI> netparamlistviewdlg.o(.constdata)
<LI> devicenamesetdlg.o(.constdata)
<LI> slavenumbersetdlg.o(.constdata)
<LI> bluehoststatusdlg.o(.constdata)
<LI> detslavebackupmenudlg.o(.constdata)
<LI> blastrecorderdetinfolistdlg.o(.constdata)
<LI> blastrecorderslaveinfolistdlg.o(.constdata)
<LI> delaysampleprocessdelayinputdlg.o(.constdata)
<LI> detanalystblastdlg.o(.constdata)
<LI> blastcanneldlg.o(.constdata)
<LI> regholeinsertinputdlg.o(.constdata)
<LI> detoutsideinputdlg.o(.constdata)
<LI> toptitledlg.o(.constdata)
<LI> regdetoutsideinputbatchdlg.o(.constdata)
<LI> regdetfeatureinputforbarcodedlg.o(.constdata)
<LI> slaveaccrediterrorfordldlg.o(.constdata)
<LI> mainmenudlg.o(.constdata)
<LI> mainmenumoredlg.o(.constdata)
<LI> blastenterdlg.o(.constdata)
<LI> netparammodifydlg.o(.constdata)
<LI> blasttestreportdlg.o(.constdata)
<LI> slaveinfolistviewdlg.o(.constdata)
<LI> deletedetinputholeinfodlg.o(.constdata)
<LI> delaymodifybatchdlg.o(.constdata)
<LI> infomanagedlg.o(.constdata)
<LI> deviceinfodlg.o(.constdata)
<LI> blastprocessdlg.o(.constdata)
<LI> sliderdlg.o(.constdata)
<LI> blastdelaydlg.o(.constdata)
<LI> dkeypasswdmodifydlg.o(.constdata)
<LI> helptoolmenudlg.o(.constdata)
<LI> detanalystdlg.o(.constdata)
<LI> wifinetinfodlg.o(.constdata)
<LI> wifinetsetdlg.o(.constdata)
<LI> wifinetinitdlg.o(.constdata)
<LI> devicechargestartdlg.o(.constdata)
<LI> wifipassworddlg.o(.constdata)
<LI> uploadblastrecorddlg.o(.constdata)
<LI> softwareupdatedlg.o(.constdata)
<LI> deviceselftestdlg.o(.constdata)
<LI> blastinfoverifydlg.o(.constdata)
<LI> deviceusagessetdlg.o(.constdata)
<LI> blastmasterprocessdlg.o(.constdata)
<LI> remoteblastslavestatedlg.o(.constdata)
<LI> detbluebackupmenudlg.o(.constdata)
<LI> detbackupbluetypeseldlg.o(.constdata)
<LI> slavestatusdlg.o(.constdata)
<LI> blastrecorderdetaileddlg.o(.constdata)
<LI> waitreglistviewdlg.o(.constdata)
<LI> progbarquickdlg.o(.constdata)
<LI> progbarchargedlg.o(.constdata)
<LI> blastrecordermasterbriefdlg.o(.constdata)
<LI> progbarblastdlg.o(.constdata)
<LI> progbarcompletedlg.o(.constdata)
<LI> progbarmaskregdetdlg.o(.constdata)
<LI> progbarquickbeforeblastdlg.o(.constdata)
<LI> delaysampleprocessdelayseldlg.o(.constdata)
<LI> delaysampleprocesswaitregdetdlg.o(.constdata)
<LI> detaccrediterrorfordldlg.o(.constdata)
<LI> delaysampleprocessreadyconfirmdlg.o(.constdata)
<LI> detbackupoperatetypeseldlg.o(.constdata)
<LI> detinfoinsertrangeinputdlg.o(.constdata)
<LI> delaysampleprocessblastdetdlg.o(.constdata)
<LI> detbackupoperatebluetypeseldlg.o(.constdata)
<LI> detblueinsertmenudlg.o(.constdata)
<LI> detinfoinsertstatusdlg.o(.constdata)
<LI> netinfomodifymenudlg.o(.constdata)
<LI> netinfomodifyrangeinputdlg.o(.constdata)
<LI> buserrorrestoredlg.o(.constdata)
<LI> detanalysthighvoltageinputdlg.o(.constdata)
<LI> detcodewritemenudlg.o(.constdata)
<LI> detcodewritestatusdlg.o(.constdata)
<LI> wificonnectdlg.o(.constdata)
<LI> logrecorderlistviewdlg.o(.constdata)
<LI> loguploaddlg.o(.constdata)
<LI> colorsetdlg.o(.constdata)
<LI> filesystemformatdlg.o(.constdata)
<LI> regholeparaminputdlg.o(.constdata)
<LI> regparammenudlg.o(.constdata)
<LI> dettypesetdlg.o(.constdata)
<LI> blastterminationfromappdlg.o(.constdata)
<LI> waitpoweroffdlg.o(.constdata)
<LI> mastertimesharesetdlg.o(.constdata)
</UL>
<P><STRONG><a name="[2e4]"></a>BUTTON_CreateUser</STRONG> (Thumb, 116 bytes, Stack size 56 bytes, button.o(i.BUTTON_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = BUTTON_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
</UL>

<P><STRONG><a name="[2ea]"></a>BUTTON_GetText</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, button_get.o(i.BUTTON_GetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = BUTTON_GetText &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
</UL>

<P><STRONG><a name="[7bc]"></a>BUTTON_SetDefaultBkColor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, button_default.o(i.BUTTON_SetDefaultBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[7be]"></a>BUTTON_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, button_default.o(i.BUTTON_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[7bd]"></a>BUTTON_SetDefaultTextColor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, button_default.o(i.BUTTON_SetDefaultTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[2e2]"></a>BUTTON_SetPressed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, button.o(i.BUTTON_SetPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[2e5]"></a>BUTTON_SetText</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, button.o(i.BUTTON_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = BUTTON_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateIndirect
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[278]"></a>BackupExportDetDataToSlave</STRONG> (Thumb, 314 bytes, Stack size 24 bytes, mastermode.o(i.BackupExportDetDataToSlave))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = BackupExportDetDataToSlave &rArr; GetSlaveTestInfo &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatIsSameForDetInfo
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveInitState
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveSaveDetInfo
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDeleteDetInfo
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSlaveDetNumber
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[277]"></a>BackupImportDetDataFromSlave</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, mastermode.o(i.BackupImportDetDataFromSlave))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = BackupImportDetDataFromSlave &rArr; GetSlaveDetInfo &rArr; GetSlaveDetIndexInfo &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatIsSameForDetInfo
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveInitState
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSlaveDetNumber
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetInfo
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[2ff]"></a>BarCodeAnalyst13</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, barcode.o(i.BarCodeAnalyst13))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = BarCodeAnalyst13 &rArr; XA3_DetOutside2Inside &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetScanDataBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst14
</UL>

<P><STRONG><a name="[302]"></a>BarCodeAnalyst14</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, barcode.o(i.BarCodeAnalyst14))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = BarCodeAnalyst14 &rArr; BarCodeAnalyst13 &rArr; XA3_DetOutside2Inside &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsHexChar
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexCharToValue
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasterIs36
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst13
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
</UL>

<P><STRONG><a name="[306]"></a>BarCodeAnalyst17</STRONG> (Thumb, 192 bytes, Stack size 16 bytes, barcode.o(i.BarCodeAnalyst17))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = BarCodeAnalyst17 &rArr; XA3_DetOutside2Inside &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsHexChar
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexCharToValue
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc8Value
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
</UL>

<P><STRONG><a name="[308]"></a>BarCodeAnalyst17ForBoxBig</STRONG> (Thumb, 682 bytes, Stack size 12 bytes, barcode.o(i.BarCodeAnalyst17ForBoxBig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BarCodeAnalyst17ForBoxBig
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetScanDataBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[309]"></a>BarCodeAnalyst18ForBoxSmall</STRONG> (Thumb, 578 bytes, Stack size 12 bytes, barcode.o(i.BarCodeAnalyst18ForBoxSmall))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = BarCodeAnalyst18ForBoxSmall
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetScanDataBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[30a]"></a>BarCodeDataAnalyst</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, barcode.o(i.BarCodeDataAnalyst))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = BarCodeDataAnalyst &rArr; BarCodeAnalyst17 &rArr; XA3_DetOutside2Inside &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetMaxDelay
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetFactoryCodeIsRulePass
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCodeRulePass
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetScanDataBytes
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst14
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst13
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[30d]"></a>Base64Decode</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, base64.o(i.Base64Decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Base64Decode
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;search_index
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
</UL>

<P><STRONG><a name="[7a9]"></a>Base64Encode</STRONG> (Thumb, 216 bytes, Stack size 20 bytes, base64.o(i.Base64Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Base64Encode
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
</UL>

<P><STRONG><a name="[3af]"></a>BatVoltageToAccumulated</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ltc2942.o(i.BatVoltageToAccumulated))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[310]"></a>BlastDelayConvertToDetDelay</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, det_operart.o(i.BlastDelayConvertToDetDelay))
<BR><BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFixedPulseCount
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastDelayConvertToDetDelayClock
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[30f]"></a>BlastDelayConvertToDetDelayClock</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, det_operart.o(i.BlastDelayConvertToDetDelayClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = BlastDelayConvertToDetDelayClock
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastDelayConvertToDetDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[311]"></a>BlastRecordFileInit</STRONG> (Thumb, 462 bytes, Stack size 352 bytes, recorder.o(i.BlastRecordFileInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 800 + Unknown Stack Size
<LI>Call Chain = BlastRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
</UL>

<P><STRONG><a name="[316]"></a>BlastSingleSelfTest</STRONG> (Thumb, 264 bytes, Stack size 16 bytes, midfunction.o(i.BlastSingleSelfTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = BlastSingleSelfTest &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinABAdcValue
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[417]"></a>BlastSingleSendedResult</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, recorder.o(i.BlastSingleSendedResult))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[319]"></a>BlastTerminationFromAppDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastterminationfromappdlg.o(i.BlastTerminationFromAppDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = BlastTerminationFromAppDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[27e]"></a>BlasteTestComplete</STRONG> (Thumb, 1776 bytes, Stack size 56 bytes, det_operart.o(i.BlasteTestComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = BlasteTestComplete &rArr; XA3_WriteFixDelayTest &rArr; XA3_WriteFixDelay &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteTime
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelayTest
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadTimeClock
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatus
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_PwdUnlock
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Mask
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_GetDetStatus
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetFixedPulse
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_CheckOscAll
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Charge
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgbarParam
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFreqFromHead
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRetryErrCode
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveErrCode
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFixedPulseCount
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetDelayMaxFromRegStatus
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsSingleCap
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConnectErrorCodeIdentify
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetFreq
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastDelayConvertToDetDelayClock
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastDelayConvertToDetDelay
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCurrentProgbar
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[333]"></a>BlasterIs04</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, midfunction.o(i.BlasterIs04))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BlasterIs04 &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[303]"></a>BlasterIs36</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, midfunction.o(i.BlasterIs36))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BlasterIs36 &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst14
</UL>

<P><STRONG><a name="[334]"></a>BlueATCmdTransmitter</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, bluetooth.o(i.BlueATCmdTransmitter))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = BlueATCmdTransmitter &rArr; BlueWaitReceive &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueWaitReceive
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueVersion
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueScanSlave
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostInit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostDisConnect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
</UL>

<P><STRONG><a name="[2b7]"></a>BlueConnectSlave</STRONG> (Thumb, 240 bytes, Stack size 136 bytes, bluetooth.o(i.BlueConnectSlave))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = BlueConnectSlave &rArr; BlueHostDisConnect &rArr; BlueATCmdTransmitter &rArr; BlueWaitReceive &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostDisConnect
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[26d]"></a>BlueDetInfoBackUp</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, bluemaster.o(i.BlueDetInfoBackUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = BlueDetInfoBackUp &rArr; WriteBlueSlaveDetData &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetData
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[276]"></a>BlueDetInfoInsert</STRONG> (Thumb, 278 bytes, Stack size 56 bytes, bluemaster.o(i.BlueDetInfoInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = BlueDetInfoInsert &rArr; GetBlueSlaveDetNumberAndType &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHoleIndexSpecifiedStartHole
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCountSpecifiedHoleRange
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[33f]"></a>BlueDkeyGpsIsPass</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, bluedkey.o(i.BlueDkeyGpsIsPass))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = BlueDkeyGpsIsPass &rArr; GetBlueDkeyGPS &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSInfoTimeIsPass
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[343]"></a>BlueDkeyModifyUserInfo</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, bluedkey.o(i.BlueDkeyModifyUserInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = BlueDkeyModifyUserInfo &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUnpack
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyPack
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[344]"></a>BlueDkeyPack</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bluedkey.o(i.BlueDkeyPack))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BlueDkeyPack &rArr; Slip_Pack
</UL>
<BR>[Calls]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_Pack
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sum_Verify
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
</UL>

<P><STRONG><a name="[345]"></a>BlueDkeyUnpack</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, bluedkey.o(i.BlueDkeyUnpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = BlueDkeyUnpack &rArr; Slip_Unpack
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_Unpack
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Sum_Verify
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
</UL>

<P><STRONG><a name="[349]"></a>BlueDkeyUserInfoVerify</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, bluedkey.o(i.BlueDkeyUserInfoVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = BlueDkeyUserInfoVerify &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUnpack
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyPack
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2bb]"></a>BlueHostDisConnect</STRONG> (Thumb, 132 bytes, Stack size 80 bytes, bluetooth.o(i.BlueHostDisConnect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = BlueHostDisConnect &rArr; BlueATCmdTransmitter &rArr; BlueWaitReceive &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[2b5]"></a>BlueHostInit</STRONG> (Thumb, 296 bytes, Stack size 72 bytes, bluetooth.o(i.BlueHostInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = BlueHostInit &rArr; BlueATCmdTransmitter &rArr; BlueWaitReceive &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBlueCurrentHostSlaveStatus
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[34b]"></a>BluePinConfig</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, bluetooth.o(i.BluePinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = BluePinConfig &rArr; BlueUartConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[26c]"></a>BlueReadDetInfoBackUp</STRONG> (Thumb, 326 bytes, Stack size 40 bytes, bluemaster.o(i.BlueReadDetInfoBackUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = BlueReadDetInfoBackUp &rArr; GetBlueSlaveDetData &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetType
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[275]"></a>BlueReadDetInfoInsert</STRONG> (Thumb, 442 bytes, Stack size 48 bytes, bluemaster.o(i.BlueReadDetInfoInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = BlueReadDetInfoInsert &rArr; GetBlueSlaveDetData &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetInfoHasSame
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetType
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[2b6]"></a>BlueScanSlave</STRONG> (Thumb, 350 bytes, Stack size 32 bytes, bluetooth.o(i.BlueScanSlave))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = BlueScanSlave &rArr; BlueATCmdTransmitter &rArr; BlueWaitReceive &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[2c2]"></a>BlueSendData</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, bluetooth.o(i.BlueSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = BlueSendData &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetData
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
</UL>

<P><STRONG><a name="[354]"></a>BlueSlaveFilter</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, bluetooth.o(i.BlueSlaveFilter))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BlueSlaveFilter &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2b4]"></a>BlueSlaveInit</STRONG> (Thumb, 486 bytes, Stack size 128 bytes, bluetooth.o(i.BlueSlaveInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = BlueSlaveInit &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBlueCurrentHostSlaveStatus
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[34c]"></a>BlueUartConfig</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, bluetooth.o(i.BlueUartConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = BlueUartConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePinConfig
</UL>

<P><STRONG><a name="[335]"></a>BlueWaitReceive</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, bluetooth.o(i.BlueWaitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = BlueWaitReceive &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
</UL>

<P><STRONG><a name="[35d]"></a>BusCurrentInRange</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, adc.o(i.BusCurrentInRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BusCurrentInRange
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc2VoltageOrCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
</UL>

<P><STRONG><a name="[269]"></a>BusCurrentRangeMax</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, adc.o(i.BusCurrentRangeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BusCurrentRangeMax
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc2VoltageOrCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[34]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[35f]"></a>BusIsShort</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, adc.o(i.BusIsShort))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = BusIsShort &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcUnlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStateMonitor
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[361]"></a>BusStateMonitor</STRONG> (Thumb, 424 bytes, Stack size 16 bytes, midfunction.o(i.BusStateMonitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = BusStateMonitor &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusIsShort
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStatusIsIdle
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2aa]"></a>BusStatusIsIdle</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, midfunction.o(i.BusStatusIsIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BusStatusIsIdle
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStateMonitor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[493]"></a>CalcRegHoleDelayFromNetParam</STRONG> (Thumb, 254 bytes, Stack size 32 bytes, midfunction.o(i.CalcRegHoleDelayFromNetParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CalcRegHoleDelayFromNetParam
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[284]"></a>CheckDet</STRONG> (Thumb, 832 bytes, Stack size 56 bytes, det_operart.o(i.CheckDet))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = CheckDet &rArr; XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatus
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadSerl
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_PwdUnlock
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Mask
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_GetDetStatus
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Charge
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Bit
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFreqFromHead
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetFactoryCodeIsRulePass
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCodeRulePass
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetType
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetFreq
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[393]"></a>CheckDetDelayIsSame</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, midfunction.o(i.CheckDetDelayIsSame))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckDetDelayIsSame
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[323]"></a>CheckDetFreq</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, det_operart.o(i.CheckDetFreq))
<BR><BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[34e]"></a>CheckDetType</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, det_operart.o(i.CheckDetType))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CheckDetType &rArr; GetDetType
</UL>
<BR>[Calls]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetType
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetTypeAndDelay
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetType
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
</UL>

<P><STRONG><a name="[2cb]"></a>CheckDeviceChargePowerOnState</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, charge.o(i.CheckDeviceChargePowerOnState))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckDeviceChargePowerOnState
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[266]"></a>CheckHVProtectPoint</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, adc.o(i.CheckHVProtectPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = CheckHVProtectPoint &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[4a5]"></a>CheckHardwareVersion</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, midfunction.o(i.CheckHardwareVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckHardwareVersion &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[3d7]"></a>CheckOverlap</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, det_operart.o(i.CheckOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CheckOverlap &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[27f]"></a>ClearProgbarData</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, midfunction.o(i.ClearProgbarData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ClearProgbarData &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2d6]"></a>ClearSameWifiScanResult</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, wifinetinfodlg.o(i.ClearSameWifiScanResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ClearSameWifiScanResult
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
</UL>

<P><STRONG><a name="[7e4]"></a>ClearSerlGroup</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, det_operart.o(i.ClearSerlGroup))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
</UL>

<P><STRONG><a name="[450]"></a>ClearTimerHandleBuffer</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, guicustomutils.o(i.ClearTimerHandleBuffer))
<BR><BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3f8]"></a>ClearUserDataToMULTIEDIT</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guicustomutils.o(i.ClearUserDataToMULTIEDIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = ClearUserDataToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[48b]"></a>CloseLoadingDlg</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, loadingdlg.o(i.CloseLoadingDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = CloseLoadingDlg &rArr; GUI_EndDialog &rArr; GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[31a]"></a>CloseMainDialog</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, guicustomutils.o(i.CloseMainDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = CloseMainDialog &rArr; CloseWindowAndParent &rArr; GUI_EndDialog &rArr; GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseLoadingDlg
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWindowAndParent
</UL>
<BR>[Called By]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceStartDlg
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceChargeStartDlg
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemoteBlastSlaveStateDlg
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarChargeDlg
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAccreditErrorForDLDlg
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastEnterDlg
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetMenuDlg
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSoftwareUpdateDlg
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarMaskRegDetDlg
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuMoreDlg
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoManageDlg
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastInfoVerifyDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitPowerOffDlg
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPowerOffDlg
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetSetDlg
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogRecorderListViewDlg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolDetTestDlg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceSelfTestDlg
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateTypeSelDlg
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystDlg
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyPasswdModifyDlg
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFileSystemFormatDlg
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSliderDlg
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveNumberSetDlg
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMasterTimeShareSetDlg
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceUsagesSetDlg
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceNameSetDlg
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetTypeSetDlg
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowColorSetDlg
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUploadBlastRecordDlg
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderMasterBriefDlg
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetailedDlg
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceInfoDlg
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetInputHoleInfoDlg
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessBlastDetDlg
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDetDlg
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDelayDlg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastProcessDlg
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamListViewDlg
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamModifyDlg
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteStatusDlg
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastTestReportDlg
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarQuickDlg
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarQuickBeforeBlastDlg
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarCompleteDlg
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarBlastDlg
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyMenuDlg
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifySingleDlg
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifyBatchDlg
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderSlaveInfoListDlg
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetInfoListDlg
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveStatusDlg
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetSlaveBackupMenuDlg
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueInsertMenuDlg
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueBackupMenuDlg
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveAccreditErrorForDLDlg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastMasterProcessDlg
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateBlueTypeSelDlg
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiConnectDlg
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInitDlg
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiPasswordDlg
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInfoDlg
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystHighVoltageInputDlg
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetOutsideInputDlg
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystBlastDlg
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyRangeInputDlg
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInfoInsertStatusDlg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInsertRangeInputDlg
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessReadyConfirmDlg
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessWaitRegDetDlg
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelayInputDlg
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelaySelDlg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleParamInputDlg
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleInsertInputDlg
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegDetOutsideInputBatchDlg
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegDetFeatureInputForBarcodeDlg
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogUploadDlg
</UL>

<P><STRONG><a name="[4a8]"></a>CloseWifiSocket</STRONG> (Thumb, 118 bytes, Stack size 72 bytes, wifi.o(i.CloseWifiSocket))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = CloseWifiSocket &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSafeMonitor
</UL>

<P><STRONG><a name="[37b]"></a>CloseWindowAndParent</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guicustomutils.o(i.CloseWindowAndParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = CloseWindowAndParent &rArr; GUI_EndDialog &rArr; GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>

<P><STRONG><a name="[4ab]"></a>ConfigFileVerify</STRONG> (Thumb, 248 bytes, Stack size 32 bytes, recorder.o(i.ConfigFileVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = ConfigFileVerify &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserConfigParam
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
</UL>

<P><STRONG><a name="[320]"></a>ConnectErrorCodeIdentify</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, det_operart.o(i.ConnectErrorCodeIdentify))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[4ad]"></a>CreateNewFileData</STRONG> (Thumb, 156 bytes, Stack size 72 bytes, recorder.o(i.CreateNewFileData))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = CreateNewFileData &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[4b0]"></a>CreateSoudTask</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sound.o(i.CreateSoudTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = CreateSoudTask &rArr; TaskCreate &rArr; PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputRight
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputError
</UL>

<P><STRONG><a name="[416]"></a>CreateStartBlastTask</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, det_operart.o(i.CreateStartBlastTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = CreateStartBlastTask &rArr; TaskCreate &rArr; PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[27a]"></a>CustomSendMessage</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, guicustomutils.o(i.CustomSendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = CustomSendMessage &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[4d9]"></a>DAC_Cmd</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f4xx_dac.o(i.DAC_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>

<P><STRONG><a name="[4dc]"></a>DAC_GetDataOutputValue</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_dac.o(i.DAC_GetDataOutputValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DAC_GetDataOutputValue
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentHvDacValue
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDacCurrentValue
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>

<P><STRONG><a name="[4d8]"></a>DAC_Init</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, stm32f4xx_dac.o(i.DAC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DAC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
</UL>

<P><STRONG><a name="[4dd]"></a>DAC_SetChannel1Data</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_dac.o(i.DAC_SetChannel1Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DAC_SetChannel1Data
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>

<P><STRONG><a name="[4df]"></a>DAC_SetChannel2Data</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_dac.o(i.DAC_SetChannel2Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DAC_SetChannel2Data
</UL>
<BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>

<P><STRONG><a name="[4e1]"></a>DAC_SoftwareTriggerCmd</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32f4xx_dac.o(i.DAC_SoftwareTriggerCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DAC_SoftwareTriggerCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>

<P><STRONG><a name="[4b2]"></a>DCD_EP_Close</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_EP_Close))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DCD_EP_Close &rArr; USB_OTG_EPDeactivate
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPDeactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_DeInit
</UL>

<P><STRONG><a name="[4b4]"></a>DCD_EP_ClrStall</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_EP_ClrStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DCD_EP_ClrStall &rArr; USB_OTG_EPClearStall
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPClearStall
</UL>
<BR>[Called By]<UL><LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
</UL>

<P><STRONG><a name="[4b6]"></a>DCD_EP_Flush</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_EP_Flush))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = DCD_EP_Flush &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_DataIn
</UL>

<P><STRONG><a name="[4b9]"></a>DCD_EP_Open</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, usb_dcd.o(i.DCD_EP_Open))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DCD_EP_Open &rArr; USB_OTG_EPActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Reset
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_Init
</UL>

<P><STRONG><a name="[4bb]"></a>DCD_EP_PrepareRx</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, usb_dcd.o(i.DCD_EP_PrepareRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueRx
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_DataOut
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_USR_DeviceConfigured
</UL>

<P><STRONG><a name="[803]"></a>DCD_EP_SetAddress</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, usb_dcd.o(i.DCD_EP_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DCD_EP_SetAddress
</UL>
<BR>[Called By]<UL><LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress
</UL>

<P><STRONG><a name="[4be]"></a>DCD_EP_Stall</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usb_dcd.o(i.DCD_EP_Stall))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DCD_EP_Stall &rArr; USB_OTG_EPSetStall
</UL>
<BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPSetStall
</UL>
<BR>[Called By]<UL><LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>

<P><STRONG><a name="[4c0]"></a>DCD_EP_Tx</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, usb_dcd.o(i.DCD_EP_Tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SendReport
<LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueSendData
</UL>

<P><STRONG><a name="[4cf]"></a>DCD_Init</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, usb_dcd.o(i.DCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DCD_Init &rArr; USB_OTG_CoreInitDev &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SelectCore
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableGlobalInt
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_DisableGlobalInt
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>
<BR>[Called By]<UL><LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[4d7]"></a>DacConfig</STRONG> (Thumb, 146 bytes, Stack size 32 bytes, dac.o(i.DacConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DacConfig &rArr; DacOutHVVoltage &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDacHvValueMinFromVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Cmd
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDacLvValueMinFromVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[270]"></a>DacOutHVVoltage</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, dac.o(i.DacOutHVVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DacOutHVVoltage &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel1Data
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_GetDataOutputValue
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[423]"></a>DacOutLVVoltage</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, dac.o(i.DacOutLVVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DacOutLVVoltage &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel2Data
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_GetDataOutputValue
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDacLvValueMin
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[4e0]"></a>DacStartOutput</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dac.o(i.DacStartOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DacStartOutput &rArr; DAC_SoftwareTriggerCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SoftwareTriggerCmd
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel2Data
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_SetChannel1Data
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_GetDataOutputValue
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLVVoltageUp
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLVVoltageDown
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHVVoltageUp
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHVVoltageDown
</UL>

<P><STRONG><a name="[37]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[3fa]"></a>DelayModifyBaseOnParam</STRONG> (Thumb, 620 bytes, Stack size 88 bytes, midfunction.o(i.DelayModifyBaseOnParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = DelayModifyBaseOnParam &rArr; SaveAllDetInfo &rArr; SaveAllDetInfoNotChangeRank &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayParamVerify
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3f9]"></a>DelayParamVerify</STRONG> (Thumb, 582 bytes, Stack size 80 bytes, midfunction.o(i.DelayParamVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DelayParamVerify
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayModifyBaseOnParam
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3a4]"></a>DelaySampleProcessInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, delaysampleprocessreadyconfirmdlg.o(i.DelaySampleProcessInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1008 + Unknown Stack Size
<LI>Call Chain = DelaySampleProcessInit &rArr; DeleteAllDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllDetInfo
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessReadyConfirmDlg
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessWaitRegDetDlg
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[239]"></a>DeleteAllAccreditErrorFile</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, recorder.o(i.DeleteAllAccreditErrorFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = DeleteAllAccreditErrorFile &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
</UL>

<P><STRONG><a name="[3f3]"></a>DeleteAllDetInfo</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, recorder.o(i.DeleteAllDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = DeleteAllDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetTypeAndDelay
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySampleProcessInit
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3f5]"></a>DeleteAllErrorDetInfo</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, recorder.o(i.DeleteAllErrorDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1000 + Unknown Stack Size
<LI>Call Chain = DeleteAllErrorDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[4e3]"></a>DeleteAllFileSpecifiedPath</STRONG> (Thumb, 138 bytes, Stack size 88 bytes, recorder.o(i.DeleteAllFileSpecifiedPath))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = DeleteAllFileSpecifiedPath &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
</UL>

<P><STRONG><a name="[337]"></a>DeleteBlueSlaveDetData</STRONG> (Thumb, 296 bytes, Stack size 16 bytes, bluemaster.o(i.DeleteBlueSlaveDetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = DeleteBlueSlaveDetData &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoBackUp
</UL>

<P><STRONG><a name="[33c]"></a>DeleteBlueSlaveDetDataSpecifiedHoleRange</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, bluemaster.o(i.DeleteBlueSlaveDetDataSpecifiedHoleRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = DeleteBlueSlaveDetDataSpecifiedHoleRange &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoInsert
</UL>

<P><STRONG><a name="[3bf]"></a>DeleteDetInfo</STRONG> (Thumb, 182 bytes, Stack size 72 bytes, recorder.o(i.DeleteDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = DeleteDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[48f]"></a>DeleteDetInfoNotChangeRank</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, recorder.o(i.DeleteDetInfoNotChangeRank))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = DeleteDetInfoNotChangeRank &rArr; SaveAllDetInfoNotChangeRank &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3e5]"></a>DeleteDetInfoNotSave</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, recorder.o(i.DeleteDetInfoNotSave))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = DeleteDetInfoNotSave &rArr; AllRegDetRankBaseOnHoleInfo &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[96]"></a>DeskCallback</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, mainmenudlg.o(i.DeskCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = DeskCallback &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> task.o(i.AppUserGUITask)
</UL>
<P><STRONG><a name="[285]"></a>DetAnalyst</STRONG> (Thumb, 732 bytes, Stack size 56 bytes, det_operart.o(i.DetAnalyst))
<BR><BR>[Stack]<UL><LI>Max Depth = 1232 + Unknown Stack Size
<LI>Call Chain = DetAnalyst &rArr; XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteTime
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatus
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadSerl
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_PwdUnlock
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Mask
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_GetDetStatus
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ExpenAll
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Charge
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Bit
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFreqFromHead
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[49a]"></a>DetCode2UIDStr</STRONG> (Thumb, 314 bytes, Stack size 48 bytes, midfunction.o(i.DetCode2UIDStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = DetCode2UIDStr &rArr; XA3_DetInside2Outside &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexStrToCharStr
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexCharToValue
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[30b]"></a>DetCodeRulePass</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, det_operart.o(i.DetCodeRulePass))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DetCodeRulePass &rArr; GetCrc8Value
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc8Value
</UL>
<BR>[Called By]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
</UL>

<P><STRONG><a name="[30c]"></a>DetFactoryCodeIsRulePass</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, midfunction.o(i.DetFactoryCodeIsRulePass))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DetFactoryCodeIsRulePass &rArr; GetDetFactoryCode
</UL>
<BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterFactoryCode
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFactoryCode
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
</UL>

<P><STRONG><a name="[4e6]"></a>DetHardwareInit</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dethardware.o(i.DetHardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DetHardwareInit &rArr; DetReceiverConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendConfig
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetReceiverConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[351]"></a>DetInfoHasSame</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, midfunction.o(i.DetInfoHasSame))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DetInfoHasSame
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
</UL>

<P><STRONG><a name="[21f]"></a>DetIsAccreditPassForDL</STRONG> (Thumb, 268 bytes, Stack size 120 bytes, midfunction.o(i.DetIsAccreditPassForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCode2UIDStr
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditOneDeviceForDL
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[332]"></a>DetIsSingleCap</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, det_operart.o(i.DetIsSingleCap))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[286]"></a>DetMaskAll</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, det_operart.o(i.DetMaskAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1216 + Unknown Stack Size
<LI>Call Chain = DetMaskAll &rArr; XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadSerl
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Mask
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgbarParam
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveUnregisteredDetBySimpleSignal
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCurrentProgbar
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[3ee]"></a>DetOfflinePossible</STRONG> (Thumb, 260 bytes, Stack size 16 bytes, midfunction.o(i.DetOfflinePossible))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DetOfflinePossible &rArr; GetDetOnlineCount
</UL>
<BR>[Calls]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[4eb]"></a>DetRecAnalyze</STRONG> (Thumb, 1098 bytes, Stack size 72 bytes, dethardware.o(i.DetRecAnalyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DetRecAnalyze &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U32DataCMP
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEvenBit
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBitNum
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterAnalyzeRetry
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[4e8]"></a>DetReceiverConfig</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, dethardware.o(i.DetReceiverConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DetReceiverConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetHardwareInit
</UL>

<P><STRONG><a name="[4f2]"></a>DetSendAndRec</STRONG> (Thumb, 976 bytes, Stack size 120 bytes, dethardware.o(i.DetSendAndRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetAutoreload
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay100us
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtiConfig
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinABAdcValue
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay10us
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ARRPreloadConfig
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterAnalyzeRetry
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetTimerConfig
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>

<P><STRONG><a name="[4e7]"></a>DetSendConfig</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, dethardware.o(i.DetSendConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DetSendConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetHardwareInit
</UL>

<P><STRONG><a name="[4f3]"></a>DetTimerConfig</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, dethardware.o(i.DetTimerConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DetTimerConfig &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[500]"></a>DeviceChargeConfig</STRONG> (Thumb, 226 bytes, Stack size 24 bytes, charge.o(i.DeviceChargeConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DeviceChargeConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCFG_EXTILineConfig
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[2a0]"></a>DeviceHexFileLoader</STRONG> (Thumb, 484 bytes, Stack size 48 bytes, softwareupdate.o(i.DeviceHexFileLoader))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = DeviceHexFileLoader &rArr; GetServerDeviceVersionInfo &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServerReadyForUpdate
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileVerifyResult
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileData
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedHexFileSize
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedFileExistState
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[267]"></a>DeviceSelfTest</STRONG> (Thumb, 2584 bytes, Stack size 24 bytes, midfunction.o(i.DeviceSelfTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 1032 + Unknown Stack Size
<LI>Call Chain = DeviceSelfTest &rArr; BlastSingleSelfTest &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinABAdcValue
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDacHvValueMinFromVoltage
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHVProtectPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[7c3]"></a>EDIT_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, edit_default.o(i.EDIT_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[7c4]"></a>EDIT_SetDefaultTextColor</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, edit_default.o(i.EDIT_SetDefaultTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[62]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI15_10_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI15_10_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 718 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.EXTI9_5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = EXTI9_5_IRQHandler &rArr; ExtiConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay100us
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPowerOffKeyState
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtiConfig
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_GetITStatus
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[50f]"></a>EXTI_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtiConfig
</UL>

<P><STRONG><a name="[501]"></a>EXTI_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_WKUP_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_WKUP_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[50a]"></a>EXTI_GetITStatus</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_GetITStatus))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI15_10_IRQHandler
</UL>

<P><STRONG><a name="[4f1]"></a>EXTI_Init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, stm32f4xx_exti.o(i.EXTI_Init))
<BR><BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtiConfig
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetReceiverConfig
</UL>

<P><STRONG><a name="[2a4]"></a>ExitSafeMonitor</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, safemonitor.o(i.ExitSafeMonitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = ExitSafeMonitor &rArr; CloseWifiSocket &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWifiSocket
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[4fb]"></a>ExtiConfig</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, dethardware.o(i.ExtiConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ExtiConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_Init
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[6b7]"></a>FSMC_NORSRAMCmd</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(i.FSMC_NORSRAMCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
</UL>

<P><STRONG><a name="[6b6]"></a>FSMC_NORSRAMInit</STRONG> (Thumb, 224 bytes, Stack size 0 bytes, stm32f4xx_fsmc.o(i.FSMC_NORSRAMInit))
<BR><BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
</UL>

<P><STRONG><a name="[45d]"></a>FileIsExist</STRONG> (Thumb, 26 bytes, Stack size 40 bytes, recorder.o(i.FileIsExist))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = FileIsExist &rArr; f_stat &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[28f]"></a>FileSystemFormatSdCard</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, systemconfig.o(i.FileSystemFormatSdCard))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = FileSystemFormatSdCard &rArr; f_mkfs &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
</UL>
<BR>[Called By]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppLowPriTask
</UL>

<P><STRONG><a name="[2a6]"></a>FileSystemInitOS</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, recorder.o(i.FileSystemInitOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = FileSystemInitOS &rArr; OSMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[228]"></a>FileSystemLock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, recorder.o(i.FileSystemLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = FileSystemLock &rArr; OSMutexPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllAccreditErrorFile
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMasterTimeShareTest
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedHexFileSize
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAccreditErrorFile
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenBlasterRecordFile
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedFileExistState
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderFileSize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileSize
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFeatureDefult
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileIndex
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileCount
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[512]"></a>FileSystemTest</STRONG> (Thumb, 194 bytes, Stack size 616 bytes, recorder.o(i.FileSystemTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 1064 + Unknown Stack Size
<LI>Call Chain = FileSystemTest &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[22c]"></a>FileSystemUnlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, recorder.o(i.FileSystemUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = FileSystemUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllAccreditErrorFile
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMasterTimeShareTest
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedHexFileSize
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAccreditErrorFile
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedFileExistState
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderFileSize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileSize
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFeatureDefult
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileIndex
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileCount
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[280]"></a>FillCurrentProgbar</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, midfunction.o(i.FillCurrentProgbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = FillCurrentProgbar &rArr; UpdateProgbar &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgbar
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[4fd]"></a>FilterAnalyzeRetry</STRONG> (Thumb, 1156 bytes, Stack size 64 bytes, dethardware.o(i.FilterAnalyzeRetry))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = FilterAnalyzeRetry &rArr; DetRecAnalyze &rArr; __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[336]"></a>FindStringFromBuffer</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wifi.o(i.FindStringFromBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FindStringFromBuffer &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiCurrentAPInfo
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueVersion
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostInit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostDisConnect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWifiSocket
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiExitCmdMode
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaud
</UL>

<P><STRONG><a name="[51a]"></a>FlashGpioConfig</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, flash.o(i.FlashGpioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = FlashGpioConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareInit
</UL>

<P><STRONG><a name="[51b]"></a>FlashHardwareInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, flash.o(i.FlashHardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = FlashHardwareInit &rArr; FlashHardwareRest &rArr; FlashDelay &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPIConfig
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashGpioConfig
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashStatusRegister1
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareRest
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[522]"></a>FlashReadData</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, flash.o(i.FlashReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FlashReadData &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTransmmitData
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[51c]"></a>FlashSPIConfig</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, flash.o(i.FlashSPIConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FlashSPIConfig &rArr; SPI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareInit
</UL>

<P><STRONG><a name="[520]"></a>FlashTransmmitData</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, flash.o(i.FlashTransmmitData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadData
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashStatusRegister1
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageCmd
</UL>

<P><STRONG><a name="[529]"></a>FlashWriteData</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, flash.o(i.FlashWriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTransmmitData
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[52a]"></a>FormatForDetInfo</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, midfunction.o(i.FormatForDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FormatForDetInfo &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatIsSameForDetInfo
</UL>

<P><STRONG><a name="[2f8]"></a>FormatIsSameForDetInfo</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, midfunction.o(i.FormatIsSameForDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = FormatIsSameForDetInfo &rArr; FormatForDetInfo &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatForDetInfo
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[400]"></a>GBKStringToUTF8</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ansitounicode.o(i.GBKStringToUTF8))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GBKStringToUTF8 &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnicodeToUtf8
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[367]"></a>GL_DispChar</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui_char.o(i.GL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GL_DispChar &rArr; GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[52e]"></a>GL_DrawArc</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, gui_arc.o(i.GL_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = GL_DrawArc &rArr; _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[530]"></a>GL_DrawBitmap</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, gui_drawbitmap.o(i.GL_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>

<P><STRONG><a name="[533]"></a>GL_DrawLine</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, gui_drawline.o(i.GL_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[535]"></a>GL_DrawLine1Ex</STRONG> (Thumb, 456 bytes, Stack size 84 bytes, gui_drawline.o(i.GL_DrawLine1Ex))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLineColor
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[534]"></a>GL_DrawLineEx</STRONG> (Thumb, 262 bytes, Stack size 48 bytes, gui_drawline.o(i.GL_DrawLineEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_sin
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_cos
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_atan2
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[537]"></a>GL_DrawPoint</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gui_drawpoint.o(i.GL_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawLineEnd
</UL>

<P><STRONG><a name="[53f]"></a>GL_FillCircle</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, gui_circ.o(i.GL_FillCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_FillCircle
</UL>
<BR>[Called By]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>

<P><STRONG><a name="[53d]"></a>GL_FillPolygon</STRONG> (Thumb, 466 bytes, Stack size 64 bytes, gui_fillpolygon.o(i.GL_FillPolygon))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = GL_FillPolygon &rArr; _Add
</UL>
<BR>[Calls]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Add
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[541]"></a>GL_SetDefault</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_setdefault.o(i.GL_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GL_SetDefault &rArr; GUI_SetPenSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
</UL>
<BR>[Called By]<UL><LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>

<P><STRONG><a name="[20e]"></a>GPIO_Init</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AutoCheck_Config
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanGpioPinConfig
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerConfig
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePinConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCConfig
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TriggerSinglePinConfig
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoPinConfig
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedPinConfig
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyConfig
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485TxPinExitUartConfig
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashGpioConfig
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGpioPinConfig
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyVerticalOutput
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyRowOutput
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyVertical
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyRow
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSPortConfig
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendConfig
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetReceiverConfig
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
</UL>

<P><STRONG><a name="[357]"></a>GPIO_PinAFConfig</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, stm32f4xx_gpio.o(i.GPIO_PinAFConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_PinAFConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashGpioConfig
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
</UL>

<P><STRONG><a name="[297]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ReadInputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485DirCountDecrement
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDeviceChargePowerOnState
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostDisConnect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWifiSocket
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleTransferData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulatedAdjust
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueSignal
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiReset
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyVertical
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyRow
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key1Key3Scan
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveByte
</UL>

<P><STRONG><a name="[272]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ReadOutputDataBit))
<BR><BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485DirCountDecrement
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStateMonitor
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanWork
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusCurrent
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSIsWorking
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStatusIsIdle
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusCurrentRangeMax
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostInit
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusCurrentInRange
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueWaitReceive
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
</UL>

<P><STRONG><a name="[26e]"></a>GPIO_ResetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ResetBits))
<BR><BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanGpioPinConfig
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserConfigParam
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerConfig
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePinConfig
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TriggerSinglePinConfig
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoPinConfig
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedPinConfig
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485DirCountDecrement
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStateMonitor
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanWork
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardScan
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostInit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Slave
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485TxPinExitUartConfig
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardIoCtrl
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusHighCurrent
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTransmmitData
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashGpioConfig
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareRest
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiReset
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGpioPinConfig
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendConfig
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveByte
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FromBusyToIdle
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
</UL>

<P><STRONG><a name="[20f]"></a>GPIO_SetBits</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_SetBits))
<BR><BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanGpioPinConfig
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserConfigParam
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerConfig
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePinConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCConfig
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485DirCountDecrement
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanWork
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveGPSInfoStop
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardScan
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyConfig
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveSaveDetInfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDeleteDetInfo
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Master
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveEnterMainMenuDlg
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWriteBlock
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardReadBlock
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardIoCtrl
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLowCurrent
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTransmmitData
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPIConfig
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashGpioConfig
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareRest
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiReset
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGpioPinConfig
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSPortConfig
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendConfig
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
<LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveByte
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FromBusyToIdle
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
</UL>

<P><STRONG><a name="[317]"></a>GPIO_ToggleBits</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_ToggleBits))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendConfig
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[41c]"></a>GPIO_WriteBit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_gpio.o(i.GPIO_WriteBit))
<BR><BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetBright
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcdc_Reset
<LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyVerticalOutput
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyRowOutput
</UL>

<P><STRONG><a name="[546]"></a>GPSConfig</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gps.o(i.GPSConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = GPSConfig &rArr; USART6_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSPortConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[216]"></a>GPSFormatConvert</STRONG> (Thumb, 234 bytes, Stack size 96 bytes, gps.o(i.GPSFormatConvert))
<BR><BR>[Stack]<UL><LI>Max Depth = 592<LI>Call Chain = GPSFormatConvert &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[66d]"></a>GPSInfoIsPass</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gps.o(i.GPSInfoIsPass))
<BR><BR>[Called By]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastGPSInfo
</UL>

<P><STRONG><a name="[342]"></a>GPSInfoTimeIsPass</STRONG> (Thumb, 94 bytes, Stack size 64 bytes, midfunction.o(i.GPSInfoTimeIsPass))
<BR><BR>[Stack]<UL><LI>Max Depth = 204 + Unknown Stack Size
<LI>Call Chain = GPSInfoTimeIsPass &rArr; GetTimeDifferSec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeDifferSec
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyGpsIsPass
</UL>

<P><STRONG><a name="[2b2]"></a>GPSIsWorking</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gps.o(i.GPSIsWorking))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPSIsWorking
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[54a]"></a>GPSReceiveDataDeal</STRONG> (Thumb, 262 bytes, Stack size 12 bytes, gps.o(i.GPSReceiveDataDeal))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPSReceiveDataDeal &rArr; GPS_BufferVerify &rArr; Asc_Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsAscDec
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_BufferVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSUartCallback
</UL>

<P><STRONG><a name="[54d]"></a>GPSUartCallback</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gps.o(i.GPSUartCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GPSUartCallback &rArr; GPSReceiveDataDeal &rArr; GPS_BufferVerify &rArr; Asc_Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSReceiveDataDeal
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
</UL>

<P><STRONG><a name="[54b]"></a>GPS_BufferVerify</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, gps.o(i.GPS_BufferVerify))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPS_BufferVerify &rArr; Asc_Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Asc_Hex
</UL>
<BR>[Called By]<UL><LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSReceiveDataDeal
</UL>

<P><STRONG><a name="[15b]"></a>GUIMONO_DispChar</STRONG> (Thumb, 302 bytes, Stack size 104 bytes, gui_charm.o(i.GUIMONO_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = GUIMONO_DispChar &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[15c]"></a>GUIMONO_GetCharDistX</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetCharDistX))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>GUIMONO_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_GetFontInfo))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>GUIMONO_IsInFont</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_charm.o(i.GUIMONO_IsInFont))
<BR>[Address Reference Count : 1]<UL><LI> f6x8.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>GUIPROP_DispChar</STRONG> (Thumb, 194 bytes, Stack size 56 bytes, gui_charp.o(i.GUIPROP_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUIPROP_DispChar &rArr; GUI_SetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 4]<UL><LI> songti16.o(.constdata)
<LI> songti24.o(.constdata)
<LI> songti48.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[14b]"></a>GUIPROP_GetCharDistX</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, gui_charp.o(i.GUIPROP_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUIPROP_GetCharDistX
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 4]<UL><LI> songti16.o(.constdata)
<LI> songti24.o(.constdata)
<LI> songti48.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[14c]"></a>GUIPROP_GetFontInfo</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP_GetFontInfo))
<BR>[Address Reference Count : 4]<UL><LI> songti16.o(.constdata)
<LI> songti24.o(.constdata)
<LI> songti48.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>GUIPROP_IsInFont</STRONG> (Thumb, 16 bytes, Stack size 4 bytes, gui_charp.o(i.GUIPROP_IsInFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUIPROP_IsInFont
</UL>
<BR>[Calls]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP__FindChar
</UL>
<BR>[Address Reference Count : 4]<UL><LI> songti16.o(.constdata)
<LI> songti24.o(.constdata)
<LI> songti48.o(.constdata)
<LI> f13_1.o(.constdata)
</UL>
<P><STRONG><a name="[554]"></a>GUIPROP__FindChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, gui_charp.o(i.GUIPROP__FindChar))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_IsInFont
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_GetCharDistX
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[557]"></a>GUITASK_CopyContext</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_task.o(i.GUITASK_CopyContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUITASK_CopyContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[558]"></a>GUITASK_Init</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_task.o(i.GUITASK_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUITASK_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[55d]"></a>GUI_AA_DrawArc</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, guiaa_arc.o(i.GUI_AA_DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = GUI_AA_DrawArc &rArr; _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgY_AA
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetOrgX_AA
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiSignalStrength
</UL>

<P><STRONG><a name="[561]"></a>GUI_AA_Exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, guiaa_lib.o(i.GUI_AA_Exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = GUI_AA_Exit &rArr; _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[563]"></a>GUI_AA_Init</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, guiaa_lib.o(i.GUI_AA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcClipRectHL
</UL>
<BR>[Called By]<UL><LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
</UL>

<P><STRONG><a name="[567]"></a>GUI_AA_Init_HiRes</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_Init_HiRes))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[568]"></a>GUI_AA_SetFactor</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guiaa_lib.o(i.GUI_AA_SetFactor))
<BR><BR>[Calls]<UL><LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcClipRectHL
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiSignalStrength
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueSignal
</UL>

<P><STRONG><a name="[569]"></a>GUI_ALLOC_AllocInit</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, gui_alloc_allocinit.o(i.GUI_ALLOC_AllocInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocInit &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[56a]"></a>GUI_ALLOC_AllocNoInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_AllocNoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[56c]"></a>GUI_ALLOC_AllocZero</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, gui_alloc_alloczero.o(i.GUI_ALLOC_AllocZero))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[62f]"></a>GUI_ALLOC_AssignMemory</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_AssignMemory))
<BR><BR>[Called By]<UL><LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[56d]"></a>GUI_ALLOC_Free</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_Free))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_USAGE_BM_Delete
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>

<P><STRONG><a name="[598]"></a>GUI_ALLOC_FreeFixedBlock</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_FreeFixedBlock))
<BR><BR>[Called By]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
</UL>

<P><STRONG><a name="[2de]"></a>GUI_ALLOC_FreePtr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtrArray
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
</UL>

<P><STRONG><a name="[2df]"></a>GUI_ALLOC_FreePtrArray</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_alloc.o(i.GUI_ALLOC_FreePtrArray))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_FreePtrArray &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
</UL>

<P><STRONG><a name="[55a]"></a>GUI_ALLOC_GetFixedBlock</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, gui_alloc.o(i.GUI_ALLOC_GetFixedBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[573]"></a>GUI_ALLOC_GetMaxSize</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_GetMaxSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Called By]<UL><LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[576]"></a>GUI_ALLOC_GetSize</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_GetSize))
<BR><BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
</UL>

<P><STRONG><a name="[5a1]"></a>GUI_ALLOC_Lock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[2dc]"></a>GUI_ALLOC_LockH</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_LockH))
<BR><BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetPasswordMode
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetWrapMode
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollState
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFlag
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveCursor2NextLine
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScrollV
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsOverwriteAtThisChar
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpLineLocked
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumCharsInPrompt
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumChars
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorSizeX
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonSize
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>

<P><STRONG><a name="[575]"></a>GUI_ALLOC_Realloc</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gui_realloc.o(i.GUI_ALLOC_Realloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
</UL>

<P><STRONG><a name="[577]"></a>GUI_ALLOC_RequestSize</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i.GUI_ALLOC_RequestSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = GUI_ALLOC_RequestSize &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[5a3]"></a>GUI_ALLOC_Unlock</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[2dd]"></a>GUI_ALLOC_UnlockH</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_UnlockH))
<BR><BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetPasswordMode
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetWrapMode
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollState
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFlag
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveCursor2NextLine
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScrollV
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsOverwriteAtThisChar
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumCharsInPrompt
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumChars
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorSizeX
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__GetButtonSize
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Create
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetButtonSize
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
<LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetRect
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>

<P><STRONG><a name="[574]"></a>GUI_ALLOC_h2p</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_alloc.o(i.GUI_ALLOC_h2p))
<BR><BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[578]"></a>GUI_ARRAY_AddItem</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, gui_array.o(i.GUI_ARRAY_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_AddItem &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[579]"></a>GUI_ARRAY_Create</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_array.o(i.GUI_ARRAY_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[57a]"></a>GUI_ARRAY_Delete</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, gui_array.o(i.GUI_ARRAY_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[57b]"></a>GUI_ARRAY_DeleteItem</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, gui_array_deleteitem.o(i.GUI_ARRAY_DeleteItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_DeleteItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
</UL>

<P><STRONG><a name="[57c]"></a>GUI_ARRAY_GetNumItems</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[57d]"></a>GUI_ARRAY_GethItem</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_ARRAY_GethItem &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[57f]"></a>GUI_ARRAY_GetpItemLocked</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY_GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[581]"></a>GUI_ARRAY_ResizeItemLocked</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, gui_array_resizeitem.o(i.GUI_ARRAY_ResizeItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY_ResizeItemLocked &rArr; GUI_ARRAY__SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__SethItem
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
</UL>

<P><STRONG><a name="[57e]"></a>GUI_ARRAY__GethItem</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__GethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GetpItemLocked
</UL>

<P><STRONG><a name="[580]"></a>GUI_ARRAY__GetpItemLocked</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_array.o(i.GUI_ARRAY__GetpItemLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY__GethItem
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>

<P><STRONG><a name="[582]"></a>GUI_ARRAY__SethItem</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, gui_array.o(i.GUI_ARRAY__SethItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_ARRAY__SethItem &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
</UL>
<BR>[Called By]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
</UL>

<P><STRONG><a name="[583]"></a>GUI_AddDecMin</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_adddecmin.o(i.GUI_AddDecMin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_AddDecMin &rArr; GUI_Long2Len
</UL>
<BR>[Calls]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
</UL>

<P><STRONG><a name="[993]"></a>GUI_AddDecShift</STRONG> (Thumb, 142 bytes, Stack size 20 bytes, gui_adddecshift.o(i.GUI_AddDecShift), UNUSED)

<P><STRONG><a name="[585]"></a>GUI_CURSOR_GetStateEx</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_curs1.o(i.GUI_CURSOR_GetStateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_GetStateEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[586]"></a>GUI_CURSOR_SelectEx</STRONG> (Thumb, 196 bytes, Stack size 48 bytes, gui_curs1.o(i.GUI_CURSOR_SelectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[8c4]"></a>GUI_CalcColorDist</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, gui_calccolordist.o(i.GUI_CalcColorDist))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_CalcColorDist
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[369]"></a>GUI_Clear</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_Clear &rArr; GUI_GotoXY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeskCallback
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[58e]"></a>GUI_ClearRect</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gui_core.o(i.GUI_ClearRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>

<P><STRONG><a name="[58f]"></a>GUI_ClearRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_clearrectex.o(i.GUI_ClearRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_ClearRectEx &rArr; GUI_ClearRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[31b]"></a>GUI_CreateDialogBox</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, dialog.o(i.GUI_CreateDialogBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTopTitleDlg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceStartDlg
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceChargeStartDlg
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemoteBlastSlaveStateDlg
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarChargeDlg
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAccreditErrorForDLDlg
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastEnterDlg
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetMenuDlg
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSoftwareUpdateDlg
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarMaskRegDetDlg
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuMoreDlg
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoManageDlg
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastInfoVerifyDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitPowerOffDlg
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPowerOffDlg
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBusErrorRestoreDlg
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLoadingDlg
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetSetDlg
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogRecorderListViewDlg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolDetTestDlg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceSelfTestDlg
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateTypeSelDlg
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystDlg
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyPasswdModifyDlg
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFileSystemFormatDlg
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSliderDlg
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveNumberSetDlg
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMasterTimeShareSetDlg
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceUsagesSetDlg
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceNameSetDlg
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetTypeSetDlg
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowColorSetDlg
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUploadBlastRecordDlg
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderMasterBriefDlg
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetailedDlg
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceInfoDlg
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetInputHoleInfoDlg
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessBlastDetDlg
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDetDlg
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDelayDlg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastProcessDlg
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamListViewDlg
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamModifyDlg
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteStatusDlg
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastTestReportDlg
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarQuickDlg
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarQuickBeforeBlastDlg
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarCompleteDlg
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarBlastDlg
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyMenuDlg
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifySingleDlg
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifyBatchDlg
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderSlaveInfoListDlg
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetInfoListDlg
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveStatusDlg
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetSlaveBackupMenuDlg
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueInsertMenuDlg
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueBackupMenuDlg
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveAccreditErrorForDLDlg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastMasterProcessDlg
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateBlueTypeSelDlg
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiConnectDlg
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInitDlg
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiPasswordDlg
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInfoDlg
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystHighVoltageInputDlg
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetOutsideInputDlg
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystBlastDlg
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyRangeInputDlg
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInfoInsertStatusDlg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInsertRangeInputDlg
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessReadyConfirmDlg
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessWaitRegDetDlg
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelayInputDlg
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelaySelDlg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleParamInputDlg
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleInsertInputDlg
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegDetOutsideInputBatchDlg
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegParamMenuDlg
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegDetFeatureInputForBarcodeDlg
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogUploadDlg
</UL>

<P><STRONG><a name="[594]"></a>GUI_DEVICE_Create</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[595]"></a>GUI_DEVICE_CreateAndLink</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_CreateAndLink))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[597]"></a>GUI_DEVICE_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Delete))
<BR><BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[596]"></a>GUI_DEVICE_Link</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, gui_device.o(i.GUI_DEVICE_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>

<P><STRONG><a name="[599]"></a>GUI_DEVICE_LinkDevices</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, gui_device.o(i.GUI_DEVICE_LinkDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_DEVICE_LinkDevices &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[59a]"></a>GUI_DEVICE_Unlink</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE_Unlink))
<BR><BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[59c]"></a>GUI_DEVICE_UnlinkTaskDevices</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, gui_device.o(i.GUI_DEVICE_UnlinkTaskDevices))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_DEVICE_UnlinkTaskDevices
</UL>
<BR>[Calls]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UnlinkDevice
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[5e6]"></a>GUI_DEVICE__GetpDriver</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui_device.o(i.GUI_DEVICE__GetpDriver))
<BR><BR>[Called By]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
<LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
<LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
</UL>

<P><STRONG><a name="[59d]"></a>GUI_DRAW__Draw</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, gui_draw.o(i.GUI_DRAW__Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GUI_DRAW__Draw
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[59e]"></a>GUI_DRAW__GetXSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetXSize
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[59f]"></a>GUI_DRAW__GetYSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_draw.o(i.GUI_DRAW__GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_DRAW__GetYSize
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[2d2]"></a>GUI_Delay</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, gui_time.o(i.GUI_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = GUI_Delay &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
<LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[5a4]"></a>GUI_DispChar</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_dispchar.o(i.GUI_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_DispChar &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChars
</UL>

<P><STRONG><a name="[5a5]"></a>GUI_DispCharAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispchar.o(i.GUI_DispCharAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = GUI_DispCharAt &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispString
</UL>

<P><STRONG><a name="[5a6]"></a>GUI_DispChars</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gui_dispchars.o(i.GUI_DispChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUI_DispChars &rArr; GUI_DispChar &rArr; CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispString
</UL>

<P><STRONG><a name="[3dc]"></a>GUI_DispDecSpace</STRONG> (Thumb, 54 bytes, Stack size 32 bytes, gui_val.o(i.GUI_DispDecSpace))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI_DispDecSpace &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Long2Len
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[52d]"></a>GUI_DispNextLine</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_char.o(i.GUI_DispNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_DispNextLine &rArr; GUI_GetFontDistY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>

<P><STRONG><a name="[3dd]"></a>GUI_DispString</STRONG> (Thumb, 260 bytes, Stack size 40 bytes, gui_dispstring.o(i.GUI_DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>

<P><STRONG><a name="[382]"></a>GUI_DispStringAt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_dispstringat.o(i.GUI_DispStringAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[386]"></a>GUI_DispStringHCenterAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, gui_dispstringhcenter.o(i.GUI_DispStringHCenterAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogo
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[6ea]"></a>GUI_DispStringInRect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRect))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5ad]"></a>GUI_DispStringInRectMax</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, gui_dispstringinrect.o(i.GUI_DispStringInRectMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectMax &rArr; GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispString
</UL>

<P><STRONG><a name="[5b1]"></a>GUI_DispStringInRectWrap</STRONG> (Thumb, 272 bytes, Stack size 72 bytes, gui_dispstringinrectwrap.o(i.GUI_DispStringInRectWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[589]"></a>GUI_DrawBitmap</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, gui_drawbitmap.o(i.GUI_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GUI_DrawBitmap &rArr; GL_DrawBitmap &rArr; GUI_SetDrawMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogo
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5b6]"></a>GUI_DrawFocusRect</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, gui_drawfocusrect.o(i.GUI_DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawPixel
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5b8]"></a>GUI_DrawHLine</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, gui_drawhline.o(i.GUI_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[5b9]"></a>GUI_DrawLine</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gui_drawline.o(i.GUI_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 212 + Unknown Stack Size
<LI>Call Chain = GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueSignal
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
</UL>

<P><STRONG><a name="[5ba]"></a>GUI_DrawRect</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, gui_2dlib.o(i.GUI_DrawRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawHLine
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>

<P><STRONG><a name="[5bb]"></a>GUI_DrawVLine</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_drawvline.o(i.GUI_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_DrawVLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawVLine
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[378]"></a>GUI_EndDialog</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dialog.o(i.GUI_EndDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = GUI_EndDialog &rArr; GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTopTitleDlg
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLoadingDlg
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseLoadingDlg
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWindowAndParent
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2d1]"></a>GUI_Exec</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_exec.o(i.GUI_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[5be]"></a>GUI_Exec1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_exec.o(i.GUI_Exec1))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>
<BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
</UL>

<P><STRONG><a name="[5c0]"></a>GUI_ExecCreatedDialog</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, dialog.o(i.GUI_ExecCreatedDialog))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
</UL>

<P><STRONG><a name="[5c3]"></a>GUI_FillRect</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, gui_fillrect.o(i.GUI_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
</UL>

<P><STRONG><a name="[5c4]"></a>GUI_FillRectEx</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_fillrectex.o(i.GUI_FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
</UL>

<P><STRONG><a name="[5c5]"></a>GUI_GetBitmapPixelIndex</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_getbitmappixelindex.o(i.GUI_GetBitmapPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkPixel
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[5c6]"></a>GUI_GetBitmapPixelIndexEx</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, gui_getbitmappixelindex.o(i.GUI_GetBitmapPixelIndexEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[63b]"></a>GUI_GetBitsPerPixelEx</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetBitsPerPixelEx))
<BR><BR>[Called By]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>

<P><STRONG><a name="[556]"></a>GUI_GetBkColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetBkColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
</UL>

<P><STRONG><a name="[363]"></a>GUI_GetCharDistX</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorSizeX
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharDistX
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[5c9]"></a>GUI_GetCharDistXEx</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_char.o(i.GUI_GetCharDistXEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_GetCharDistXEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>

<P><STRONG><a name="[5ca]"></a>GUI_GetClientRect</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getclientrect.o(i.GUI_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[555]"></a>GUI_GetColor</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_getcolor.o(i.GUI_GetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[587]"></a>GUI_GetCursorLayer</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_selectlayer.o(i.GUI_GetCursorLayer))
<BR><BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[5bc]"></a>GUI_GetDialogStatusPtr</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, dialog.o(i.GUI_GetDialogStatusPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI_GetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>

<P><STRONG><a name="[5a7]"></a>GUI_GetFontDistY</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetFontDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontDistY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5cd]"></a>GUI_GetFontInfo</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_getfontinfo.o(i.GUI_GetFontInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontInfo &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[365]"></a>GUI_GetFontSizeY</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getfontsizey.o(i.GUI_GetFontSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetFontSizeY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetFontSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[5cf]"></a>GUI_GetOrg</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_getorg.o(i.GUI_GetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_GetOrg &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOrg
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5d1]"></a>GUI_GetPenSize</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_pen.o(i.GUI_GetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetPenSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
</UL>

<P><STRONG><a name="[5d2]"></a>GUI_GetStringDistX</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_getstringdistx.o(i.GUI_GetStringDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[5d4]"></a>GUI_GetTime</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_time.o(i.GUI_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_GetTime &rArr; GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
</UL>

<P><STRONG><a name="[5a8]"></a>GUI_GetYAdjust</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, gui_char.o(i.GUI_GetYAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_GetYAdjust &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
</UL>

<P><STRONG><a name="[68d]"></a>GUI_GetYDistOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getysizeoffont.o(i.GUI_GetYDistOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveCursor2NextLine
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[8aa]"></a>GUI_GetYSizeOfFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_getysizeoffont.o(i.GUI_GetYSizeOfFont))
<BR><BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[906]"></a>GUI_GetpfColor2IndexEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfColor2IndexEx))
<BR><BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[63c]"></a>GUI_GetpfIndex2ColorEx</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.GUI_GetpfIndex2ColorEx))
<BR><BR>[Called By]<UL><LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[3de]"></a>GUI_GotoXY</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_goto.o(i.GUI_GotoXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_GotoXY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoY
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GotoX
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>

<P><STRONG><a name="[2c3]"></a>GUI_Init</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, gui_core.o(i.GUI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = GUI_Init &rArr; WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_CopyContext
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[5dd]"></a>GUI_InvertRect</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gui_invertrect.o(i.GUI_InvertRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_InvertRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
</UL>

<P><STRONG><a name="[2e6]"></a>GUI_Lock</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, gui_task.o(i.GUI_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = GUI_Lock &rArr; GUI_X_Lock &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTaskId
<LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_UnlinkTaskDevices
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_LinkDevices
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetPasswordMode
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetWrapMode
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFlag
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>

<P><STRONG><a name="[584]"></a>GUI_Long2Len</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_adddecshift.o(i.GUI_Long2Len))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_Long2Len
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>

<P><STRONG><a name="[5e0]"></a>GUI_MEMDEV_Clear</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, guidev_clear.o(i.GUI_MEMDEV_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Clear &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5e1]"></a>GUI_MEMDEV_CopyToLCD</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5e2]"></a>GUI_MEMDEV_CopyToLCDAt</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, guidev.o(i.GUI_MEMDEV_CopyToLCDAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>

<P><STRONG><a name="[5e5]"></a>GUI_MEMDEV_CreateEx</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, guidev.o(i.GUI_MEMDEV_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_CreateEx &rArr; GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5e8]"></a>GUI_MEMDEV_Delete</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Delete &rArr; GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[5eb]"></a>GUI_MEMDEV_Draw</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, guidev_banding.o(i.GUI_MEMDEV_Draw))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Min
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[5f2]"></a>GUI_MEMDEV_GetBitsPerPixel</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, guidev.o(i.GUI_MEMDEV_GetBitsPerPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetBitsPerPixel &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[5f4]"></a>GUI_MEMDEV_GetDataPtr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, guidev_getdataptr.o(i.GUI_MEMDEV_GetDataPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetDataPtr &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[5ef]"></a>GUI_MEMDEV_GetYSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, guidev_getysize.o(i.GUI_MEMDEV_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_GetYSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[133]"></a>GUI_MEMDEV_Paint1Static</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, guidev_staticdevices.o(i.GUI_MEMDEV_Paint1Static))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Paint1Static &rArr; _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[5f0]"></a>GUI_MEMDEV_ReduceYSize</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, guidev_reduceysize.o(i.GUI_MEMDEV_ReduceYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_ReduceYSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5e4]"></a>GUI_MEMDEV_Select</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV_Select))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Select &rArr; GUI_SelectLCD &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[5f1]"></a>GUI_MEMDEV_SetOrg</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, guidev_setorg.o(i.GUI_MEMDEV_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_SetOrg &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[5f6]"></a>GUI_MEMDEV_Write</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_write.o(i.GUI_MEMDEV_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_Write &rArr; GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[5fa]"></a>GUI_MEMDEV_WriteAt</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, guidev_write.o(i.GUI_MEMDEV_WriteAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV_WriteAt &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Called By]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Write
</UL>

<P><STRONG><a name="[5e7]"></a>GUI_MEMDEV__CreateFixed</STRONG> (Thumb, 230 bytes, Stack size 64 bytes, guidev.o(i.GUI_MEMDEV__CreateFixed))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__CreateFixed &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
</UL>

<P><STRONG><a name="[131]"></a>GUI_MEMDEV__WriteToActiveAlpha</STRONG> (Thumb, 266 bytes, Stack size 120 bytes, guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveAlpha &rArr; GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndicesEx
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[5fb]"></a>GUI_MEMDEV__WriteToActiveAt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidev.o(i.GUI_MEMDEV__WriteToActiveAt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MEMDEV__WriteToActiveAt
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[130]"></a>GUI_MEMDEV__WriteToActiveOpaque</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, guidev_writetoactiveopaque.o(i.GUI_MEMDEV__WriteToActiveOpaque))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[16b]"></a>GUI_MULTIBUF_Begin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_Begin))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_Begin &rArr; GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_BeginEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_multibuf.o(.constdata)
</UL>
<P><STRONG><a name="[602]"></a>GUI_MULTIBUF_BeginEx</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, gui_multibuf.o(i.GUI_MULTIBUF_BeginEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_MULTIBUF_BeginEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_Begin
</UL>

<P><STRONG><a name="[16c]"></a>GUI_MULTIBUF_End</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_multibuf.o(i.GUI_MULTIBUF_End))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MULTIBUF_End &rArr; GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_EndEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_multibuf.o(.constdata)
</UL>
<P><STRONG><a name="[603]"></a>GUI_MULTIBUF_EndEx</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gui_multibuf.o(i.GUI_MULTIBUF_EndEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_MULTIBUF_EndEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MULTIBUF_End
</UL>

<P><STRONG><a name="[773]"></a>GUI_MergeRect</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, gui_mergerect.o(i.GUI_MergeRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_MergeRect
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[690]"></a>GUI_MoveRect</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, gui_moverect.o(i.GUI_MoveRect))
<BR><BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[604]"></a>GUI_PollKeyMsg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_PollKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
</UL>

<P><STRONG><a name="[607]"></a>GUI_ReadRectEx</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, lcd_readrect.o(i.GUI_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GUI_ReadRectEx &rArr; LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReadRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[8ca]"></a>GUI_RectsIntersect</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, gui_rectsintersect.o(i.GUI_RectsIntersect))
<BR><BR>[Called By]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[609]"></a>GUI_RestoreContext</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_savecontext.o(i.GUI_RestoreContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_RestoreContext &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[58b]"></a>GUI_SPRITE_Delete</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_Delete &rArr; _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[60c]"></a>GUI_SPRITE_Show</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, gui_sprite.o(i.GUI_SPRITE_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[58c]"></a>GUI_SPRITE__CreateEx</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, gui_sprite.o(i.GUI_SPRITE__CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Delete
<LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Create
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoColorConversion
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[610]"></a>GUI_SaveContext_W</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_savecontext.o(i.GUI_SaveContext_W))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_SaveContext_W &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[5e9]"></a>GUI_SelectLCD</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_selectlcd.o(i.GUI_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLCD &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[588]"></a>GUI_SelectLayer</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SelectLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[612]"></a>GUI_SendKeyMsg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_SendKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = GUI_SendKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[381]"></a>GUI_SetBkColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_setcolor.o(i.GUI_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetBkColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[5b3]"></a>GUI_SetClipRect</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_setcliprect.o(i.GUI_SetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_SetClipRect &rArr; WM_SetUserClipRect &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[380]"></a>GUI_SetColor</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_setcolor.o(i.GUI_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiSignalStrength
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueSignal
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[615]"></a>GUI_SetColorIndex</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_setcolorindex.o(i.GUI_SetColorIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetColorIndex &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>

<P><STRONG><a name="[630]"></a>GUI_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_core.o(i.GUI_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
</UL>

<P><STRONG><a name="[5c1]"></a>GUI_SetDialogStatusPtr</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, dialog.o(i.GUI_SetDialogStatusPtr))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = GUI_SetDialogStatusPtr &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[531]"></a>GUI_SetDrawMode</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_setdrawmode.o(i.GUI_SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_SetDrawMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[36b]"></a>GUI_SetFont</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_setfont.o(i.GUI_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetFont &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[58a]"></a>GUI_SetLayerSizeEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerSizeEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[618]"></a>GUI_SetLayerVisEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_selectlayer.o(i.GUI_SetLayerVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetLayerVisEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVisEx
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Show
</UL>

<P><STRONG><a name="[545]"></a>GUI_SetLineStyle</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_setlinestyle.o(i.GUI_SetLineStyle))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetLineStyle &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[5db]"></a>GUI_SetOrg</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_setorg.o(i.GUI_SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetOrg &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[542]"></a>GUI_SetPenSize</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_pen.o(i.GUI_SetPenSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetPenSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiSignalStrength
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueSignal
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArcAA
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[543]"></a>GUI_SetTextAlign</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_settextalign.o(i.GUI_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextAlign &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>

<P><STRONG><a name="[544]"></a>GUI_SetTextMode</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_settextmode.o(i.GUI_SetTextMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_SetTextMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[61b]"></a>GUI_SignalEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i.GUI_SignalEvent))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[61a]"></a>GUI_StoreKey</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_onkey.o(i.GUI_StoreKey))
<BR><BR>[Calls]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[28d]"></a>GUI_StoreKeyMsg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, gui_onkey.o(i.GUI_StoreKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_StoreKeyMsg
</UL>
<BR>[Calls]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppKeyScanTask
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
</UL>

<P><STRONG><a name="[61d]"></a>GUI_TIMER_Create</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, gui_timer.o(i.GUI_TIMER_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[61f]"></a>GUI_TIMER_Delete</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFromLinList
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>

<P><STRONG><a name="[9e]"></a>GUI_TIMER_Exec</STRONG> (Thumb, 112 bytes, Stack size 56 bytes, gui_timer.o(i.GUI_TIMER_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Exec &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[622]"></a>GUI_TIMER_GetFlag</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_GetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_GetFlag &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[623]"></a>GUI_TIMER_Restart</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_Restart &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Unlink
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
</UL>

<P><STRONG><a name="[624]"></a>GUI_TIMER_SetPeriod</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER_SetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER_SetPeriod &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
</UL>

<P><STRONG><a name="[625]"></a>GUI_TIMER__GetFirstTimer</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetFirstTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetFirstTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[626]"></a>GUI_TIMER__GetNextTimerLin</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetNextTimerLin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_TIMER__GetNextTimerLin
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
</UL>

<P><STRONG><a name="[627]"></a>GUI_TIMER__GetPeriod</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, gui_timer.o(i.GUI_TIMER__GetPeriod))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER__GetPeriod &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[628]"></a>GUI_TIMER__IsActive</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_timer.o(i.GUI_TIMER__IsActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_TIMER__IsActive &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[629]"></a>GUI_UC_Encode</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui_uc.o(i.GUI_UC_Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GUI_UC_Encode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[62a]"></a>GUI_UC_GetCharCode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_uc.o(i.GUI_UC_GetCharCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_UC_GetCharCode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsOverwriteAtThisChar
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharDistX
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorCharacter
</UL>

<P><STRONG><a name="[62b]"></a>GUI_UC_GetCharSize</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gui_uc.o(i.GUI_UC_GetCharSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_UC_GetCharSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[2c5]"></a>GUI_UC_SetEncodeUTF8</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui_uc_encodeutf8.o(i.GUI_UC_SetEncodeUTF8))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GUI_UC_SetEncodeUTF8 &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[8fc]"></a>GUI_UC__CalcSizeOfChar</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_uc.o(i.GUI_UC__CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[63e]"></a>GUI_UC__GetCharCodeInc</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__GetCharCodeInc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetWordWrap
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharWrap
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosX
</UL>

<P><STRONG><a name="[8b9]"></a>GUI_UC__NumBytes2NumChars</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumBytes2NumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumBytes2NumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumCharsInPrompt
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorPosChar
</UL>

<P><STRONG><a name="[5ac]"></a>GUI_UC__NumChars2NumBytes</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, gui_uc.o(i.GUI_UC__NumChars2NumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_UC__NumChars2NumBytes
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesFromCurrent
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumCharsInPrompt
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorLine
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[8da]"></a>GUI_USAGE_AddRect</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, guidev_usage.o(i.GUI_USAGE_AddRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI_USAGE_AddRect
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[5fc]"></a>GUI_USAGE_BM_Create</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
</UL>

<P><STRONG><a name="[5ea]"></a>GUI_USAGE_DecUseCnt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidev_usage.o(i.GUI_USAGE_DecUseCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_DecUseCnt &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
</UL>

<P><STRONG><a name="[2e9]"></a>GUI_Unlock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_task.o(i.GUI_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_SetEncodeUTF8
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetPasswordMode
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextAlign
<LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYAdjust
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetOrg
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_RequestSize
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetWrapMode
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFlag
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFocussedWindow
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
<LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
<LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispNextLine
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_ReduceYSize
<LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetYSize
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Clear
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_DecUseCnt
<LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_BM_Create
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CreateEx
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Exec
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLineStyle
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>

<P><STRONG><a name="[5c2]"></a>GUI_WaitEvent</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, gui_waitevent.o(i.GUI_WaitEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI_WaitEvent &rArr; GUI_TIMER__GetPeriod &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Unlock
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Lock
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WaitEvent
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__IsActive
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetPeriod
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
</UL>

<P><STRONG><a name="[5b2]"></a>GUI_WrapGetNumLines</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, gui_dispstringinrectwrap.o(i.GUI_WrapGetNumLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[62e]"></a>GUI_X_Config</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, guiconf.o(i.GUI_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_X_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AssignMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[5a2]"></a>GUI_X_Delay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui_x_ucosii.o(i.GUI_X_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = GUI_X_Delay &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_ExecIdle
</UL>

<P><STRONG><a name="[2c]"></a>GUI_X_ExecIdle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gui_x_ucosii.o(i.GUI_X_ExecIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = GUI_X_ExecIdle &rArr; GUI_X_Delay &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_waitevent.o(.data)
</UL>
<P><STRONG><a name="[5de]"></a>GUI_X_GetTaskId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_x_ucosii.o(i.GUI_X_GetTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[5a0]"></a>GUI_X_GetTime</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, gui_x_ucosii.o(i.GUI_X_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_GetTime &rArr; OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
</UL>
<BR>[Called By]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Delay
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
</UL>

<P><STRONG><a name="[5d8]"></a>GUI_X_Init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, gui_x_ucosii.o(i.GUI_X_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_Init &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[55c]"></a>GUI_X_InitOS</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gui_x_ucosii.o(i.GUI_X_InitOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GUI_X_InitOS &rArr; OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
</UL>

<P><STRONG><a name="[5df]"></a>GUI_X_Lock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_x_ucosii.o(i.GUI_X_Lock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = GUI_X_Lock &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>
<BR>[Called By]<UL><LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>

<P><STRONG><a name="[62c]"></a>GUI_X_Unlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gui_x_ucosii.o(i.GUI_X_Unlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
</UL>

<P><STRONG><a name="[5fd]"></a>GUI__AllocAlphaBuffer</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__AllocAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI__AllocAlphaBuffer &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[634]"></a>GUI__AlphaSuppressMixing</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_setalpha.o(i.GUI__AlphaSuppressMixing))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__AlphaSuppressMixing
</UL>
<BR>[Calls]<UL><LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_SetAndMask
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[8c6]"></a>GUI__CompactPixelIndices</STRONG> (Thumb, 296 bytes, Stack size 8 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>

<P><STRONG><a name="[5ff]"></a>GUI__CompactPixelIndicesEx</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, gui__compactpixelindices.o(i.GUI__CompactPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__CompactPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[5d7]"></a>GUI__Config</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, gui_core.o(i.GUI__Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GUI__Config &rArr; LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Config
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[637]"></a>GUI__CosHQ</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui__sinhq.o(i.GUI__CosHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__CosHQ &rArr; GUI__SinHQ
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[5ab]"></a>GUI__DispLine</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[5b0]"></a>GUI__DispStringInRect</STRONG> (Thumb, 320 bytes, Stack size 72 bytes, gui_dispstringinrect.o(i.GUI__DispStringInRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = GUI__DispStringInRect &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__HandleEOLine
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
</UL>

<P><STRONG><a name="[8bd]"></a>GUI__DivideRound32</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__divideround32.o(i.GUI__DivideRound32))
<BR><BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[5fe]"></a>GUI__DoAlphaBlending</STRONG> (Thumb, 422 bytes, Stack size 96 bytes, gui__alpha.o(i.GUI__DoAlphaBlending))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = GUI__DoAlphaBlending &rArr; GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ExpandPixelIndicesEx
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[63d]"></a>GUI__ExpandPixelIndicesEx</STRONG> (Thumb, 320 bytes, Stack size 40 bytes, gui__expandpixelindices.o(i.GUI__ExpandPixelIndicesEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__ExpandPixelIndicesEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>

<P><STRONG><a name="[633]"></a>GUI__GetAlphaBuffer</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, gui__alpha.o(i.GUI__GetAlphaBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = GUI__GetAlphaBuffer &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AllocAlphaBuffer
</UL>

<P><STRONG><a name="[904]"></a>GUI__GetCursorPosChar</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosChar))
<BR><BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
</UL>

<P><STRONG><a name="[8f0]"></a>GUI__GetCursorPosX</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__getcursorpos.o(i.GUI__GetCursorPosX))
<BR><BR>[Called By]<UL><LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
</UL>

<P><STRONG><a name="[5ce]"></a>GUI__GetFontSizeY</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui__getfontsizey.o(i.GUI__GetFontSizeY))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
</UL>

<P><STRONG><a name="[5aa]"></a>GUI__GetLineDistX</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
</UL>
<BR>[Called By]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispString
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[5a9]"></a>GUI__GetLineNumChars</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, gui_charline.o(i.GUI__GetLineNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>

<P><STRONG><a name="[5d3]"></a>GUI__GetNumChars</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, gui__getnumchars.o(i.GUI__GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
</UL>
<BR>[Called By]<UL><LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumChars
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>

<P><STRONG><a name="[5d0]"></a>GUI__GetOrg</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, gui_getorg.o(i.GUI__GetOrg))
<BR><BR>[Called By]<UL><LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetOrg
</UL>

<P><STRONG><a name="[364]"></a>GUI__GetOverlap</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, gui_charline.o(i.GUI__GetOverlap))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistXEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
</UL>

<P><STRONG><a name="[63a]"></a>GUI__HandleEOLine</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui__handleeoline.o(i.GUI__HandleEOLine))
<BR><BR>[Called By]<UL><LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispStringInRect
</UL>

<P><STRONG><a name="[861]"></a>GUI__IntersectRect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, gui__intersectrect.o(i.GUI__IntersectRect))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>

<P><STRONG><a name="[5af]"></a>GUI__IntersectRects</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, gui__intersectrects.o(i.GUI__IntersectRects))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>

<P><STRONG><a name="[63f]"></a>GUI__ManageCache</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui__managecache.o(i.GUI__ManageCache))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCache &rArr; GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCacheEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispLine
</UL>

<P><STRONG><a name="[640]"></a>GUI__ManageCacheEx</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, gui__managecache.o(i.GUI__ManageCacheEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GUI__ManageCacheEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
</UL>

<P><STRONG><a name="[2e]"></a>GUI__MixColors</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, gui__alpha.o(i.GUI__MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColorsBulk
<LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DoAlphaBlending
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[2f]"></a>GUI__MixColorsBulk</STRONG> (Thumb, 78 bytes, Stack size 36 bytes, gui__alpha.o(i.GUI__MixColorsBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = GUI__MixColorsBulk &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(.data)
</UL>
<P><STRONG><a name="[5b7]"></a>GUI__ReduceRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gui__reducerect.o(i.GUI__ReduceRect))
<BR><BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[559]"></a>GUI__RegisterExit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_core.o(i.GUI__RegisterExit))
<BR><BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[641]"></a>GUI__SetPixelAlpha</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gui__setpixelalpha.o(i.GUI__SetPixelAlpha))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI__SetPixelAlpha &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[2ed]"></a>GUI__SetText</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui__settext.o(i.GUI__SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GUI__SetText &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>

<P><STRONG><a name="[638]"></a>GUI__SinHQ</STRONG> (Thumb, 104 bytes, Stack size 12 bytes, gui__sinhq.o(i.GUI__SinHQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GUI__SinHQ
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[5b5]"></a>GUI__WrapGetNumBytesToNextLine</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gui__wrap.o(i.GUI__WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesFromCurrent
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WrapGetNumLines
</UL>

<P><STRONG><a name="[5b4]"></a>GUI__WrapGetNumCharsDisp</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI__WrapGetNumCharsDisp &rArr; _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
</UL>

<P><STRONG><a name="[646]"></a>GUI__WrapGetNumCharsToNextLine</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, gui__wrap.o(i.GUI__WrapGetNumCharsToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
</UL>
<BR>[Called By]<UL><LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
</UL>

<P><STRONG><a name="[55b]"></a>GUI__memset</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, gui__memset.o(i.GUI__memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUITASK_Init
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnExit
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocInit
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[8e9]"></a>GUI__memset16</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gui__memset16.o(i.GUI__memset16))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI__memset16
</UL>
<BR>[Called By]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[648]"></a>GUI__strcmp</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gui__strcmp.o(i.GUI__strcmp))
<BR><BR>[Called By]<UL><LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp_hp
</UL>

<P><STRONG><a name="[644]"></a>GUI__strcmp_hp</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, gui__strcmp.o(i.GUI__strcmp_hp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI__strcmp_hp
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[645]"></a>GUI__strlen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui__strlen.o(i.GUI__strlen))
<BR><BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>

<P><STRONG><a name="[53b]"></a>GUI_cos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.GUI_cos))
<BR><BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[53c]"></a>GUI_sin</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, gui_drawline.o(i.GUI_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_sin
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[360]"></a>GetADCValue</STRONG> (Thumb, 224 bytes, Stack size 64 bytes, adc.o(i.GetADCValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = GetADCValue &rArr; U16DataFallRank
</UL>
<BR>[Calls]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U16DataFallRank
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay10us
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinABAdcValue
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusIsShort
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLowCurrent
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusHighCurrent
</UL>

<P><STRONG><a name="[4e9]"></a>GetAccreditDetInfoForDL</STRONG> (Thumb, 320 bytes, Stack size 56 bytes, recorder.o(i.GetAccreditDetInfoForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = GetAccreditDetInfoForDL &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
</UL>

<P><STRONG><a name="[49b]"></a>GetAccreditErrorCount</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, recorder.o(i.GetAccreditErrorCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetAccreditErrorCount &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllAccreditErrorCount
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[49f]"></a>GetAccreditErrorFileCount</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, recorder.o(i.GetAccreditErrorFileCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetAccreditErrorFileCount &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[49e]"></a>GetAccreditErrorFileIndex</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, recorder.o(i.GetAccreditErrorFileIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetAccreditErrorFileIndex &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[64e]"></a>GetAccreditErrorString1ForDL</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, display.o(i.GetAccreditErrorString1ForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GetAccreditErrorString1ForDL &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[4a6]"></a>GetAccreditErrorString2ForDL</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, display.o(i.GetAccreditErrorString2ForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GetAccreditErrorString2ForDL &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
</UL>

<P><STRONG><a name="[235]"></a>GetAddrNameFromIndex</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mastermode.o(i.GetAddrNameFromIndex))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveSaveDetInfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDeleteDetInfo
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDetInfoToBlasterRecord
</UL>

<P><STRONG><a name="[49d]"></a>GetAllAccreditErrorCount</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, recorder.o(i.GetAllAccreditErrorCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = GetAllAccreditErrorCount &rArr; GetAccreditErrorCount &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[257]"></a>GetAllSlaveInfo</STRONG> (Thumb, 312 bytes, Stack size 24 bytes, mastermode.o(i.GetAllSlaveInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = GetAllSlaveInfo &rArr; GetSlaveVoltageOrCurrent &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
</UL>

<P><STRONG><a name="[4ee]"></a>GetBitNum</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dethardware.o(i.GetBitNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetBitNum
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
</UL>

<P><STRONG><a name="[651]"></a>GetBlastDataDetInfoFromRecorder</STRONG> (Thumb, 610 bytes, Stack size 240 bytes, safemonitor.o(i.GetBlastDataDetInfoFromRecorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = GetBlastDataDetInfoFromRecorder &rArr; GetConfigFileU32 &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgbar
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexStrToCharStr
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileU32
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
</UL>

<P><STRONG><a name="[7b9]"></a>GetBlastDataEndPack</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, safemonitor.o(i.GetBlastDataEndPack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetBlastDataEndPack
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
</UL>

<P><STRONG><a name="[652]"></a>GetBlastDataFirstPackFromRecorder</STRONG> (Thumb, 572 bytes, Stack size 168 bytes, safemonitor.o(i.GetBlastDataFirstPackFromRecorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = GetBlastDataFirstPackFromRecorder &rArr; GetConfigFileU32 &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgbar
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileU32
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
</UL>

<P><STRONG><a name="[653]"></a>GetBlastDataSecondPackFromRecorder</STRONG> (Thumb, 786 bytes, Stack size 208 bytes, safemonitor.o(i.GetBlastDataSecondPackFromRecorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 688 + Unknown Stack Size
<LI>Call Chain = GetBlastDataSecondPackFromRecorder &rArr; GetConfigFileString &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgbar
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
</UL>

<P><STRONG><a name="[2a1]"></a>GetBlastRecoderUploadState</STRONG> (Thumb, 92 bytes, Stack size 136 bytes, safemonitor.o(i.GetBlastRecoderUploadState))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = GetBlastRecoderUploadState &rArr; GetConfigFileString &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[654]"></a>GetBlastRecorderData</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, recorder.o(i.GetBlastRecorderData))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = GetBlastRecorderData &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[407]"></a>GetBlastRecorderDeviceName</STRONG> (Thumb, 80 bytes, Stack size 88 bytes, recorder.o(i.GetBlastRecorderDeviceName))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = GetBlastRecorderDeviceName &rArr; GetConfigFileString &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[405]"></a>GetBlastRecorderDeviceUsages</STRONG> (Thumb, 84 bytes, Stack size 88 bytes, recorder.o(i.GetBlastRecorderDeviceUsages))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = GetBlastRecorderDeviceUsages &rArr; GetConfigFileString &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[655]"></a>GetBlastRecorderFileSize</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, recorder.o(i.GetBlastRecorderFileSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetBlastRecorderFileSize &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[656]"></a>GetBlastRecorderIndexFromFileName</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, recorder.o(i.GetBlastRecorderIndexFromFileName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetBlastRecorderIndexFromFileName &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[23b]"></a>GetBlasterFactoryCode</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, midfunction.o(i.GetBlasterFactoryCode))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetFactoryCodeIsRulePass
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetFactoryCodeIsRulePass
</UL>

<P><STRONG><a name="[22a]"></a>GetBlasterPath</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, midfunction.o(i.GetBlasterPath))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecoderUploadState
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataSecondPackFromRecorder
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataFirstPackFromRecorder
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenBlasterRecordFile
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderDeviceUsages
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderDeviceName
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
</UL>

<P><STRONG><a name="[7e7]"></a>GetBlueCurrentHostSlaveStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bluetooth.o(i.GetBlueCurrentHostSlaveStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[2b9]"></a>GetBlueDkeyBatVoltage</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, bluedkey.o(i.GetBlueDkeyBatVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = GetBlueDkeyBatVoltage &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUnpack
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyPack
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[340]"></a>GetBlueDkeyGPS</STRONG> (Thumb, 614 bytes, Stack size 40 bytes, bluedkey.o(i.GetBlueDkeyGPS))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = GetBlueDkeyGPS &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiToU32
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUnpack
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyPack
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFromSeparator
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyGpsIsPass
</UL>

<P><STRONG><a name="[65a]"></a>GetBlueDkeyGeneralString</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, bluedkey.o(i.GetBlueDkeyGeneralString))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GetBlueDkeyGeneralString &rArr; BlueSendData &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUnpack
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyPack
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeySoftwareVersion
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyId
</UL>

<P><STRONG><a name="[65b]"></a>GetBlueDkeyId</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, bluedkey.o(i.GetBlueDkeyId))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GetBlueDkeyId &rArr; GetBlueDkeyGeneralString &rArr; BlueSendData &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyInfo
</UL>

<P><STRONG><a name="[3b8]"></a>GetBlueDkeyInfo</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bluedkey.o(i.GetBlueDkeyInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GetBlueDkeyInfo &rArr; GetBlueDkeySoftwareVersion &rArr; GetBlueDkeyGeneralString &rArr; BlueSendData &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeySoftwareVersion
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyId
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[341]"></a>GetBlueDkeyRtc</STRONG> (Thumb, 466 bytes, Stack size 24 bytes, bluedkey.o(i.GetBlueDkeyRtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 576 + Unknown Stack Size
<LI>Call Chain = GetBlueDkeyRtc &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AsciiToU32
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUnpack
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyPack
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcByBlueDkey
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyGpsIsPass
</UL>

<P><STRONG><a name="[65c]"></a>GetBlueDkeySoftwareVersion</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, bluedkey.o(i.GetBlueDkeySoftwareVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GetBlueDkeySoftwareVersion &rArr; GetBlueDkeyGeneralString &rArr; BlueSendData &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
</UL>
<BR>[Called By]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyInfo
</UL>

<P><STRONG><a name="[34d]"></a>GetBlueSlaveDetData</STRONG> (Thumb, 872 bytes, Stack size 72 bytes, bluemaster.o(i.GetBlueSlaveDetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = GetBlueSlaveDetData &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexStrToCharStr
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmptyDetIndex
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFromSeparator
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
</UL>

<P><STRONG><a name="[33d]"></a>GetBlueSlaveDetNumberAndType</STRONG> (Thumb, 408 bytes, Stack size 40 bytes, bluemaster.o(i.GetBlueSlaveDetNumberAndType))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = GetBlueSlaveDetNumberAndType &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoInsert
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[350]"></a>GetBlueSlaveDetNumberSpecifiedHoleRange</STRONG> (Thumb, 448 bytes, Stack size 40 bytes, bluemaster.o(i.GetBlueSlaveDetNumberSpecifiedHoleRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = GetBlueSlaveDetNumberSpecifiedHoleRange &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
</UL>

<P><STRONG><a name="[34f]"></a>GetBlueSlaveHoleNumberData</STRONG> (Thumb, 330 bytes, Stack size 24 bytes, bluemaster.o(i.GetBlueSlaveHoleNumberData))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GetBlueSlaveHoleNumberData &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
</UL>

<P><STRONG><a name="[45e]"></a>GetBlueSlaveVersion</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, bluemaster.o(i.GetBlueSlaveVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GetBlueSlaveVersion &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFromSeparator
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ab]"></a>GetBlueStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bluetooth.o(i.GetBlueStatus))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2bc]"></a>GetBlueVersion</STRONG> (Thumb, 112 bytes, Stack size 80 bytes, bluetooth.o(i.GetBlueVersion))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = GetBlueVersion &rArr; BlueATCmdTransmitter &rArr; BlueWaitReceive &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueATCmdTransmitter
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[680]"></a>GetBufferStringLenght</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, guestrespond.o(i.GetBufferStringLenght))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[2ab]"></a>GetBusCurrent</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, adc.o(i.GetBusCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = GetBusCurrent &rArr; GetBusLowCurrent &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLowCurrent
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusHighCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaiLinCurrentSteady
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[65f]"></a>GetBusHighCurrent</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, adc.o(i.GetBusHighCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GetBusHighCurrent &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc2VoltageOrCurrent
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcUnlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusCurrent
</UL>

<P><STRONG><a name="[26b]"></a>GetBusLeakCurrent</STRONG> (Thumb, 210 bytes, Stack size 64 bytes, adc.o(i.GetBusLeakCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = GetBusLeakCurrent &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay100us
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U16DataFallRank
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc2VoltageOrCurrent
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcUnlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[65e]"></a>GetBusLowCurrent</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, adc.o(i.GetBusLowCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GetBusLowCurrent &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Adc2VoltageOrCurrent
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcUnlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
</UL>
<BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusCurrent
</UL>

<P><STRONG><a name="[23e]"></a>GetBusVoltage</STRONG> (Thumb, 174 bytes, Stack size 64 bytes, adc.o(i.GetBusVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = GetBusVoltage &rArr; GetLinABAdcValue &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinABAdcValue
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U16DataFallRank
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltageFromAdcValue
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetStartBlast
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[660]"></a>GetBusVoltageFromAdcValue</STRONG> (Thumb, 228 bytes, Stack size 32 bytes, adc.o(i.GetBusVoltageFromAdcValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GetBusVoltageFromAdcValue &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
</UL>

<P><STRONG><a name="[271]"></a>GetChannelxVoltage</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, adc.o(i.GetChannelxVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GetChannelxVoltage &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcUnlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHVProtectPoint
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[219]"></a>GetConfigFileString</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, recorder.o(i.GetConfigFileString))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = GetConfigFileString &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecoderUploadState
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataSecondPackFromRecorder
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataFirstPackFromRecorder
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileU32
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderDeviceUsages
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderDeviceName
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
</UL>

<P><STRONG><a name="[218]"></a>GetConfigFileU32</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, recorder.o(i.GetConfigFileU32))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = GetConfigFileU32 &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserConfigParam
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataFirstPackFromRecorder
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConfigIsOpen
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
</UL>

<P><STRONG><a name="[33b]"></a>GetCountSpecifiedHoleRange</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, midfunction.o(i.GetCountSpecifiedHoleRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetCountSpecifiedHoleRange
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoInsert
</UL>

<P><STRONG><a name="[22f]"></a>GetCrc16Value</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, crc16.o(i.GetCrc16Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetCrc16Value
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCode2UIDStr
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
</UL>

<P><STRONG><a name="[307]"></a>GetCrc8Value</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, crc8.o(i.GetCrc8Value))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetCrc8Value
</UL>
<BR>[Called By]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCodeRulePass
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17
</UL>

<P><STRONG><a name="[492]"></a>GetCurrentHoleMaxMinRegInside</STRONG> (Thumb, 124 bytes, Stack size 224 bytes, midfunction.o(i.GetCurrentHoleMaxMinRegInside))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = GetCurrentHoleMaxMinRegInside &rArr; U16DataFallRank
</UL>
<BR>[Calls]<UL><LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U16DataFallRank
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputInsideSole
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[47d]"></a>GetCurrentHoleNameDetCount</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, midfunction.o(i.GetCurrentHoleNameDetCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetCurrentHoleNameDetCount
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoleMove
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputInsideSole
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[661]"></a>GetDacCurrentValue</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dac.o(i.GetDacCurrentValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetDacCurrentValue &rArr; DAC_GetDataOutputValue
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_GetDataOutputValue
</UL>
<BR>[Called By]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLVVoltageUp
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLVVoltageDown
<LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHVVoltageUp
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHVVoltageDown
</UL>

<P><STRONG><a name="[658]"></a>GetDataFromSeparator</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, guestrespond.o(i.GetDataFromSeparator))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetDataFromSeparator
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
</UL>

<P><STRONG><a name="[3e9]"></a>GetDecFromMULTIEDIT</STRONG> (Thumb, 50 bytes, Stack size 64 bytes, guicustomutils.o(i.GetDecFromMULTIEDIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = GetDecFromMULTIEDIT &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[682]"></a>GetDecValueFromBuffer</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, guestrespond.o(i.GetDecValueFromBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetDecValueFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[657]"></a>GetDecValueFromSeparator</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, guestrespond.o(i.GetDecValueFromSeparator))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
</UL>

<P><STRONG><a name="[27c]"></a>GetDetAckCurrentWave</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, det_operart.o(i.GetDetAckCurrentWave))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = GetDetAckCurrentWave &rArr; XA3_ReadStatusNotAck &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatusNotAck
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckInNotAck
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[326]"></a>GetDetDelayMaxFromRegStatus</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, det_operart.o(i.GetDetDelayMaxFromRegStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetDetDelayMaxFromRegStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFixedPulseCount
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[23c]"></a>GetDetFactoryCode</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, det_operart.o(i.GetDetFactoryCode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetDetFactoryCode
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetFactoryCodeIsRulePass
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetFactoryCodeIsRulePass
</UL>

<P><STRONG><a name="[498]"></a>GetDetFeatureDefult</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, recorder.o(i.GetDetFeatureDefult))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetDetFeatureDefult &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[322]"></a>GetDetFreqFromHead</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dethardware.o(i.GetDetFreqFromHead))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[665]"></a>GetDetIndexFromHoleInfo</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, midfunction.o(i.GetDetIndexFromHoleInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetDetIndexFromHoleInfo
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
</UL>

<P><STRONG><a name="[37d]"></a>GetDetInfoString</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, display.o(i.GetDetInfoString))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GetDetInfoString &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[234]"></a>GetDetMaxDelay</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, midfunction.o(i.GetDetMaxDelay))
<BR><BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDetInfoToBlasterRecord
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2fd]"></a>GetDetNum</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, det_operart.o(i.GetDetNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetDetNum
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfoNotSave
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[25c]"></a>GetDetOnlineCount</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, midfunction.o(i.GetDetOnlineCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetDetOnlineCount
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetOfflinePossible
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[21e]"></a>GetDetRegStatus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, det_operart.o(i.GetDetRegStatus))
<BR><BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetTypeAndDelay
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetType
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRegDetDelay
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasDivideRegHole
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegHoleMinIndexFromHoleRange
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegDetIndexFirst
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegDetHoleMax
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHoleIndexSpecifiedStartHole
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetErrorDetIndex
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmptyDetIndex
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetIndexFromHoleInfo
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleNameDetCount
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleMaxMinRegInside
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCountSpecifiedHoleRange
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetInfoHasSame
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayParamVerify
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayModifyBaseOnParam
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetDelayIsSame
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnDelay
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetFactoryCodeIsRulePass
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditOneDeviceForDL
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRetryErrCount
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetDelayMaxFromRegStatus
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetAckCurrentWave
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoleMove
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfoNotSave
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfoNotChangeRank
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllErrorDetInfo
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[42d]"></a>GetDetType</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, det_operart.o(i.GetDetType))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetDetType
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetType
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[42e]"></a>GetDetTypeName</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, display.o(i.GetDetTypeName))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetDetTypeName &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[664]"></a>GetDetWaveADCValue</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, adc.o(i.GetDetWaveADCValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = GetDetWaveADCValue &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay10us
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_SoftwareStartConv
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_RegularChannelConfig
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetFlagStatus
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetConversionValue
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcUnlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetAckCurrentWave
</UL>

<P><STRONG><a name="[468]"></a>GetDifferentColor</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, display.o(i.GetDifferentColor))
<BR><BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[21b]"></a>GetDistance</STRONG> (Thumb, 536 bytes, Stack size 168 bytes, gps.o(i.GetDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = GetDistance &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
</UL>

<P><STRONG><a name="[65d]"></a>GetEmptyDetIndex</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, midfunction.o(i.GetEmptyDetIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetEmptyDetIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
</UL>

<P><STRONG><a name="[3e4]"></a>GetErrorDetIndex</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, midfunction.o(i.GetErrorDetIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetErrorDetIndex &rArr; AllRegDetRankBaseOnHoleInfo &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[4ef]"></a>GetEvenBit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dethardware.o(i.GetEvenBit))
<BR><BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
</UL>

<P><STRONG><a name="[66b]"></a>GetFileSize</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, recorder.o(i.GetFileSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetFileSize &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
</UL>

<P><STRONG><a name="[31d]"></a>GetFixedPulseCount</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, det_operart.o(i.GetFixedPulseCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetFixedPulseCount &rArr; GetDetDelayMaxFromRegStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetDelayMaxFromRegStatus
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastDelayConvertToDetDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[2ae]"></a>GetGPSPassCount</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gps.o(i.GetGPSPassCount))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[67f]"></a>GetGeneralRespondData</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, guestrespond.o(i.GetGeneralRespondData))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetGeneralRespondData
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[33e]"></a>GetHoleIndexSpecifiedStartHole</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, midfunction.o(i.GetHoleIndexSpecifiedStartHole))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetHoleIndexSpecifiedStartHole
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoInsert
</UL>

<P><STRONG><a name="[66c]"></a>GetIdlePublicStk</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, taskutils.o(i.GetIdlePublicStk))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = GetIdlePublicStk &rArr; TaskIsExist &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
</UL>

<P><STRONG><a name="[229]"></a>GetIndexFromAddrName</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mastermode.o(i.GetIndexFromAddrName))
<BR><BR>[Called By]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
</UL>

<P><STRONG><a name="[2af]"></a>GetLastGPSInfo</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gps.o(i.GetLastGPSInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GetLastGPSInfo &rArr; GPSUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSUnlock
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSLock
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSInfoIsPass
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[318]"></a>GetLinABAdcValue</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, adc.o(i.GetLinABAdcValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = GetLinABAdcValue &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcUnlock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[66e]"></a>GetLogDataEndPack</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, logupload.o(i.GetLogDataEndPack))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = GetLogDataEndPack &rArr; GetLogFileSize &rArr; GetFileSize &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
</UL>

<P><STRONG><a name="[66f]"></a>GetLogDataFirstPack</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, logupload.o(i.GetLogDataFirstPack))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = GetLogDataFirstPack &rArr; GetLogFileSize &rArr; GetFileSize &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
</UL>

<P><STRONG><a name="[7ba]"></a>GetLogDataPack</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, logupload.o(i.GetLogDataPack))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetLogDataPack
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
</UL>

<P><STRONG><a name="[484]"></a>GetLogFileSize</STRONG> (Thumb, 108 bytes, Stack size 48 bytes, recorder.o(i.GetLogFileSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = GetLogFileSize &rArr; GetFileSize &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileSize
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataFirstPack
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataEndPack
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[670]"></a>GetLogRecorderData</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, recorder.o(i.GetLogRecorderData))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = GetLogRecorderData &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[671]"></a>GetLogRecorderFileSize</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, recorder.o(i.GetLogRecorderFileSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetLogRecorderFileSize &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[672]"></a>GetLogRecorderIndexFromFileName</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, recorder.o(i.GetLogRecorderIndexFromFileName))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetLogRecorderIndexFromFileName &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[281]"></a>GetMasterTimeShareTest</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, recorder.o(i.GetMasterTimeShareTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetMasterTimeShareTest &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[6b0]"></a>GetPowerOffKeyState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, keyscan.o(i.GetPowerOffKeyState))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardScan
</UL>

<P><STRONG><a name="[785]"></a>GetRS485MasterSlaveState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rs485.o(i.GetRS485MasterSlaveState))
<BR><BR>[Called By]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485DirCountDecrement
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
</UL>

<P><STRONG><a name="[47f]"></a>GetRegDetHoleMax</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, midfunction.o(i.GetRegDetHoleMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetRegDetHoleMax
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[265]"></a>GetRegDetIndexFirst</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, midfunction.o(i.GetRegDetIndexFirst))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetRegDetIndexFirst
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllUnRegFollow
</UL>

<P><STRONG><a name="[3fb]"></a>GetRegHoleMinIndexFromHoleRange</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, midfunction.o(i.GetRegHoleMinIndexFromHoleRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GetRegHoleMinIndexFromHoleRange &rArr; AllRegDetRankBaseOnHoleInfo &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[673]"></a>GetRetryErrCount</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, det_operart.o(i.GetRetryErrCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetRetryErrCount
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
</UL>

<P><STRONG><a name="[674]"></a>GetSTM32ChipIDStr</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, midfunction.o(i.GetSTM32ChipIDStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = GetSTM32ChipIDStr &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[300]"></a>GetScanDataBytes</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, barcode.o(i.GetScanDataBytes))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst18ForBoxSmall
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17ForBoxBig
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst13
</UL>

<P><STRONG><a name="[7e5]"></a>GetSerlGroupIndex</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, det_operart.o(i.GetSerlGroupIndex))
<BR><BR>[Called By]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
</UL>

<P><STRONG><a name="[299]"></a>GetServerCurrentTime</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, safemonitor.o(i.GetServerCurrentTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = GetServerCurrentTime &rArr; WireleTransferData &rArr; WifiTransferData &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleTransferData
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[2a2]"></a>GetServerDeviceVersionInfo</STRONG> (Thumb, 318 bytes, Stack size 40 bytes, softwareupdate.o(i.GetServerDeviceVersionInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = GetServerDeviceVersionInfo &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFromSeparator
<LI><a href="#[676]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfoData
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleTransferData
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[676]"></a>GetServerDeviceVersionInfoData</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, softwareupdate.o(i.GetServerDeviceVersionInfoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetServerDeviceVersionInfoData &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
</UL>

<P><STRONG><a name="[505]"></a>GetServerHexFileData</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, softwareupdate.o(i.GetServerHexFileData))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = GetServerHexFileData &rArr; WireleTransferData &rArr; WifiTransferData &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[677]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileDataData
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleTransferData
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
</UL>

<P><STRONG><a name="[677]"></a>GetServerHexFileDataData</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, softwareupdate.o(i.GetServerHexFileDataData))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GetServerHexFileDataData &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileData
</UL>

<P><STRONG><a name="[508]"></a>GetServerHexFileVerifyResult</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, softwareupdate.o(i.GetServerHexFileVerifyResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = GetServerHexFileVerifyResult &rArr; WireleGeneralTransferData &rArr; WireleTransferData &rArr; WifiTransferData &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[678]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileVerifyResultData
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleGeneralTransferData
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
</UL>

<P><STRONG><a name="[678]"></a>GetServerHexFileVerifyResultData</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, softwareupdate.o(i.GetServerHexFileVerifyResultData))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = GetServerHexFileVerifyResultData &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileVerifyResult
</UL>

<P><STRONG><a name="[67a]"></a>GetSetServerReadyForUpdateData</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, softwareupdate.o(i.GetSetServerReadyForUpdateData))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetSetServerReadyForUpdateData &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServerReadyForUpdate
</UL>

<P><STRONG><a name="[2f6]"></a>GetSlaveAddr</STRONG> (Thumb, 272 bytes, Stack size 16 bytes, mastermode.o(i.GetSlaveAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GetSlaveAddr &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIndexFromAddrName
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
</UL>

<P><STRONG><a name="[251]"></a>GetSlaveBlastChargeResult</STRONG> (Thumb, 416 bytes, Stack size 32 bytes, mastermode.o(i.GetSlaveBlastChargeResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = GetSlaveBlastChargeResult &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
</UL>

<P><STRONG><a name="[259]"></a>GetSlaveBlastDetTestResult</STRONG> (Thumb, 432 bytes, Stack size 32 bytes, mastermode.o(i.GetSlaveBlastDetTestResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = GetSlaveBlastDetTestResult &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
</UL>

<P><STRONG><a name="[24c]"></a>GetSlaveBlastResult</STRONG> (Thumb, 420 bytes, Stack size 32 bytes, mastermode.o(i.GetSlaveBlastResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = GetSlaveBlastResult &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveBlastDet
</UL>

<P><STRONG><a name="[250]"></a>GetSlaveBusVoltageCtrlState</STRONG> (Thumb, 338 bytes, Stack size 24 bytes, mastermode.o(i.GetSlaveBusVoltageCtrlState))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = GetSlaveBusVoltageCtrlState &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllSlaveInfo
</UL>

<P><STRONG><a name="[67b]"></a>GetSlaveDetHoleNumber</STRONG> (Thumb, 304 bytes, Stack size 16 bytes, mastermode.o(i.GetSlaveDetHoleNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GetSlaveDetHoleNumber &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetInfo
</UL>

<P><STRONG><a name="[67c]"></a>GetSlaveDetIndexInfo</STRONG> (Thumb, 886 bytes, Stack size 72 bytes, mastermode.o(i.GetSlaveDetIndexInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = GetSlaveDetIndexInfo &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexStrToCharStr
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFromSeparator
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetInfo
</UL>

<P><STRONG><a name="[25a]"></a>GetSlaveDetInfo</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, mastermode.o(i.GetSlaveDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = GetSlaveDetInfo &rArr; GetSlaveDetIndexInfo &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
</UL>

<P><STRONG><a name="[25d]"></a>GetSlaveDetNumber</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, mastermode.o(i.GetSlaveDetNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = GetSlaveDetNumber &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
</UL>

<P><STRONG><a name="[454]"></a>GetSlaveErrorCount</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, mastermode.o(i.GetSlaveErrorCount))
<BR><BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[64f]"></a>GetSlaveID</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, mastermode.o(i.GetSlaveID))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GetSlaveID &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllSlaveInfo
</UL>

<P><STRONG><a name="[252]"></a>GetSlaveStateCount</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, mastermode.o(i.GetSlaveStateCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSlaveStateCount
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[258]"></a>GetSlaveTestInfo</STRONG> (Thumb, 490 bytes, Stack size 32 bytes, mastermode.o(i.GetSlaveTestInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = GetSlaveTestInfo &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllSlaveInfo
</UL>

<P><STRONG><a name="[2f7]"></a>GetSlaveVerison</STRONG> (Thumb, 356 bytes, Stack size 16 bytes, mastermode.o(i.GetSlaveVerison))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = GetSlaveVerison &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllSlaveInfo
</UL>

<P><STRONG><a name="[650]"></a>GetSlaveVoltageOrCurrent</STRONG> (Thumb, 406 bytes, Stack size 32 bytes, mastermode.o(i.GetSlaveVoltageOrCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = GetSlaveVoltageOrCurrent &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllSlaveInfo
</UL>

<P><STRONG><a name="[502]"></a>GetSpecifiedFileExistState</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, recorder.o(i.GetSpecifiedFileExistState))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = GetSpecifiedFileExistState &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
</UL>

<P><STRONG><a name="[507]"></a>GetSpecifiedHexFileCRCValue</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, recorder.o(i.GetSpecifiedHexFileCRCValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = GetSpecifiedHexFileCRCValue &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
</UL>

<P><STRONG><a name="[29c]"></a>GetTimeDifferSec</STRONG> (Thumb, 134 bytes, Stack size 72 bytes, rtc.o(i.GetTimeDifferSec))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = GetTimeDifferSec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeStringToRtcStruct
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSInfoTimeIsPass
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[890]"></a>GetU16DataAverage</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, midfunction.o(i.GetU16DataAverage))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetU16DataAverage
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaiLinCurrentSteady
</UL>

<P><STRONG><a name="[7cd]"></a>GetUtf8StringCharsCount</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ansitounicode.o(i.GetUtf8StringCharsCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetUtf8StringCharsCount
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
</UL>

<P><STRONG><a name="[48d]"></a>GetWaitRegListViewDlgSelIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, waitreglistviewdlg.o(i.GetWaitRegListViewDlgSelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2be]"></a>GetWifiCurrentAPInfo</STRONG> (Thumb, 422 bytes, Stack size 152 bytes, wifi.o(i.GetWifiCurrentAPInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = GetWifiCurrentAPInfo &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[3ac]"></a>GetWindowParam</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guicustomutils.o(i.GetWindowParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = GetWindowParam &rArr; WM_GetUserData &rArr; WM__GetUserDataEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[346]"></a>Get_Sum_Verify</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, slip.o(i.Get_Sum_Verify))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Get_Sum_Verify
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUnpack
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyPack
</UL>

<P><STRONG><a name="[54c]"></a>GpsAscDec</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, gps.o(i.GpsAscDec))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GpsAscDec
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMC_FormatAnalyze
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSReceiveDataDeal
</UL>

<P><STRONG><a name="[782]"></a>Gps_UTC_to_BJ</STRONG> (Thumb, 274 bytes, Stack size 12 bytes, gps.o(i.Gps_UTC_to_BJ))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Gps_UTC_to_BJ
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMC_FormatAnalyze
</UL>

<P><STRONG><a name="[293]"></a>GuestRespond</STRONG> (Thumb, 21378 bytes, Stack size 208 bytes, guestrespond.o(i.GuestRespond))
<BR><BR>[Stack]<UL><LI>Max Depth = 1368 + Unknown Stack Size
<LI>Call Chain = GuestRespond &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllDetInfo
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexStrToCharStr
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSTM32ChipIDStr
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHoleIndexSpecifiedStartHole
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCountSpecifiedHoleRange
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStartBlastTask
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlasteFireTime
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Time
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusCurrent
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemoteBlastSlaveStateDlg
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarChargeDlg
<LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[67f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetGeneralRespondData
<LI><a href="#[682]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromBuffer
<LI><a href="#[680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBufferStringLenght
<LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecValueFromSeparator
<LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDataFromSeparator
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderIndexFromFileName
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderFileSize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderIndexFromFileName
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
</UL>

<P><STRONG><a name="[684]"></a>HEADER_AddItem</STRONG> (Thumb, 188 bytes, Stack size 72 bytes, header.o(i.HEADER_AddItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = HEADER_AddItem &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
</UL>

<P><STRONG><a name="[a3]"></a>HEADER_Callback</STRONG> (Thumb, 306 bytes, Stack size 32 bytes, header.o(i.HEADER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = HEADER_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header.o(i.HEADER_CreateUser)
</UL>
<P><STRONG><a name="[689]"></a>HEADER_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, header.o(i.HEADER_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = HEADER_CreateEx &rArr; HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>

<P><STRONG><a name="[68a]"></a>HEADER_CreateUser</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, header.o(i.HEADER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = HEADER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[68c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_GetDefaultEffect
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
</UL>

<P><STRONG><a name="[68e]"></a>HEADER_GetHeight</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, header.o(i.HEADER_GetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = HEADER_GetHeight &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[691]"></a>HEADER_GetItemWidth</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, header.o(i.HEADER_GetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = HEADER_GetItemWidth &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[692]"></a>HEADER_GetNumItems</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, header.o(i.HEADER_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HEADER_GetNumItems &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
</UL>

<P><STRONG><a name="[693]"></a>HEADER_GetSel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, header_getsel.o(i.HEADER_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = HEADER_GetSel &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[3d2]"></a>HEADER_SetBkColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, header_color.o(i.HEADER_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = HEADER_SetBkColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[7c5]"></a>HEADER_SetDefaultFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, header_default.o(i.HEADER_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[3d1]"></a>HEADER_SetHeight</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, header.o(i.HEADER_SetHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = HEADER_SetHeight &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[695]"></a>HEADER_SetItemWidth</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, header.o(i.HEADER_SetItemWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = HEADER_SetItemWidth &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[697]"></a>HEADER_SetScrollPos</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, header.o(i.HEADER_SetScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = HEADER_SetScrollPos &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[3d5]"></a>HEADER_SetTextAlign</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, header.o(i.HEADER_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = HEADER_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3d3]"></a>HEADER_SetTextColor</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, header_color.o(i.HEADER_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = HEADER_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[698]"></a>HVVoltageOutputAdjust</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dac.o(i.HVVoltageOutputAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HVVoltageOutputAdjust &rArr; SetHVVoltageUp &rArr; DacStartOutput &rArr; DAC_SoftwareTriggerCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHVVoltageUp
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHVVoltageDown
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
</UL>

<P><STRONG><a name="[32]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[394]"></a>HasAccreditInfoFileForDL</STRONG> (Thumb, 306 bytes, Stack size 72 bytes, recorder.o(i.HasAccreditInfoFileForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = HasAccreditInfoFileForDL &rArr; GetConfigFileU32 &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileU32
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[39d]"></a>HasDivideRegHole</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, midfunction.o(i.HasDivideRegHole))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HasDivideRegHole
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[4ea]"></a>HaveUnregisteredDetBySimpleSignal</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, det_operart.o(i.HaveUnregisteredDetBySimpleSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = HaveUnregisteredDetBySimpleSignal &rArr; XA3_DetCheckInBySimpleSignal &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckInBySimpleSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
</UL>

<P><STRONG><a name="[379]"></a>HelpSupportEnter</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, custommessagebox.o(i.HelpSupportEnter))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HelpSupportEnter &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[305]"></a>HexCharToValue</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, midfunction.o(i.HexCharToValue))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexStrToCharStr
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCode2UIDStr
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst14
</UL>

<P><STRONG><a name="[4e5]"></a>HexStrToCharStr</STRONG> (Thumb, 100 bytes, Stack size 28 bytes, midfunction.o(i.HexStrToCharStr))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = HexStrToCharStr
</UL>
<BR>[Calls]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HexCharToValue
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCode2UIDStr
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
</UL>

<P><STRONG><a name="[47e]"></a>HoleMove</STRONG> (Thumb, 592 bytes, Stack size 32 bytes, recorder.o(i.HoleMove))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = HoleMove &rArr; SaveAllDetInfo &rArr; SaveAllDetInfoNotChangeRank &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleNameDetCount
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[69c]"></a>I2C_Ack</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, i2c.o(i.I2C_Ack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_Ack &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
</UL>

<P><STRONG><a name="[69d]"></a>I2C_Delay</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, i2c.o(i.I2C_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1us
</UL>
<BR>[Called By]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveByte
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FromBusyToIdle
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
</UL>

<P><STRONG><a name="[69f]"></a>I2C_FromBusyToIdle</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, i2c.o(i.I2C_FromBusyToIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
</UL>

<P><STRONG><a name="[6a0]"></a>I2C_GPIO_Config</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, i2c.o(i.I2C_GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C_GPIO_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[6a1]"></a>I2C_NoAck</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, i2c.o(i.I2C_NoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_NoAck &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
</UL>

<P><STRONG><a name="[6a2]"></a>I2C_ReadByte</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, i2c.o(i.I2C_ReadByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_ReadByte &rArr; I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveByte
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
</UL>

<P><STRONG><a name="[6a8]"></a>I2C_ReadData</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, i2c.o(i.I2C_ReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_ReadData &rArr; I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
<LI><a href="#[6a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveByte
<LI><a href="#[6a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_NoAck
<LI><a href="#[69c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Ack
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatVoltage
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulated
</UL>

<P><STRONG><a name="[6a7]"></a>I2C_ReceiveByte</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, i2c.o(i.I2C_ReceiveByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_ReceiveByte &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
</UL>

<P><STRONG><a name="[6a4]"></a>I2C_SendByte</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, i2c.o(i.I2C_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_SendByte &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteData
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
</UL>

<P><STRONG><a name="[6a3]"></a>I2C_Start</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, i2c.o(i.I2C_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[69f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_FromBusyToIdle
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteData
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
</UL>

<P><STRONG><a name="[6a6]"></a>I2C_Stop</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, i2c.o(i.I2C_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_Stop &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteData
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
</UL>

<P><STRONG><a name="[6a5]"></a>I2C_WaitAck</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, i2c.o(i.I2C_WaitAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_WaitAck &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteData
<LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
</UL>

<P><STRONG><a name="[6a9]"></a>I2C_WriteData</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, i2c.o(i.I2C_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2C_WriteData &rArr; I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitAck
<LI><a href="#[6a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Stop
<LI><a href="#[6a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Start
<LI><a href="#[6a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942UpdateBatAccumulated
</UL>

<P><STRONG><a name="[296]"></a>IPAddrU32ToString</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, wifi.o(i.IPAddrU32ToString))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = IPAddrU32ToString &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[254]"></a>InitSlaveDetNumber</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, mastermode.o(i.InitSlaveDetNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = InitSlaveDetNumber &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
</UL>

<P><STRONG><a name="[3ec]"></a>InitUserDataToMULTIEDIT</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, guicustomutils.o(i.InitUserDataToMULTIEDIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = InitUserDataToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3b3]"></a>InitUserStringToMULTIEDIT</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicustomutils.o(i.InitUserStringToMULTIEDIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 848 + Unknown Stack Size
<LI>Call Chain = InitUserStringToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[6aa]"></a>IpAddrStringToU32</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wifi.o(i.IpAddrStringToU32))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IpAddrStringToU32 &rArr; strlen
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFactoryConfigParam
</UL>

<P><STRONG><a name="[304]"></a>IsHexChar</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, midfunction.o(i.IsHexChar))
<BR><BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst14
</UL>

<P><STRONG><a name="[6ab]"></a>IsZEBRA</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, scan.o(i.IsZEBRA))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = IsZEBRA &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanSendData
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
</UL>

<P><STRONG><a name="[289]"></a>KeyConfig</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, keyscan.o(i.KeyConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KeyConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppKeyScanTask
</UL>

<P><STRONG><a name="[6ae]"></a>KeyRowOutput</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, keyscan.o(i.KeyRowOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KeyRowOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatrixKeyScan
</UL>

<P><STRONG><a name="[6af]"></a>KeyVerticalOutput</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, keyscan.o(i.KeyVerticalOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = KeyVerticalOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatrixKeyScan
</UL>

<P><STRONG><a name="[28a]"></a>KeyboardScan</STRONG> (Thumb, 240 bytes, Stack size 16 bytes, keyscan.o(i.KeyboardScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = KeyboardScan &rArr; MatrixKeyScan &rArr; KeyVerticalOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[6b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetPowerOffKeyState
<LI><a href="#[6b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPowerOffKeyState
<LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatrixKeyScan
<LI><a href="#[6b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyCodeToKeyMsg
<LI><a href="#[6ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Key1Key3Scan
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppKeyScanTask
</UL>

<P><STRONG><a name="[6c8]"></a>LCD_AA_MixColors</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, lcd_aa.o(i.LCD_AA_MixColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_AA_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
</UL>

<P><STRONG><a name="[635]"></a>LCD_AA_SetAndMask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_aa.o(i.LCD_AA_SetAndMask))
<BR><BR>[Called By]<UL><LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaSuppressMixing
</UL>

<P><STRONG><a name="[643]"></a>LCD_Color2Index</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Color2Index))
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[6c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetpPalConvTableUncached
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[532]"></a>LCD_DrawBitmap</STRONG> (Thumb, 508 bytes, Stack size 88 bytes, lcd.o(i.LCD_DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBitmap
<LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_HT
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveAlpha
</UL>

<P><STRONG><a name="[153]"></a>LCD_DrawHLine</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, lcd.o(i.LCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>LCD_DrawPixel</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.constdata)
</UL>
<P><STRONG><a name="[538]"></a>LCD_DrawVLine</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, lcd.o(i.LCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_DrawVLine
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>

<P><STRONG><a name="[6b4]"></a>LCD_FSMC_Config</STRONG> (Thumb, 504 bytes, Stack size 104 bytes, lcdssd1963.o(i.LCD_FSMC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = LCD_FSMC_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[6b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB3PeriphClockCmd
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[6b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMInit
<LI><a href="#[6b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FSMC_NORSRAMCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[553]"></a>LCD_FillRect</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(i.LCD_FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>

<P><STRONG><a name="[6b8]"></a>LCD_GetBitsPerPixelEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetBitsPerPixelEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetBitsPerPixelEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[5c7]"></a>LCD_GetBkColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
</UL>

<P><STRONG><a name="[5cc]"></a>LCD_GetColorIndex</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getcolorindex.o(i.LCD_GetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>

<P><STRONG><a name="[6ba]"></a>LCD_GetNumColors</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetIndexMask_0
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[6bb]"></a>LCD_GetNumColorsEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetNumColorsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumColorsEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[6bc]"></a>LCD_GetNumLayers</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, lcd_getnumdisplays.o(i.LCD_GetNumLayers))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetNumLayers
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[6bd]"></a>LCD_GetPalette</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetPalette))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPalette &rArr; LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[6be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPaletteEx
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Index2Color_0
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Color2Index_0
</UL>

<P><STRONG><a name="[6be]"></a>LCD_GetPaletteEx</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcd_getex.o(i.LCD_GetPaletteEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_GetPaletteEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
</UL>

<P><STRONG><a name="[642]"></a>LCD_GetPixelColor</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, lcd_getpixelcolor.o(i.LCD_GetPixelColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[6bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
</UL>

<P><STRONG><a name="[6bf]"></a>LCD_GetPixelIndex</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, lcd_getp.o(i.LCD_GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
</UL>

<P><STRONG><a name="[5ec]"></a>LCD_GetVXSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVXSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[564]"></a>LCD_GetVXSizeMax</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVXSizeMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_GetVXSizeMax &rArr; _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetAlphaBuffer
</UL>

<P><STRONG><a name="[5ee]"></a>LCD_GetVYSizeEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetVYSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetVYSizeEx &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[6c1]"></a>LCD_GetXSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetXSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[6c2]"></a>LCD_GetYSize</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD_GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_GetYSize &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[23]"></a>LCD_GetpPalConvTableBM</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd_color.o(i.LCD_GetpPalConvTableBM))
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(.data)
</UL>
<P><STRONG><a name="[6c3]"></a>LCD_GetpPalConvTableUncached</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_GetpPalConvTableUncached), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
</UL>

<P><STRONG><a name="[5c8]"></a>LCD_Index2Color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(i.LCD_Index2Color))
<BR><BR>[Called By]<UL><LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBkColor
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[a1]"></a>LCD_Index2Color_888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_888_index2color.o(i.LCD_Index2Color_888))
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__DoAlphaBlending)
</UL>
<P><STRONG><a name="[9d]"></a>LCD_Index2Color_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888_index2color.o(i.LCD_Index2Color_8888))
<BR>[Address Reference Count : 5]<UL><LI> gui_drawbitmap_8888.o(i._DrawBitmap_8888)
<LI> gui_drawbitmap_8888.o(.constdata)
<LI> gui__alpha.o(i.GUI__DoAlphaBlending)
<LI> guicc_8888.o(.constdata)
<LI> guidev_writetoactivealpha.o(i.GUI_MEMDEV__WriteToActiveAlpha)
</UL>
<P><STRONG><a name="[14f]"></a>LCD_Index2Color_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565_index2color.o(i.LCD_Index2Color_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_Index2Color_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[6c4]"></a>LCD_InitColors</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd_color.o(i.LCD_InitColors))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[6c5]"></a>LCD_InitLUT</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, lcd_color.o(i.LCD_InitLUT))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = LCD_InitLUT &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetLUTEntryEx
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[6bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumLayers
</UL>
<BR>[Called By]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
</UL>

<P><STRONG><a name="[611]"></a>LCD_SelectLCD</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, lcd_selectlcd.o(i.LCD_SelectLCD))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SelectLCD
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
</UL>

<P><STRONG><a name="[613]"></a>LCD_SetBkColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[6ca]"></a>LCD_SetBkColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetBkColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetBkColor
</UL>

<P><STRONG><a name="[6c7]"></a>LCD_SetClipRectEx</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, lcd_setcliprectex.o(i.LCD_SetClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
</UL>
<BR>[Called By]<UL><LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[5f9]"></a>LCD_SetClipRectMax</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetClipRectMax))
<BR><BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Deactivate
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SelectLCD
</UL>

<P><STRONG><a name="[614]"></a>LCD_SetColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColor))
<BR><BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_OwnerDraw
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>

<P><STRONG><a name="[616]"></a>LCD_SetColorIndex</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetColorIndex))
<BR><BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateColorIndices
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetColor
</UL>

<P><STRONG><a name="[552]"></a>LCD_SetDrawMode</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(i.LCD_SetDrawMode))
<BR><BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIPROP_DispChar
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUIMONO_DispChar
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDrawMode
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;emWin_LCD_Init
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
</UL>

<P><STRONG><a name="[6c6]"></a>LCD_SetLUTEntryEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetLUTEntryEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetLUTEntryEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
</UL>

<P><STRONG><a name="[128]"></a>LCD_SetPixelAA</STRONG> (Thumb, 126 bytes, Stack size 32 bytes, lcd_aa.o(i.LCD_SetPixelAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Index2Color
<LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixelColor
<LI><a href="#[6c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_AA_MixColors
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i._FlushLine)
</UL>
<P><STRONG><a name="[617]"></a>LCD_SetSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerSizeEx
</UL>

<P><STRONG><a name="[6c9]"></a>LCD_SetVSizeEx</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, lcd_set.o(i.LCD_SetVSizeEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_SetVSizeEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_Config
</UL>

<P><STRONG><a name="[619]"></a>LCD_SetVisEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, lcd_set.o(i.LCD_SetVisEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_SetVisEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
</UL>

<P><STRONG><a name="[5f8]"></a>LCD_UpdateColorIndices</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, lcd_updatecolorindices.o(i.LCD_UpdateColorIndices))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_UpdateColorIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[636]"></a>LCD_X_Config</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, lcdconf_flexcolor_template.o(i.LCD_X_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = LCD_X_Config &rArr; GUI_DEVICE_CreateAndLink &rArr; GUI_DEVICE_Create &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetVSizeEx
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetSizeEx
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_CreateAndLink
</UL>
<BR>[Called By]<UL><LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__Config
</UL>

<P><STRONG><a name="[8f9]"></a>LCD_X_DisplayDriver</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, lcdconf_flexcolor_template.o(i.LCD_X_DisplayDriver))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_X_DisplayDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetOrg
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetLUTEntry
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_On
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Off
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[6cb]"></a>LCD__DrawBitmap_1bpp</STRONG> (Thumb, 424 bytes, Stack size 104 bytes, lcd.o(i.LCD__DrawBitmap_1bpp))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[6cc]"></a>LCD__GetBPP</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, lcd_getex.o(i.LCD__GetBPP))
<BR><BR>[Called By]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPPDevice
</UL>

<P><STRONG><a name="[5f3]"></a>LCD__GetBPPDevice</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, lcd_getex.o(i.LCD__GetBPPDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = LCD__GetBPPDevice
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetBitsPerPixel
</UL>

<P><STRONG><a name="[6cd]"></a>LISTBOX_AddKey</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[6cf]"></a>LISTBOX_AddString</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, listbox.o(i.LISTBOX_AddString))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__AddSize
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListBoxData
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[a5]"></a>LISTBOX_Callback</STRONG> (Thumb, 454 bytes, Stack size 72 bytes, listbox.o(i.LISTBOX_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = LISTBOX_Callback &rArr; LISTBOX_AddKey &rArr; _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(i.LISTBOX_CreateUser)
</UL>
<P><STRONG><a name="[13c]"></a>LISTBOX_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, listbox_createindirect.o(i.LISTBOX_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateIndirect &rArr; LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> devicenamesetdlg.o(.constdata)
</UL>
<P><STRONG><a name="[6dd]"></a>LISTBOX_CreateUser</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, listbox.o(i.LISTBOX_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = LISTBOX_CreateUser &rArr; LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateIndirect
</UL>

<P><STRONG><a name="[6df]"></a>LISTBOX_DecSel</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_DecSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = LISTBOX_DecSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6e1]"></a>LISTBOX_DeleteItem</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, listbox_deleteitem.o(i.LISTBOX_DeleteItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = LISTBOX_DeleteItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListBoxData
</UL>

<P><STRONG><a name="[6e4]"></a>LISTBOX_GetNumItems</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listbox_getnumitems.o(i.LISTBOX_GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTBOX_GetNumItems &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListBoxData
</UL>

<P><STRONG><a name="[44b]"></a>LISTBOX_GetSel</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTBOX_GetSel &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6e5]"></a>LISTBOX_IncSel</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX_IncSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6e6]"></a>LISTBOX_InvalidateItem</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX_InvalidateItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemSize
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[6de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetText
</UL>

<P><STRONG><a name="[a6]"></a>LISTBOX_OwnerDraw</STRONG> (Thumb, 518 bytes, Stack size 72 bytes, listbox.o(i.LISTBOX_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = LISTBOX_OwnerDraw &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listbox.o(i.LISTBOX_CreateUser)
</UL>
<P><STRONG><a name="[445]"></a>LISTBOX_SetAutoScrollV</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, listbox_setautoscroll.o(i.LISTBOX_SetAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetAutoScrollV &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[448]"></a>LISTBOX_SetBkColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, listbox_setbkcolor.o(i.LISTBOX_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetBkColor &rArr; LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[446]"></a>LISTBOX_SetFont</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, listbox_font.o(i.LISTBOX_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetFont &rArr; LISTBOX_InvalidateItem &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[447]"></a>LISTBOX_SetScrollbarColor</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, listbox_setscrollbarcolor.o(i.LISTBOX_SetScrollbarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetScrollbarColor &rArr; LISTBOX__SetScrollbarColor &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[44a]"></a>LISTBOX_SetSel</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetSel &rArr; _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6de]"></a>LISTBOX_SetText</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = LISTBOX_SetText &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>
<BR>[Called By]<UL><LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
</UL>

<P><STRONG><a name="[6d2]"></a>LISTBOX_UpdateScrollers</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX_UpdateScrollers))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6d1]"></a>LISTBOX__AddSize</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__AddSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = LISTBOX__AddSize &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
</UL>

<P><STRONG><a name="[6e2]"></a>LISTBOX__GetNumItems</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listbox.o(i.LISTBOX__GetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTBOX__GetNumItems &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6e7]"></a>LISTBOX__GetpStringLocked</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__GetpStringLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTBOX__GetpStringLocked &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6d7]"></a>LISTBOX__InvalidateInsideArea</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6d3]"></a>LISTBOX__InvalidateItem</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__InvalidateItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[6e3]"></a>LISTBOX__InvalidateItemAndBelow</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, listbox.o(i.LISTBOX__InvalidateItemAndBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = LISTBOX__InvalidateItemAndBelow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[6d0]"></a>LISTBOX__InvalidateItemSize</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, listbox.o(i.LISTBOX__InvalidateItemSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LISTBOX__InvalidateItemSize &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[6e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_InvalidateItem
</UL>

<P><STRONG><a name="[6ec]"></a>LISTBOX__SetScrollbarColor</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, listbox.o(i.LISTBOX__SetScrollbarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = LISTBOX__SetScrollbarColor &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[6f4]"></a>LISTBOX__SetScrollbarWidth</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, listbox.o(i.LISTBOX__SetScrollbarWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = LISTBOX__SetScrollbarWidth &rArr; SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[6f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_GetDefaultWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[3d4]"></a>LISTVIEW_AddColumn</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, listview.o(i.LISTVIEW_AddColumn))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_AddColumn &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[6fb]"></a>LISTVIEW_AddRow</STRONG> (Thumb, 260 bytes, Stack size 64 bytes, listview.o(i.LISTVIEW_AddRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
</UL>

<P><STRONG><a name="[a7]"></a>LISTVIEW_Callback</STRONG> (Thumb, 514 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_Callback &rArr; _OnPaint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[693]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetSel
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[139]"></a>LISTVIEW_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, listview_createindirect.o(i.LISTVIEW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateIndirect &rArr; LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
</UL>
<BR>[Address Reference Count : 13]<UL><LI> netinfodlg.o(.constdata)
<LI> nettesterrorlistviewdlg.o(.constdata)
<LI> blastrecorderlistviewdlg.o(.constdata)
<LI> netparamlistviewdlg.o(.constdata)
<LI> bluehoststatusdlg.o(.constdata)
<LI> blastrecorderdetinfolistdlg.o(.constdata)
<LI> blastrecorderslaveinfolistdlg.o(.constdata)
<LI> slaveaccrediterrorfordldlg.o(.constdata)
<LI> slaveinfolistviewdlg.o(.constdata)
<LI> wifinetinfodlg.o(.constdata)
<LI> waitreglistviewdlg.o(.constdata)
<LI> detaccrediterrorfordldlg.o(.constdata)
<LI> logrecorderlistviewdlg.o(.constdata)
</UL>
<P><STRONG><a name="[703]"></a>LISTVIEW_CreateUser</STRONG> (Thumb, 218 bytes, Stack size 72 bytes, listview.o(i.LISTVIEW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_CreateUser &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[689]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateEx
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateIndirect
</UL>

<P><STRONG><a name="[704]"></a>LISTVIEW_DeleteRow</STRONG> (Thumb, 222 bytes, Stack size 40 bytes, listview_deleterow.o(i.LISTVIEW_DeleteRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_DeleteRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_DeleteItem
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
</UL>

<P><STRONG><a name="[3d0]"></a>LISTVIEW_GetHeader</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview_getheader.o(i.LISTVIEW_GetHeader))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetHeader &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
</UL>

<P><STRONG><a name="[465]"></a>LISTVIEW_GetItemText</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, listview_getitemtext.o(i.LISTVIEW_GetItemText))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetItemText &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[706]"></a>LISTVIEW_GetLBorder</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview_setlborder.o(i.LISTVIEW_GetLBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetLBorder &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[434]"></a>LISTVIEW_GetNumRows</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, listview_getnumrows.o(i.LISTVIEW_GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetNumRows &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetListViewSelcet
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
</UL>

<P><STRONG><a name="[707]"></a>LISTVIEW_GetRBorder</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview_setrborder.o(i.LISTVIEW_GetRBorder))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetRBorder &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[455]"></a>LISTVIEW_GetSel</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, listview_getsel.o(i.LISTVIEW_GetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetSel &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[708]"></a>LISTVIEW_GetWrapMode</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, listview_getwrapmode.o(i.LISTVIEW_GetWrapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_GetWrapMode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[a8]"></a>LISTVIEW_OwnerDraw</STRONG> (Thumb, 252 bytes, Stack size 32 bytes, listview.o(i.LISTVIEW_OwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_OwnerDraw &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> listview.o(i.LISTVIEW_CreateUser)
</UL>
<P><STRONG><a name="[709]"></a>LISTVIEW_RowIsDisabled</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, listview_disablerow.o(i.LISTVIEW_RowIsDisabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LISTVIEW_RowIsDisabled &rArr; LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
</UL>
<BR>[Called By]<UL><LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[3ce]"></a>LISTVIEW_SetBkColor</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, listview_setbkcolor.o(i.LISTVIEW_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetBkColor &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[7c6]"></a>LISTVIEW_SetDefaultFont</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, listview_default.o(i.LISTVIEW_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[3cf]"></a>LISTVIEW_SetGridVis</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, listview_setgridvis.o(i.LISTVIEW_SetGridVis))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetGridVis &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[70a]"></a>LISTVIEW_SetItemText</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, listview_setitemtext.o(i.LISTVIEW_SetItemText))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetItemText &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__strlen
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_ResizeItemLocked
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
</UL>

<P><STRONG><a name="[70b]"></a>LISTVIEW_SetItemTextColor</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, listview_setitemcolor.o(i.LISTVIEW_SetItemTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetItemTextColor &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
</UL>

<P><STRONG><a name="[3cd]"></a>LISTVIEW_SetRowHeight</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, listview_setrowheight.o(i.LISTVIEW_SetRowHeight))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetRowHeight &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3c6]"></a>LISTVIEW_SetSel</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, listview_setsel.o(i.LISTVIEW_SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetListViewSelcet
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[403]"></a>LISTVIEW_SetTextAlign</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, listview_settextalign.o(i.LISTVIEW_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = LISTVIEW_SetTextAlign &rArr; LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[70d]"></a>LISTVIEW__CreateCellInfoLocked</STRONG> (Thumb, 136 bytes, Stack size 40 bytes, listview_setitemcolor.o(i.LISTVIEW__CreateCellInfoLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__CreateCellInfoLocked &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
</UL>

<P><STRONG><a name="[6fc]"></a>LISTVIEW__GetNumColumns</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview_getnumcolumns.o(i.LISTVIEW__GetNumColumns))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumColumns &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
</UL>

<P><STRONG><a name="[6f7]"></a>LISTVIEW__GetNumRows</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, listview_getnumrows.o(i.LISTVIEW__GetNumRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LISTVIEW__GetNumRows &rArr; GUI_ARRAY_GetNumItems
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[702]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FreeAttached
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[70f]"></a>LISTVIEW__GetRowDistY</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, listview.o(i.LISTVIEW__GetRowDistY))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LISTVIEW__GetRowDistY
</UL>
<BR>[Calls]<UL><LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
</UL>

<P><STRONG><a name="[70c]"></a>LISTVIEW__GetpCellInfo</STRONG> (Thumb, 106 bytes, Stack size 40 bytes, listview_setitemcolor.o(i.LISTVIEW__GetpCellInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = LISTVIEW__GetpCellInfo &rArr; LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
</UL>

<P><STRONG><a name="[6f8]"></a>LISTVIEW__GetpRow</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__GetpRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LISTVIEW__GetpRow &rArr; GUI_ARRAY_GetpItemLocked &rArr; GUI_ARRAY__GetpItemLocked &rArr; GUI_ARRAY__GethItem
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[70c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpCellInfo
<LI><a href="#[70d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__CreateCellInfoLocked
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[6f9]"></a>LISTVIEW__InvalidateInsideArea</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__InvalidateInsideArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateInsideArea &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6fd]"></a>LISTVIEW__InvalidateRow</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, listview.o(i.LISTVIEW__InvalidateRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>

<P><STRONG><a name="[705]"></a>LISTVIEW__InvalidateRowAndBelow</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, listview_deleterow.o(i.LISTVIEW__InvalidateRowAndBelow))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__InvalidateRowAndBelow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
</UL>

<P><STRONG><a name="[70e]"></a>LISTVIEW__SetSel</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, listview.o(i.LISTVIEW__SetSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6fa]"></a>LISTVIEW__UpdateScrollParas</STRONG> (Thumb, 212 bytes, Stack size 48 bytes, listview.o(i.LISTVIEW__UpdateScrollParas))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[692]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetNumItems
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[2ce]"></a>LTC2942BatAccumulated</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, ltc2942.o(i.LTC2942BatAccumulated))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = LTC2942BatAccumulated &rArr; I2C_ReadData &rArr; I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[38c]"></a>LTC2942BatAccumulatedAdjust</STRONG> (Thumb, 170 bytes, Stack size 40 bytes, ltc2942.o(i.LTC2942BatAccumulatedAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LTC2942BatAccumulatedAdjust &rArr; LTC2942BatVoltage &rArr; I2C_ReadData &rArr; I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatVoltage
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942UpdateBatAccumulated
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2cd]"></a>LTC2942BatVoltage</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, ltc2942.o(i.LTC2942BatVoltage))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LTC2942BatVoltage &rArr; I2C_ReadData &rArr; I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadData
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulatedAdjust
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2cc]"></a>LTC2942Init</STRONG> (Thumb, 262 bytes, Stack size 40 bytes, ltc2942.o(i.LTC2942Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = LTC2942Init &rArr; LTC2942BatVoltage &rArr; I2C_ReadData &rArr; I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatVoltage
<LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteData
<LI><a href="#[6a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadByte
<LI><a href="#[713]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942UpdateBatAccumulated
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[713]"></a>LTC2942UpdateBatAccumulated</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, ltc2942.o(i.LTC2942UpdateBatAccumulated))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LTC2942UpdateBatAccumulated &rArr; I2C_WriteData &rArr; I2C_Start &rArr; I2C_FromBusyToIdle &rArr; I2C_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[6a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulatedAdjust
</UL>

<P><STRONG><a name="[714]"></a>LVVoltageOutputAdjust</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, dac.o(i.LVVoltageOutputAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = LVVoltageOutputAdjust &rArr; SetLVVoltageUp &rArr; DacStartOutput &rArr; DAC_SoftwareTriggerCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLVVoltageUp
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLVVoltageDown
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
</UL>

<P><STRONG><a name="[717]"></a>LcdBrightInitOS</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, midfunction.o(i.LcdBrightInitOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = LcdBrightInitOS &rArr; OSMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[28e]"></a>LcdBrightRefreshProcess</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, midfunction.o(i.LcdBrightRefreshProcess))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = LcdBrightRefreshProcess &rArr; LcdBrightUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetBright
<LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightUnlock
<LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightLock
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppKeyScanTask
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[38a]"></a>LcdSSD1963_ResetInit</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, lcdssd1963.o(i.LcdSSD1963_ResetInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = LcdSSD1963_ResetInit &rArr; Lcdc_Spi_Init &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcdc_Reset
<LI><a href="#[71c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearAll
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcdc_Spi_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[41f]"></a>LcdSetBright</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcdssd1963.o(i.LcdSetBright))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LcdSetBright &rArr; System168MDelay100us &rArr; System168MDelay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay100us
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1us
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[71e]"></a>Lcd_CheckArea</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, lcdssd1963.o(i.Lcd_CheckArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Lcd_CheckArea
</UL>
<BR>[Called By]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearPart
</UL>

<P><STRONG><a name="[71c]"></a>Lcd_ClearAll</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, lcdssd1963.o(i.Lcd_ClearAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Lcd_ClearAll
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSSD1963_ResetInit
</UL>

<P><STRONG><a name="[71d]"></a>Lcd_ClearPart</STRONG> (Thumb, 136 bytes, Stack size 56 bytes, lcdssd1963.o(i.Lcd_ClearPart))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Lcd_ClearPart &rArr; Lcd_CheckArea
</UL>
<BR>[Calls]<UL><LI><a href="#[71e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_CheckArea
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>

<P><STRONG><a name="[41b]"></a>Lcd_CloseShow</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcdssd1963.o(i.Lcd_CloseShow))
<BR><BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[389]"></a>Lcd_PllLockState</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, lcdssd1963.o(i.Lcd_PllLockState))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[71f]"></a>Lcd_Reset</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, lcdssd1963.o(i.Lcd_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Lcd_Reset &rArr; System168MDelay1ms &rArr; System168MDelay100us &rArr; System168MDelay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
</UL>
<BR>[Called By]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcdc_Spi_Init
</UL>

<P><STRONG><a name="[71a]"></a>Lcdc_Reset</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, lcdssd1963.o(i.Lcdc_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Lcdc_Reset &rArr; System168MDelay1ms &rArr; System168MDelay100us &rArr; System168MDelay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSSD1963_ResetInit
</UL>

<P><STRONG><a name="[721]"></a>LedPinConfig</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, systemconfig.o(i.LedPinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LedPinConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[722]"></a>LogRecordFileInit</STRONG> (Thumb, 462 bytes, Stack size 352 bytes, recorder.o(i.LogRecordFileInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 800 + Unknown Stack Size
<LI>Call Chain = LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
</UL>

<P><STRONG><a name="[3b6]"></a>MULTIEDIT_AddKey</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, multiedit.o(i.MULTIEDIT_AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserStringToMULTIEDIT
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserDataToMULTIEDIT
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUserDataToMULTIEDIT
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[a9]"></a>MULTIEDIT_Callback</STRONG> (Thumb, 432 bytes, Stack size 48 bytes, multiedit.o(i.MULTIEDIT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_Callback &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollState
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearCache
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multiedit.o(i.MULTIEDIT_CreateUser)
</UL>
<P><STRONG><a name="[138]"></a>MULTIEDIT_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, multiedit_createindirect.o(i.MULTIEDIT_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_CreateIndirect &rArr; MULTIEDIT_CreateUser &rArr; MULTIEDIT_SetText &rArr; _SetText &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
</UL>
<BR>[Address Reference Count : 17]<UL><LI> delaymodifysingledlg.o(.constdata)
<LI> slavenumbersetdlg.o(.constdata)
<LI> delaysampleprocessdelayinputdlg.o(.constdata)
<LI> regholeinsertinputdlg.o(.constdata)
<LI> detoutsideinputdlg.o(.constdata)
<LI> regdetoutsideinputbatchdlg.o(.constdata)
<LI> regdetfeatureinputforbarcodedlg.o(.constdata)
<LI> blastenterdlg.o(.constdata)
<LI> netparammodifydlg.o(.constdata)
<LI> deletedetinputholeinfodlg.o(.constdata)
<LI> delaymodifybatchdlg.o(.constdata)
<LI> dkeypasswdmodifydlg.o(.constdata)
<LI> wifipassworddlg.o(.constdata)
<LI> detinfoinsertrangeinputdlg.o(.constdata)
<LI> netinfomodifyrangeinputdlg.o(.constdata)
<LI> detanalysthighvoltageinputdlg.o(.constdata)
<LI> regholeparaminputdlg.o(.constdata)
</UL>
<P><STRONG><a name="[72c]"></a>MULTIEDIT_CreateUser</STRONG> (Thumb, 262 bytes, Stack size 56 bytes, multiedit.o(i.MULTIEDIT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 728 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_CreateUser &rArr; MULTIEDIT_SetText &rArr; _SetText &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetText
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateIndirect
</UL>

<P><STRONG><a name="[3b7]"></a>MULTIEDIT_GetText</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, multiedit.o(i.MULTIEDIT_GetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_GetText &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3b5]"></a>MULTIEDIT_GetTextSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, multiedit.o(i.MULTIEDIT_GetTextSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_GetTextSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUserDataToMULTIEDIT
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3b2]"></a>MULTIEDIT_SetFont</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, multiedit.o(i.MULTIEDIT_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_SetFont &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateTextArea
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3b0]"></a>MULTIEDIT_SetMaxNumChars</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, multiedit.o(i.MULTIEDIT_SetMaxNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_SetMaxNumChars &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateTextArea
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3b1]"></a>MULTIEDIT_SetPasswordMode</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, multiedit.o(i.MULTIEDIT_SetPasswordMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_SetPasswordMode &rArr; _SetFlag &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3f7]"></a>MULTIEDIT_SetText</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, multiedit.o(i.MULTIEDIT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_SetText &rArr; _SetText &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
</UL>

<P><STRONG><a name="[439]"></a>MULTIEDIT_SetWrapChar</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, multiedit.o(i.MULTIEDIT_SetWrapChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = MULTIEDIT_SetWrapChar &rArr; _SetWrapMode &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetWrapMode
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[33]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[735]"></a>MotoPinConfig</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, systemconfig.o(i.MotoPinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MotoPinConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[260]"></a>MsgBoxInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, custommessagebox.o(i.MsgBoxInit))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyUserInfoError
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllUnRegFollow
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ad]"></a>MsgBoxIsShow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, custommessagebox.o(i.MsgBoxIsShow))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[31]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[35b]"></a>NVIC_Init</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, misc.o(i.NVIC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetTimerConfig
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetReceiverConfig
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
</UL>

<P><STRONG><a name="[783]"></a>NVIC_PriorityGroupConfig</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, misc.o(i.NVIC_PriorityGroupConfig))
<BR><BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
</UL>

<P><STRONG><a name="[93e]"></a>NVIC_SetVectorTable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, misc.o(i.NVIC_SetVectorTable))
<BR><BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[736]"></a>OSEventNameSet</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, os_core.o(i.OSEventNameSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSEventNameSet
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[739]"></a>OSInit</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, os_core.o(i.OSInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = OSInit &rArr; OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[745]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookEnd
<LI><a href="#[73a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInitHookBegin
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[73c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitRdyList
<LI><a href="#[73b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitMisc
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73a]"></a>OSInitHookBegin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSInitHookBegin))
<BR><BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[745]"></a>OSInitHookEnd</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSInitHookEnd))
<BR><BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[50b]"></a>OSIntEnter</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, os_core.o(i.OSIntEnter))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_WKUP_IRQHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_WKUP_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[50e]"></a>OSIntExit</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, os_core.o(i.OSIntExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[747]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntCtxSw
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_IRQHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_WKUP_IRQHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_WKUP_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[631]"></a>OSMboxCreate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_mbox.o(i.OSMboxCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSMboxCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
</UL>

<P><STRONG><a name="[223]"></a>OSMutexCreate</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, os_mutex.o(i.OSMutexCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightInitOS
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemInitOS
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicStkLock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInitOS
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSLock
</UL>

<P><STRONG><a name="[224]"></a>OSMutexPend</STRONG> (Thumb, 556 bytes, Stack size 56 bytes, os_mutex.o(i.OSMutexPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = OSMutexPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[718]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightLock
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiLock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicStkLock
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcLock
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSLock
</UL>

<P><STRONG><a name="[226]"></a>OSMutexPost</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, os_mutex.o(i.OSMutexPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[74c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutex_RdyAtPrio
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[719]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightUnlock
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUnlock
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicStkUnlock
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcUnlock
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSUnlock
</UL>

<P><STRONG><a name="[24d]"></a>OSSchedLock</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, os_core.o(i.OSSchedLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSSchedLock
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveBlastDet
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveInitState
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSlaveDetNumber
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetNumber
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllSlaveInfo
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[24e]"></a>OSSchedUnlock</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, os_core.o(i.OSSchedUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveBlastDet
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveInitState
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSlaveDetNumber
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetNumber
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllSlaveInfo
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[290]"></a>OSSemCreate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, os_sem.o(i.OSSemCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSSemCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[748]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventWaitListInit
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_InitOS
<LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Init
</UL>

<P><STRONG><a name="[291]"></a>OSSemPend</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, os_sem.o(i.OSSemPend))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[749]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskWait
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Lock
</UL>

<P><STRONG><a name="[632]"></a>OSSemPost</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, os_sem.o(i.OSSemPost))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrSignal
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_DataOut
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Unlock
</UL>

<P><STRONG><a name="[74e]"></a>OSStart</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, os_core.o(i.OSStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OSStart
</UL>
<BR>[Calls]<UL><LI><a href="#[74f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStartHighRdy
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[761]"></a>OSTCBInitHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTCBInitHook))
<BR><BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[750]"></a>OSTaskCreateExt</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, os_task.o(i.OSTaskCreateExt))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
<LI><a href="#[751]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStkClr
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[752]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkInit
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
</UL>

<P><STRONG><a name="[762]"></a>OSTaskCreateHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskCreateHook))
<BR><BR>[Called By]<UL><LI><a href="#[753]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TCBInit
</UL>

<P><STRONG><a name="[279]"></a>OSTaskDel</STRONG> (Thumb, 322 bytes, Stack size 24 bytes, os_task.o(i.OSTaskDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 44 + Unknown Stack Size
<LI>Call Chain = OSTaskDel &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[755]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagUnlink
<LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemoveMulti
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
<LI><a href="#[756]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Dummy
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[757]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelHook
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStartBlastTask
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSoundTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppLowPriTask
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveEnterMainMenuDlg
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[757]"></a>OSTaskDelHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskDelHook))
<BR><BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[274]"></a>OSTaskDelReq</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, os_task.o(i.OSTaskDelReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTaskDelReq
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanWork
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueWaitReceive
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitReceive
</UL>

<P><STRONG><a name="[763]"></a>OSTaskIdleHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskIdleHook))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskIdle
</UL>

<P><STRONG><a name="[758]"></a>OSTaskNameSet</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, os_task.o(i.OSTaskNameSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTaskNameSet
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
<LI><a href="#[743]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskStat
<LI><a href="#[742]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTaskIdle
</UL>

<P><STRONG><a name="[46b]"></a>OSTaskResume</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, os_task.o(i.OSTaskResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTaskResume &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[764]"></a>OSTaskReturnHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskReturnHook))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskReturn
</UL>

<P><STRONG><a name="[765]"></a>OSTaskStatHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskStatHook))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[388]"></a>OSTaskStkChk</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, os_task.o(i.OSTaskStkChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
</UL>

<P><STRONG><a name="[752]"></a>OSTaskStkInit</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, os_cpu_c.o(i.OSTaskStkInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTaskStkInit
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[46a]"></a>OSTaskSuspend</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, os_task.o(i.OSTaskSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = OSTaskSuspend &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[8e]"></a>OSTaskSwHook</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_cpu_c.o(i.OSTaskSwHook))
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_a.o(.text)
</UL>
<P><STRONG><a name="[221]"></a>OSTimeDly</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, os_time.o(i.OSTimeDly))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditOneDeviceForDL
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteEEPROM
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStartBlastTask
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CustomSendMessage
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostDisConnect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveStatusReset
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveBlastDet
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSoundTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveSaveDetInfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDeleteDetInfo
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveSetRtc
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIdlePublicStk
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelay
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsZEBRA
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_Delay
</UL>

<P><STRONG><a name="[245]"></a>OSTimeDlyHMSM</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, os_time.o(i.OSTimeDlyHMSM))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaiLinCurrentSteady
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanWork
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiCurrentAPInfo
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHVProtectPoint
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueScanSlave
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostInit
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveBlastDet
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppKeyScanTask
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWifiSocket
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcdc_Spi_Init
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueWaitReceive
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiReset
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiExitCmdMode
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[268]"></a>OSTimeGet</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, os_time.o(i.OSTimeGet))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = OSTimeGet
</UL>
<BR>[Calls]<UL><LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStateMonitor
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaiLinCurrentSteady
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanWork
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMC_FormatAnalyze
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyBatVoltage
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHVProtectPoint
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostDisConnect
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueConnectSlave
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppKeyScanTask
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGeneralString
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyGPS
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveSaveDetInfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDeleteDetInfo
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetData
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueWaitReceive
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitReceive
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsZEBRA
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_X_GetTime
</UL>

<P><STRONG><a name="[759]"></a>OSTimeTick</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, os_core.o(i.OSTimeTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = OSTimeTick &rArr; OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[75a]"></a>OSTimeTickHook</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, os_cpu_c.o(i.OSTimeTickHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[75b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmrSignal
</UL>
<BR>[Called By]<UL><LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
</UL>

<P><STRONG><a name="[75b]"></a>OSTmrSignal</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, os_tmr.o(i.OSTmrSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
</UL>
<BR>[Called By]<UL><LI><a href="#[75a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTickHook
</UL>

<P><STRONG><a name="[744]"></a>OSTmr_Init</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, os_tmr.o(i.OSTmr_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
<LI><a href="#[736]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSEventNameSet
<LI><a href="#[75d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_InitTask
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[756]"></a>OS_Dummy</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, os_core.o(i.OS_Dummy))
<BR><BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[74d]"></a>OS_EventTaskRdy</STRONG> (Thumb, 180 bytes, Stack size 52 bytes, os_core.o(i.OS_EventTaskRdy))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[754]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemoveMulti
<LI><a href="#[74b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[74b]"></a>OS_EventTaskRemove</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, os_core.o(i.OS_EventTaskRemove))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_EventTaskRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>

<P><STRONG><a name="[754]"></a>OS_EventTaskRemoveMulti</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, os_core.o(i.OS_EventTaskRemoveMulti))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = OS_EventTaskRemoveMulti
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[74d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_EventTaskRdy
</UL>

<P><STRONG><a name="[749]"></a>OS_EventTaskWait</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, os_core.o(i.OS_EventTaskWait))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = OS_EventTaskWait
</UL>
<BR>[Called By]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
</UL>

<P><STRONG><a name="[748]"></a>OS_EventWaitListInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, os_core.o(i.OS_EventWaitListInit))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemCreate
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMboxCreate
</UL>

<P><STRONG><a name="[73f]"></a>OS_FlagInit</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, os_flag.o(i.OS_FlagInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_FlagInit
</UL>
<BR>[Calls]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[755]"></a>OS_FlagUnlink</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, os_flag.o(i.OS_FlagUnlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OS_FlagUnlink
</UL>
<BR>[Called By]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
</UL>

<P><STRONG><a name="[75c]"></a>OS_MemClr</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, os_core.o(i.OS_MemClr))
<BR><BR>[Called By]<UL><LI><a href="#[740]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemInit
<LI><a href="#[741]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_QInit
<LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
<LI><a href="#[73d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitTCBList
<LI><a href="#[73e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_InitEventList
<LI><a href="#[73f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_FlagInit
</UL>

<P><STRONG><a name="[740]"></a>OS_MemInit</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, os_mem.o(i.OS_MemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_MemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[741]"></a>OS_QInit</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, os_q.o(i.OS_QInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = OS_QInit
</UL>
<BR>[Calls]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[74a]"></a>OS_Sched</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, os_core.o(i.OS_Sched))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSCtxSw
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[746]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SchedNew
</UL>
<BR>[Called By]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
</UL>

<P><STRONG><a name="[753]"></a>OS_TCBInit</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, os_core.o(i.OS_TCBInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[762]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateHook
<LI><a href="#[761]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTCBInitHook
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[ac]"></a>OS_TaskIdle</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, os_core.o(i.OS_TaskIdle))
<BR><BR>[Calls]<UL><LI><a href="#[763]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskIdleHook
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(i.OS_InitTaskIdle)
</UL>
<P><STRONG><a name="[aa]"></a>OS_TaskReturn</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, os_task.o(i.OS_TaskReturn))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = OS_TaskReturn &rArr; OSTaskDel &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[764]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskReturnHook
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_cpu_c.o(i.OSTaskStkInit)
</UL>
<P><STRONG><a name="[ad]"></a>OS_TaskStat</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, os_core.o(i.OS_TaskStat))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OS_TaskStat &rArr; OS_TaskStatStkChk &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[765]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStatHook
<LI><a href="#[738]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Restore
<LI><a href="#[737]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_CPU_SR_Save
<LI><a href="#[766]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStatStkChk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_core.o(i.OS_InitTaskStat)
</UL>
<P><STRONG><a name="[766]"></a>OS_TaskStatStkChk</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, os_core.o(i.OS_TaskStatStkChk))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = OS_TaskStatStkChk &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_TaskStat
</UL>

<P><STRONG><a name="[751]"></a>OS_TaskStkClr</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, os_task.o(i.OS_TaskStkClr))
<BR><BR>[Called By]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
</UL>

<P><STRONG><a name="[7d]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.OTG_FS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = OTG_FS_IRQHandler &rArr; USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.OTG_FS_WKUP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = OTG_FS_WKUP_IRQHandler &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_UngateClock
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.OTG_HS_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = OTG_HS_IRQHandler &rArr; USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
<LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.OTG_HS_WKUP_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28 + Unknown Stack Size
<LI>Call Chain = OTG_HS_WKUP_IRQHandler &rArr; SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[76a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_UngateClock
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI_ClearITPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[76b]"></a>OpenBlasterRecordFile</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, recorder.o(i.OpenBlasterRecordFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = OpenBlasterRecordFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
</UL>

<P><STRONG><a name="[3a7]"></a>OpenDetCmdDelayInterval</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dethardware.o(i.OpenDetCmdDelayInterval))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[298]"></a>OpenWifiSocket</STRONG> (Thumb, 278 bytes, Stack size 144 bytes, wifi.o(i.OpenWifiSocket))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = OpenWifiSocket &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAddrU32ToString
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiExitCmdMode
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[ae]"></a>PROGBAR_Callback</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = PROGBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar.o(i.PROGBAR_CreateUser)
</UL>
<P><STRONG><a name="[13d]"></a>PROGBAR_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, progbar_createindirect.o(i.PROGBAR_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = PROGBAR_CreateIndirect &rArr; PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>
<BR>[Address Reference Count : 6]<UL><LI> progbarquickdlg.o(.constdata)
<LI> progbarchargedlg.o(.constdata)
<LI> progbarblastdlg.o(.constdata)
<LI> progbarcompletedlg.o(.constdata)
<LI> progbarmaskregdetdlg.o(.constdata)
<LI> progbarquickbeforeblastdlg.o(.constdata)
</UL>
<P><STRONG><a name="[76d]"></a>PROGBAR_CreateUser</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, progbar.o(i.PROGBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = PROGBAR_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateIndirect
</UL>

<P><STRONG><a name="[467]"></a>PROGBAR_SetBarColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, progbar_setbarcolor.o(i.PROGBAR_SetBarColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetBarColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[466]"></a>PROGBAR_SetFont</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, progbar_setfont.o(i.PROGBAR_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[46d]"></a>PROGBAR_SetMinMax</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, progbar_setminmax.o(i.PROGBAR_SetMinMax))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetMinMax &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[469]"></a>PROGBAR_SetTextColor</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, progbar_settextcolor.o(i.PROGBAR_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[46e]"></a>PROGBAR_SetValue</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, progbar.o(i.PROGBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = PROGBAR_SetValue &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[76f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetValue
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[771]"></a>PROGBAR__GetTextLocked</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, progbar.o(i.PROGBAR__GetTextLocked))
<BR><BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[772]"></a>PROGBAR__GetTextRect</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, progbar.o(i.PROGBAR__GetTextRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = PROGBAR__GetTextRect &rArr; GUI_GetStringDistX &rArr; GUI__GetLineDistX &rArr; GUI__GetOverlap &rArr; GUI_GetCharDistXEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[770]"></a>PROGBAR__Value2Pos</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, progbar.o(i.PROGBAR__Value2Pos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PROGBAR__Value2Pos
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[787]"></a>PWR_BackupAccessCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_pwr.o(i.PWR_BackupAccessCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[294]"></a>Pack</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, package.o(i.Pack))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Pack &rArr; aes_encrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_Pack
<LI><a href="#[774]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_encrypt
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerCurrentTime
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveSaveDetInfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDeleteDetInfo
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileData
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleGeneralTransferData
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetData
</UL>

<P><STRONG><a name="[775]"></a>PackageKeyInit</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, package.o(i.PackageKeyInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PackageKeyInit &rArr; aes_set_key
</UL>
<BR>[Calls]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_set_key
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[777]"></a>PowerConfig</STRONG> (Thumb, 276 bytes, Stack size 16 bytes, power.o(i.PowerConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PowerConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[77a]"></a>RADIO_AddValue</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, radio.o(i.RADIO_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
</UL>

<P><STRONG><a name="[af]"></a>RADIO_Callback</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, radio.o(i.RADIO_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = RADIO_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[77c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Inc
<LI><a href="#[77d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Dec
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(i.RADIO_CreateUser)
</UL>
<P><STRONG><a name="[13b]"></a>RADIO_CreateIndirect</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, radio_createindirect.o(i.RADIO_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = RADIO_CreateIndirect &rArr; RADIO_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>
<BR>[Address Reference Count : 5]<UL><LI> wifinetsetdlg.o(.constdata)
<LI> deviceusagessetdlg.o(.constdata)
<LI> colorsetdlg.o(.constdata)
<LI> dettypesetdlg.o(.constdata)
<LI> mastertimesharesetdlg.o(.constdata)
</UL>
<P><STRONG><a name="[77e]"></a>RADIO_CreateUser</STRONG> (Thumb, 210 bytes, Stack size 72 bytes, radio.o(i.RADIO_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = RADIO_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Create
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_AddItem
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateIndirect
</UL>

<P><STRONG><a name="[77d]"></a>RADIO_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, radio.o(i.RADIO_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = RADIO_Dec &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[43d]"></a>RADIO_GetValue</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, radio.o(i.RADIO_GetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = RADIO_GetValue &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[77c]"></a>RADIO_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio.o(i.RADIO_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = RADIO_Inc &rArr; RADIO_AddValue &rArr; RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[43b]"></a>RADIO_SetBkColor</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, radio_setbkcolor.o(i.RADIO_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = RADIO_SetBkColor &rArr; WM_SetTransState &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[7c1]"></a>RADIO_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio_default.o(i.RADIO_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[7c2]"></a>RADIO_SetDefaultTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, radio_default.o(i.RADIO_SetDefaultTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[43a]"></a>RADIO_SetTextColor</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, radio_settextcolor.o(i.RADIO_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = RADIO_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[43c]"></a>RADIO_SetValue</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, radio.o(i.RADIO_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = RADIO_SetValue &rArr; RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[77a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_AddValue
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[25]"></a>RADIO__GetButtonSize</STRONG> (Thumb, 38 bytes, Stack size 56 bytes, radio.o(i.RADIO__GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = RADIO__GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio.o(.data)
</UL>
<P><STRONG><a name="[781]"></a>RADIO__SetValue</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, radio.o(i.RADIO__SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = RADIO__SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
</UL>

<P><STRONG><a name="[20d]"></a>RCC_AHB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AutoCheck_Config
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanGpioPinConfig
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerConfig
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePinConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCConfig
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TriggerSinglePinConfig
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoPinConfig
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedPinConfig
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyConfig
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485TxPinExitUartConfig
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashGpioConfig
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGpioPinConfig
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSPortConfig
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendConfig
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
</UL>

<P><STRONG><a name="[816]"></a>RCC_AHB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
</UL>

<P><STRONG><a name="[6b5]"></a>RCC_AHB3PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_AHB3PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
</UL>

<P><STRONG><a name="[356]"></a>RCC_APB1PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB1PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPIConfig
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetTimerConfig
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
</UL>

<P><STRONG><a name="[210]"></a>RCC_APB2PeriphClockCmd</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_APB2PeriphClockCmd))
<BR><BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCConfig
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485TxPinExitUartConfig
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPIConfig
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetTimerConfig
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetReceiverConfig
<LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
</UL>

<P><STRONG><a name="[519]"></a>RCC_GetClocksFreq</STRONG> (Thumb, 214 bytes, Stack size 20 bytes, stm32f4xx_rcc.o(i.RCC_GetClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickConfig
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiGetFrequency
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashDelay
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>

<P><STRONG><a name="[789]"></a>RCC_GetFlagStatus</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_rcc.o(i.RCC_GetFlagStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RCC_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[788]"></a>RCC_LSEConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_LSEConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[78b]"></a>RCC_RTCCLKCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKCmd))
<BR><BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[78a]"></a>RCC_RTCCLKConfig</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f4xx_rcc.o(i.RCC_RTCCLKConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[2ad]"></a>RMC_FormatAnalyze</STRONG> (Thumb, 548 bytes, Stack size 24 bytes, gps.o(i.RMC_FormatAnalyze))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = RMC_FormatAnalyze &rArr; GPSUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSUnlock
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSLock
<LI><a href="#[782]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gps_UTC_to_BJ
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsAscDec
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[3a5]"></a>RS485Config</STRONG> (Thumb, 310 bytes, Stack size 32 bytes, rs485.o(i.RS485Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = RS485Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[784]"></a>RS485DirCountDecrement</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, rs485.o(i.RS485DirCountDecrement))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RS485DirCountDecrement
</UL>
<BR>[Calls]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRS485MasterSlaveState
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[295]"></a>RS485SendData</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, rs485.o(i.RS485SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = RS485SendData &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRS485MasterSlaveState
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay10us
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveSaveDetInfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDeleteDetInfo
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
</UL>

<P><STRONG><a name="[477]"></a>RS485TxPinExitUartConfig</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, rs485.o(i.RS485TxPinExitUartConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RS485TxPinExitUartConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2a8]"></a>RTC_Config</STRONG> (Thumb, 204 bytes, Stack size 40 bytes, rtc.o(i.RTC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = RTC_Config &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[790]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteBackupRegister
<LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[786]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ReadBackupRegister
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
<LI><a href="#[78a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKConfig
<LI><a href="#[78b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_RTCCLKCmd
<LI><a href="#[788]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_LSEConfig
<LI><a href="#[789]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetFlagStatus
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[787]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWR_BackupAccessCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[794]"></a>RTC_EnterInitMode</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[795]"></a>RTC_ExitInitMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ExitInitMode))
<BR><BR>[Called By]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
<LI><a href="#[78d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Init
</UL>

<P><STRONG><a name="[791]"></a>RTC_GetDate</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
</UL>

<P><STRONG><a name="[793]"></a>RTC_GetTime</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f4xx_rtc.o(i.RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
</UL>

<P><STRONG><a name="[78d]"></a>RTC_Init</STRONG> (Thumb, 94 bytes, Stack size 12 bytes, stm32f4xx_rtc.o(i.RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[786]"></a>RTC_ReadBackupRegister</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_ReadBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ReadBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[29a]"></a>RTC_Read_Time</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, rtc.o(i.RTC_Read_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = RTC_Read_Time &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[78e]"></a>RTC_SetDate</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetDate &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Time
</UL>

<P><STRONG><a name="[78f]"></a>RTC_SetTime</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, stm32f4xx_rtc.o(i.RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[78c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WaitForSynchro
<LI><a href="#[796]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[792]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[795]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ExitInitMode
<LI><a href="#[794]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Time
</UL>

<P><STRONG><a name="[78c]"></a>RTC_WaitForSynchro</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[790]"></a>RTC_WriteBackupRegister</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_rtc.o(i.RTC_WriteBackupRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_WriteBackupRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
</UL>

<P><STRONG><a name="[2b0]"></a>RTC_Write_Time</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, rtc.o(i.RTC_Write_Time))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = RTC_Write_Time &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRtcTime
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRtcByBlueDkey
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[797]"></a>ReadAccreditErrorFile</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, recorder.o(i.ReadAccreditErrorFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = ReadAccreditErrorFile &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
</UL>

<P><STRONG><a name="[442]"></a>ReadAllDetInfo</STRONG> (Thumb, 672 bytes, Stack size 32 bytes, recorder.o(i.ReadAllDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = ReadAllDetInfo &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[798]"></a>ReadFactoryConfigParam</STRONG> (Thumb, 1482 bytes, Stack size 40 bytes, recorder.o(i.ReadFactoryConfigParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = ReadFactoryConfigParam &rArr; ReadSpecifiedFileData &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[6aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IpAddrStringToU32
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[799]"></a>ReadNetParam</STRONG> (Thumb, 442 bytes, Stack size 24 bytes, recorder.o(i.ReadNetParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = ReadNetParam &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
</UL>

<P><STRONG><a name="[233]"></a>ReadSlaveDetInfo</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, recorder.o(i.ReadSlaveDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = ReadSlaveDetInfo &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDetInfoToBlasterRecord
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[401]"></a>ReadSpecifiedFileData</STRONG> (Thumb, 210 bytes, Stack size 40 bytes, recorder.o(i.ReadSpecifiedFileData))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = ReadSpecifiedFileData &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFactoryConfigParam
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[504]"></a>ReadSpecifiedHexFileSize</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, recorder.o(i.ReadSpecifiedHexFileSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = ReadSpecifiedHexFileSize &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
</UL>

<P><STRONG><a name="[79a]"></a>ReadUserConfigParam</STRONG> (Thumb, 424 bytes, Stack size 8 bytes, recorder.o(i.ReadUserConfigParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = ReadUserConfigParam &rArr; WifiConfigIsOpen &rArr; GetConfigFileU32 &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Slave
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Master
<LI><a href="#[79b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConfigIsOpen
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileU32
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[2da]"></a>ReadWifiInfo</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, recorder.o(i.ReadWifiInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = ReadWifiInfo &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Base64Decode
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
</UL>

<P><STRONG><a name="[2b3]"></a>ReceiveGPSInfoStop</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gps.o(i.ReceiveGPSInfoStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ReceiveGPSInfoStop
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[39b]"></a>RegHoleInit</STRONG> (Thumb, 518 bytes, Stack size 64 bytes, midfunction.o(i.RegHoleInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = RegHoleInit &rArr; AllRegDetRankBaseOnHoleInfo &rArr; __aeabi_memcpy4
</UL>
<BR>[Calls]<UL><LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetIndexFromHoleInfo
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcRegHoleDelayFromNetParam
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySampleProcessInit
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[452]"></a>RemoveTimerHandleAndDeleteById</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, guicustomutils.o(i.RemoveTimerHandleAndDeleteById))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = RemoveTimerHandleAndDeleteById &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[6b1]"></a>ResetPowerOffKeyState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyscan.o(i.ResetPowerOffKeyState))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardScan
</UL>

<P><STRONG><a name="[29b]"></a>RtcStructToTimeString</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, rtc.o(i.RtcStructToTimeString))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = RtcStructToTimeString &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[79c]"></a>SCROLLBAR_AddValue</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_AddValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[b0]"></a>SCROLLBAR_Callback</STRONG> (Thumb, 316 bytes, Stack size 24 bytes, scrollbar.o(i.SCROLLBAR_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Inc
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Dec
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar.o(i.SCROLLBAR_CreateUser)
</UL>
<P><STRONG><a name="[3c9]"></a>SCROLLBAR_Create</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, scrollbar_create.o(i.SCROLLBAR_Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Create &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[7a1]"></a>SCROLLBAR_CreateAttached</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, scrollbar_create.o(i.SCROLLBAR_CreateAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[7a0]"></a>SCROLLBAR_CreateEx</STRONG> (Thumb, 28 bytes, Stack size 40 bytes, scrollbar.o(i.SCROLLBAR_CreateEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>

<P><STRONG><a name="[7a2]"></a>SCROLLBAR_CreateUser</STRONG> (Thumb, 242 bytes, Stack size 64 bytes, scrollbar.o(i.SCROLLBAR_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>
<BR>[Called By]<UL><LI><a href="#[7a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateEx
</UL>

<P><STRONG><a name="[124]"></a>SCROLLBAR_Dec</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Dec &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multiedit.o(i._AddKey)
</UL>
<P><STRONG><a name="[6f5]"></a>SCROLLBAR_GetDefaultWidth</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, scrollbar_defaults.o(i.SCROLLBAR_GetDefaultWidth))
<BR><BR>[Called By]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[125]"></a>SCROLLBAR_Inc</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, scrollbar.o(i.SCROLLBAR_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_Inc &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> multiedit.o(i._AddKey)
</UL>
<P><STRONG><a name="[6f3]"></a>SCROLLBAR_SetColor</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, scrollbar_setcolor.o(i.SCROLLBAR_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
</UL>

<P><STRONG><a name="[3c8]"></a>SCROLLBAR_SetDefaultColor</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, scrollbar_defaults.o(i.SCROLLBAR_SetDefaultColor))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ca]"></a>SCROLLBAR_SetNumItems</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetNumItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetNumItems &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3cb]"></a>SCROLLBAR_SetPageSize</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetPageSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetPageSize &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3c4]"></a>SCROLLBAR_SetValue</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, scrollbar.o(i.SCROLLBAR_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[6f6]"></a>SCROLLBAR_SetWidth</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, scrollbar_setwidth.o(i.SCROLLBAR_SetWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR_SetWidth &rArr; WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
</UL>

<P><STRONG><a name="[79d]"></a>SCROLLBAR__InvalidatePartner</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__InvalidatePartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
</UL>
<BR>[Called By]<UL><LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[8ba]"></a>SCROLLBAR__Rect2VRect</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, scrollbar.o(i.SCROLLBAR__Rect2VRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCROLLBAR__Rect2VRect
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[6b]"></a>SDIO_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SDIO_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[b1]"></a>SLIDER_Callback</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = SLIDER_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(i.SLIDER_CreateUser)
</UL>
<P><STRONG><a name="[13a]"></a>SLIDER_CreateIndirect</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, slider_createindirect.o(i.SLIDER_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = SLIDER_CreateIndirect &rArr; SLIDER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sliderdlg.o(.constdata)
</UL>
<P><STRONG><a name="[7a8]"></a>SLIDER_CreateUser</STRONG> (Thumb, 144 bytes, Stack size 56 bytes, slider.o(i.SLIDER_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = SLIDER_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateIndirect
</UL>

<P><STRONG><a name="[7a7]"></a>SLIDER_Dec</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Dec))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = SLIDER_Dec &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[7a6]"></a>SLIDER_Inc</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, slider.o(i.SLIDER_Inc))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = SLIDER_Inc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[414]"></a>SLIDER_SetNumTicks</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, slider.o(i.SLIDER_SetNumTicks))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = SLIDER_SetNumTicks &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[413]"></a>SLIDER_SetRange</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, slider.o(i.SLIDER_SetRange))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = SLIDER_SetRange &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[411]"></a>SLIDER_SetValue</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, slider.o(i.SLIDER_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = SLIDER_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[524]"></a>SPI_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPIConfig
</UL>

<P><STRONG><a name="[526]"></a>SPI_I2S_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSendByte
</UL>

<P><STRONG><a name="[528]"></a>SPI_I2S_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSendByte
</UL>

<P><STRONG><a name="[527]"></a>SPI_I2S_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_spi.o(i.SPI_I2S_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSendByte
</UL>

<P><STRONG><a name="[523]"></a>SPI_Init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f4xx_spi.o(i.SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashSPIConfig
</UL>

<P><STRONG><a name="[36]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f0]"></a>SYSCFG_EXTILineConfig</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, stm32f4xx_syscfg.o(i.SYSCFG_EXTILineConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCFG_EXTILineConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetReceiverConfig
</UL>

<P><STRONG><a name="[2fe]"></a>SaveAllDetInfo</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, recorder.o(i.SaveAllDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = SaveAllDetInfo &rArr; SaveAllDetInfoNotChangeRank &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
</UL>
<BR>[Called By]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetTypeAndDelay
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllDetInfo
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayModifyBaseOnParam
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoInsert
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueReadDetInfoBackUp
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoleMove
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllErrorDetInfo
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3fc]"></a>SaveAllDetInfoNotChangeRank</STRONG> (Thumb, 648 bytes, Stack size 32 bytes, recorder.o(i.SaveAllDetInfoNotChangeRank))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = SaveAllDetInfoNotChangeRank &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfoNotChangeRank
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[282]"></a>SaveBlasteFireTime</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, recorder.o(i.SaveBlasteFireTime))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[33a]"></a>SaveBlueSlaveDetAndHoleData</STRONG> (Thumb, 296 bytes, Stack size 16 bytes, bluemaster.o(i.SaveBlueSlaveDetAndHoleData))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = SaveBlueSlaveDetAndHoleData &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoInsert
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoBackUp
</UL>

<P><STRONG><a name="[495]"></a>SaveDetFeature</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, recorder.o(i.SaveDetFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = SaveDetFeature &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[321]"></a>SaveErrCode</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, det_operart.o(i.SaveErrCode))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[2b1]"></a>SaveGPSInfo</STRONG> (Thumb, 210 bytes, Stack size 56 bytes, recorder.o(i.SaveGPSInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = SaveGPSInfo &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[4a1]"></a>SaveMasterTimeShareTest</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, recorder.o(i.SaveMasterTimeShareTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = SaveMasterTimeShareTest &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3eb]"></a>SaveNetParam</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, recorder.o(i.SaveNetParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = SaveNetParam &rArr; ReadNetParam &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[331]"></a>SaveRetryErrCode</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, det_operart.o(i.SaveRetryErrCode))
<BR><BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[25b]"></a>SaveSlaveDetInfo</STRONG> (Thumb, 150 bytes, Stack size 56 bytes, recorder.o(i.SaveSlaveDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = SaveSlaveDetInfo &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
</UL>

<P><STRONG><a name="[451]"></a>SaveTimerHandleToBuffer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, guicustomutils.o(i.SaveTimerHandleToBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = SaveTimerHandleToBuffer &rArr; WM_GetTimerId &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[412]"></a>SaveUserConfigParam</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, recorder.o(i.SaveUserConfigParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = SaveUserConfigParam &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2d9]"></a>SaveWifiInfo</STRONG> (Thumb, 288 bytes, Stack size 32 bytes, recorder.o(i.SaveWifiInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = SaveWifiInfo &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[7a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Base64Encode
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
</UL>

<P><STRONG><a name="[7aa]"></a>ScanGpioPinConfig</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, scan.o(i.ScanGpioPinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ScanGpioPinConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[2bf]"></a>ScanHardwareState</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, scan.o(i.ScanHardwareState))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = ScanHardwareState &rArr; ScanUartConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanSendData
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsZEBRA
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[6ac]"></a>ScanSendData</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, scan.o(i.ScanSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ScanSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
<LI><a href="#[6ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsZEBRA
</UL>

<P><STRONG><a name="[7ab]"></a>ScanUartConfig</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, scan.o(i.ScanUartConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = ScanUartConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanWork
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanHardwareState
</UL>

<P><STRONG><a name="[273]"></a>ScanWork</STRONG> (Thumb, 238 bytes, Stack size 24 bytes, scan.o(i.ScanWork))
<BR><BR>[Stack]<UL><LI>Max Depth = 124 + Unknown Stack Size
<LI>Call Chain = ScanWork &rArr; ScanUartConfig &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[7ac]"></a>SdCardIoCtrl</STRONG> (Thumb, 652 bytes, Stack size 56 bytes, sdcard.o(i.SdCardIoCtrl))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SdCardIoCtrl &rArr; SdCardSendCmd &rArr;  SdCardSendCmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWaitReady
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardRcvDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[7b1]"></a>SdCardPowerOn</STRONG> (Thumb, 322 bytes, Stack size 32 bytes, sdcard.o(i.SdCardPowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SdCardPowerOn &rArr; SdCardSendCmd &rArr;  SdCardSendCmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSetBaud
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiGetFrequency
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiGetBaud
<LI><a href="#[7b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiConfig
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[7af]"></a>SdCardRcvDataBlock</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, sdcard.o(i.SdCardRcvDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SdCardRcvDataBlock &rArr; SdCardSpiSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardReadBlock
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardIoCtrl
</UL>

<P><STRONG><a name="[7b6]"></a>SdCardReadBlock</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, sdcard.o(i.SdCardReadBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SdCardReadBlock &rArr; SdCardSendCmd &rArr;  SdCardSendCmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardRcvDataBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[7ae]"></a>SdCardSendCmd</STRONG> (Thumb, 220 bytes, Stack size 32 bytes, sdcard.o(i.SdCardSendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + In Cycle
<LI>Call Chain = SdCardSendCmd &rArr;  SdCardSendCmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWaitReady
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWriteBlock
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardReadBlock
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardIoCtrl
</UL>

<P><STRONG><a name="[7b7]"></a>SdCardSendDataBlock</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, sdcard.o(i.SdCardSendDataBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SdCardSendDataBlock &rArr; SdCardWaitReady &rArr; SdCardSpiSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWaitReady
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWriteBlock
</UL>

<P><STRONG><a name="[7b2]"></a>SdCardSpiConfig</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, sdcard.o(i.SdCardSpiConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SdCardSpiConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Cmd
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
</UL>

<P><STRONG><a name="[7b3]"></a>SdCardSpiGetBaud</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sdcard.o(i.SdCardSpiGetBaud))
<BR><BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
<LI><a href="#[7b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiGetFrequency
</UL>

<P><STRONG><a name="[7b5]"></a>SdCardSpiGetFrequency</STRONG> (Thumb, 26 bytes, Stack size 32 bytes, sdcard.o(i.SdCardSpiGetFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SdCardSpiGetFrequency &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
<LI><a href="#[7b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiGetBaud
</UL>
<BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
</UL>

<P><STRONG><a name="[7b0]"></a>SdCardSpiSendByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, sdcard.o(i.SdCardSpiSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SdCardSpiSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
<LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWriteBlock
<LI><a href="#[7ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWaitReady
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendDataBlock
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
<LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardReadBlock
<LI><a href="#[7af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardRcvDataBlock
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardIoCtrl
</UL>

<P><STRONG><a name="[7b4]"></a>SdCardSpiSetBaud</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, sdcard.o(i.SdCardSpiSetBaud))
<BR><BR>[Called By]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
</UL>

<P><STRONG><a name="[7ad]"></a>SdCardWaitReady</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, sdcard.o(i.SdCardWaitReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SdCardWaitReady &rArr; SdCardSpiSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendDataBlock
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
<LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardIoCtrl
</UL>

<P><STRONG><a name="[7b8]"></a>SdCardWriteBlock</STRONG> (Thumb, 182 bytes, Stack size 40 bytes, sdcard.o(i.SdCardWriteBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = SdCardWriteBlock &rArr; SdCardSendCmd &rArr;  SdCardSendCmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[7b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSpiSendByte
<LI><a href="#[7b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendDataBlock
<LI><a href="#[7ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[29e]"></a>SendBlastFireInfoData</STRONG> (Thumb, 314 bytes, Stack size 56 bytes, safemonitor.o(i.SendBlastFireInfoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = SendBlastFireInfoData &rArr; GetBlastDataDetInfoFromRecorder &rArr; GetConfigFileU32 &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgbar
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleGeneralTransferData
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataSecondPackFromRecorder
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataFirstPackFromRecorder
<LI><a href="#[7b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataEndPack
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[2a3]"></a>SendLogFileToServer</STRONG> (Thumb, 404 bytes, Stack size 88 bytes, logupload.o(i.SendLogFileToServer))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = SendLogFileToServer &rArr; GetLogDataFirstPack &rArr; GetLogFileSize &rArr; GetFileSize &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleGeneralTransferData
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
<LI><a href="#[7ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataPack
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataFirstPack
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogDataEndPack
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[34a]"></a>SetBlueCurrentHostSlaveStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bluetooth.o(i.SetBlueCurrentHostSlaveStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveInit
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueHostInit
</UL>

<P><STRONG><a name="[2c7]"></a>SetGuiDefaultColor</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, display.o(i.SetGuiDefaultColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = SetGuiDefaultColor &rArr; GUI_SetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[7bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_SetDefaultBkColor
<LI><a href="#[7c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetDefaultTextColor
<LI><a href="#[7bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetDefaultFont
<LI><a href="#[7c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetDefaultTextColor
<LI><a href="#[7c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetDefaultFont
<LI><a href="#[7c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetDefaultFont
<LI><a href="#[7c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetDefaultFont
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDefaultFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[7c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDefaultTextColor
<LI><a href="#[7c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EDIT_SetDefaultFont
<LI><a href="#[7bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultTextColor
<LI><a href="#[7be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultFont
<LI><a href="#[7bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetDefaultBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[69a]"></a>SetHVVoltageDown</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, dac.o(i.SetHVVoltageDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetHVVoltageDown &rArr; DacStartOutput &rArr; DAC_SoftwareTriggerCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDacHvValueMin
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDacCurrentValue
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HVVoltageOutputAdjust
</UL>

<P><STRONG><a name="[699]"></a>SetHVVoltageUp</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, dac.o(i.SetHVVoltageUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetHVVoltageUp &rArr; DacStartOutput &rArr; DAC_SoftwareTriggerCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[7c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDacHvValueMin
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDacCurrentValue
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HVVoltageOutputAdjust
</UL>

<P><STRONG><a name="[716]"></a>SetLVVoltageDown</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, dac.o(i.SetLVVoltageDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetLVVoltageDown &rArr; DacStartOutput &rArr; DAC_SoftwareTriggerCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDacLvValueMin
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDacCurrentValue
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVVoltageOutputAdjust
</UL>

<P><STRONG><a name="[715]"></a>SetLVVoltageUp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, dac.o(i.SetLVVoltageUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetLVVoltageUp &rArr; DacStartOutput &rArr; DAC_SoftwareTriggerCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getDacLvValueMin
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDacCurrentValue
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacStartOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVVoltageOutputAdjust
</UL>

<P><STRONG><a name="[261]"></a>SetMsgBoxCaption</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, custommessagebox.o(i.SetMsgBoxCaption))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetMsgBoxCaption &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyUserInfoError
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllUnRegFollow
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[391]"></a>SetMsgBoxHelp1</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, custommessagebox.o(i.SetMsgBoxHelp1))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetMsgBoxHelp1 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[3be]"></a>SetMsgBoxHelp2</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, custommessagebox.o(i.SetMsgBoxHelp2))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetMsgBoxHelp2 &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[263]"></a>SetMsgBoxLeft</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, custommessagebox.o(i.SetMsgBoxLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetMsgBoxLeft &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyUserInfoError
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllUnRegFollow
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[262]"></a>SetMsgBoxMessage</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, custommessagebox.o(i.SetMsgBoxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetMsgBoxMessage &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyUserInfoError
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllUnRegFollow
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[390]"></a>SetMsgBoxMessageColor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, custommessagebox.o(i.SetMsgBoxMessageColor))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[392]"></a>SetMsgBoxRight</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, custommessagebox.o(i.SetMsgBoxRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetMsgBoxRight &rArr; strcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[399]"></a>SetNetInfoDlgListViewSelIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, netinfodlg.o(i.SetNetInfoDlgListViewSelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[40e]"></a>SetNetParamListViewDlgSelIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, netparamlistviewdlg.o(i.SetNetParamListViewDlgSelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3e1]"></a>SetNetTestErrorListViewDlgListViewSelIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, nettesterrorlistviewdlg.o(i.SetNetTestErrorListViewDlgListViewSelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3a6]"></a>SetNormalHighVoltageGoal</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, midfunction.o(i.SetNormalHighVoltageGoal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetNormalHighVoltageGoal
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDacHvValueMinFromVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[50d]"></a>SetPowerOffKeyState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keyscan.o(i.SetPowerOffKeyState))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[31e]"></a>SetProgbarParam</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, display.o(i.SetProgbarParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = SetProgbarParam &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[3a9]"></a>SetRS485Master</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, rs485.o(i.SetRS485Master))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetRS485Master
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserConfigParam
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3aa]"></a>SetRS485Slave</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, rs485.o(i.SetRS485Slave))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetRS485Slave
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserConfigParam
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[475]"></a>SetRegDetDelay</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, midfunction.o(i.SetRegDetDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetRegDetDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2ba]"></a>SetRtcByBlueDkey</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bluedkey.o(i.SetRtcByBlueDkey))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = SetRtcByBlueDkey &rArr; GetBlueDkeyRtc &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Time
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyRtc
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[503]"></a>SetServerReadyForUpdate</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, softwareupdate.o(i.SetServerReadyForUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = SetServerReadyForUpdate &rArr; WireleGeneralTransferData &rArr; WireleTransferData &rArr; WifiTransferData &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[67a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSetServerReadyForUpdateData
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleGeneralTransferData
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
</UL>

<P><STRONG><a name="[2f9]"></a>SetSlaveDeleteDetInfo</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, mastermode.o(i.SetSlaveDeleteDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = SetSlaveDeleteDetInfo &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
</UL>

<P><STRONG><a name="[2fa]"></a>SetSlaveDetHoleNumber</STRONG> (Thumb, 360 bytes, Stack size 16 bytes, mastermode.o(i.SetSlaveDetHoleNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = SetSlaveDetHoleNumber &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
</UL>

<P><STRONG><a name="[2fb]"></a>SetSlaveDetInfo</STRONG> (Thumb, 590 bytes, Stack size 80 bytes, mastermode.o(i.SetSlaveDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = SetSlaveDetInfo &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
</UL>

<P><STRONG><a name="[398]"></a>SetSlaveInfoListViewDlgListViewSelIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, slaveinfolistviewdlg.o(i.SetSlaveInfoListViewDlgListViewSelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[25e]"></a>SetSlaveRtc</STRONG> (Thumb, 422 bytes, Stack size 40 bytes, mastermode.o(i.SetSlaveRtc))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = SetSlaveRtc &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveSetRtc
</UL>

<P><STRONG><a name="[2fc]"></a>SetSlaveSaveDetInfo</STRONG> (Thumb, 302 bytes, Stack size 16 bytes, mastermode.o(i.SetSlaveSaveDetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = SetSlaveSaveDetInfo &rArr; Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
</UL>

<P><STRONG><a name="[24b]"></a>SetSlaveStartOperate</STRONG> (Thumb, 390 bytes, Stack size 24 bytes, mastermode.o(i.SetSlaveStartOperate))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = SetSlaveStartOperate &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAddrNameFromIndex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveStatusReset
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveBlastDet
</UL>

<P><STRONG><a name="[39c]"></a>SetWaitRegListViewDlgSelIndex</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, waitreglistviewdlg.o(i.SetWaitRegListViewDlgSelIndex))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[7c8]"></a>SetWifiUartBaud</STRONG> (Thumb, 116 bytes, Stack size 136 bytes, wifi.o(i.SetWifiUartBaud))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = SetWifiUartBaud &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiReset
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaudRate
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
</UL>

<P><STRONG><a name="[7c9]"></a>SetWifiUartBaudRate</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, wifi.o(i.SetWifiUartBaudRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SetWifiUartBaudRate &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaud
</UL>

<P><STRONG><a name="[44c]"></a>SetWindowParam</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicustomutils.o(i.SetWindowParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = SetWindowParam &rArr; WM_SetUserData &rArr; WM__SetUserDataEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
</UL>
<BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemoteBlastSlaveStateDlg
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAccreditErrorForDLDlg
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitPowerOffDlg
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPowerOffDlg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolDetTestDlg
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSliderDlg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastProcessDlg
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamModifyDlg
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteStatusDlg
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifySingleDlg
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveAccreditErrorForDLDlg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastMasterProcessDlg
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiConnectDlg
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiPasswordDlg
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetOutsideInputDlg
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyRangeInputDlg
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInfoInsertStatusDlg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInsertRangeInputDlg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleParamInputDlg
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegParamMenuDlg
</UL>

<P><STRONG><a name="[3df]"></a>ShowBlastCannelConfirm</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, blastcanneldlg.o(i.ShowBlastCannelConfirm))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = ShowBlastCannelConfirm &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3e0]"></a>ShowBlastCannelDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastcanneldlg.o(i.ShowBlastCannelDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastCannelDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3f1]"></a>ShowBlastDelayDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastdelaydlg.o(i.ShowBlastDelayDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastDelayDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3f0]"></a>ShowBlastDetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastdetdlg.o(i.ShowBlastDetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastDetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3bb]"></a>ShowBlastEnterDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastenterdlg.o(i.ShowBlastEnterDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastEnterDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[395]"></a>ShowBlastInfoVerifyDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastinfoverifydlg.o(i.ShowBlastInfoVerifyDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastInfoVerifyDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[44d]"></a>ShowBlastMasterProcessDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, blastmasterprocessdlg.o(i.ShowBlastMasterProcessDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowBlastMasterProcessDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ed]"></a>ShowBlastProcessDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, blastprocessdlg.o(i.ShowBlastProcessDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowBlastProcessDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[461]"></a>ShowBlastRecorderDetInfoListDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastrecorderdetinfolistdlg.o(i.ShowBlastRecorderDetInfoListDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastRecorderDetInfoListDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[408]"></a>ShowBlastRecorderDetailedDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastrecorderdetaileddlg.o(i.ShowBlastRecorderDetailedDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastRecorderDetailedDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ff]"></a>ShowBlastRecorderListViewDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastrecorderlistviewdlg.o(i.ShowBlastRecorderListViewDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastRecorderListViewDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[406]"></a>ShowBlastRecorderMasterBriefDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastrecordermasterbriefdlg.o(i.ShowBlastRecorderMasterBriefDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastRecorderMasterBriefDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[460]"></a>ShowBlastRecorderSlaveInfoListDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blastrecorderslaveinfolistdlg.o(i.ShowBlastRecorderSlaveInfoListDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastRecorderSlaveInfoListDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2f3]"></a>ShowBlastTestReportDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, blasttestreportdlg.o(i.ShowBlastTestReportDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBlastTestReportDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackKey
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[396]"></a>ShowBlueHostStatusDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bluehoststatusdlg.o(i.ShowBlueHostStatusDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowBlueHostStatusDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[385]"></a>ShowBlueSignal</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, toptitledlg.o(i.ShowBlueSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 220 + Unknown Stack Size
<LI>Call Chain = ShowBlueSignal &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[38e]"></a>ShowBusErrorRestoreDlg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, buserrorrestoredlg.o(i.ShowBusErrorRestoreDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowBusErrorRestoreDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[40c]"></a>ShowColorSetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, colorsetdlg.o(i.ShowColorSetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowColorSetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3bc]"></a>ShowCursor</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, guicustomutils.o(i.ShowCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 308 + Unknown Stack Size
<LI>Call Chain = ShowCursor &rArr; ShowInputCursor &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3c1]"></a>ShowDelayModifyBatchDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, delaymodifybatchdlg.o(i.ShowDelayModifyBatchDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDelayModifyBatchDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3c3]"></a>ShowDelayModifySingleDlg</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, delaymodifysingledlg.o(i.ShowDelayModifySingleDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = ShowDelayModifySingleDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ef]"></a>ShowDelaySampleProcessBlastDetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, delaysampleprocessblastdetdlg.o(i.ShowDelaySampleProcessBlastDetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDelaySampleProcessBlastDetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[474]"></a>ShowDelaySampleProcessDelayInputDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, delaysampleprocessdelayinputdlg.o(i.ShowDelaySampleProcessDelayInputDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDelaySampleProcessDelayInputDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[476]"></a>ShowDelaySampleProcessDelaySelDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, delaysampleprocessdelayseldlg.o(i.ShowDelaySampleProcessDelaySelDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDelaySampleProcessDelaySelDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[4e2]"></a>ShowDelaySampleProcessReadyConfirmDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, delaysampleprocessreadyconfirmdlg.o(i.ShowDelaySampleProcessReadyConfirmDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDelaySampleProcessReadyConfirmDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySampleProcessInit
</UL>

<P><STRONG><a name="[473]"></a>ShowDelaySampleProcessWaitRegDetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, delaysampleprocesswaitregdetdlg.o(i.ShowDelaySampleProcessWaitRegDetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDelaySampleProcessWaitRegDetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySampleProcessInit
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3f4]"></a>ShowDeleteDetInputHoleInfoDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, deletedetinputholeinfodlg.o(i.ShowDeleteDetInputHoleInfoDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDeleteDetInputHoleInfoDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2f4]"></a>ShowDeleteDetMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, deletedetmenudlg.o(i.ShowDeleteDetMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDeleteDetMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackKey
</UL>

<P><STRONG><a name="[3b9]"></a>ShowDetAccreditErrorForDLDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, detaccrediterrorfordldlg.o(i.ShowDetAccreditErrorForDLDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowDetAccreditErrorForDLDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[480]"></a>ShowDetAnalystBlastDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detanalystblastdlg.o(i.ShowDetAnalystBlastDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetAnalystBlastDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[428]"></a>ShowDetAnalystDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detanalystdlg.o(i.ShowDetAnalystDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetAnalystDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[430]"></a>ShowDetAnalystHighVoltageInputDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detanalysthighvoltageinputdlg.o(i.ShowDetAnalystHighVoltageInputDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetAnalystHighVoltageInputDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[443]"></a>ShowDetBackupBlueTypeSelDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detbackupbluetypeseldlg.o(i.ShowDetBackupBlueTypeSelDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetBackupBlueTypeSelDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[444]"></a>ShowDetBackupOperateBlueTypeSelDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detbackupoperatebluetypeseldlg.o(i.ShowDetBackupOperateBlueTypeSelDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetBackupOperateBlueTypeSelDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[429]"></a>ShowDetBackupOperateTypeSelDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detbackupoperatetypeseldlg.o(i.ShowDetBackupOperateTypeSelDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetBackupOperateTypeSelDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[457]"></a>ShowDetBlueBackupMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detbluebackupmenudlg.o(i.ShowDetBlueBackupMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetBlueBackupMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[458]"></a>ShowDetBlueInsertMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detblueinsertmenudlg.o(i.ShowDetBlueInsertMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetBlueInsertMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[42a]"></a>ShowDetCodeWriteMenuDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, detcodewritemenudlg.o(i.ShowDetCodeWriteMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowDetCodeWriteMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3e7]"></a>ShowDetCodeWriteStatusDlg</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, detcodewritestatusdlg.o(i.ShowDetCodeWriteStatusDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = ShowDetCodeWriteStatusDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[47a]"></a>ShowDetInfoInsertStatusDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, detinfoinsertstatusdlg.o(i.ShowDetInfoInsertStatusDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowDetInfoInsertStatusDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[47b]"></a>ShowDetInsertRangeInputDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, detinfoinsertrangeinputdlg.o(i.ShowDetInsertRangeInputDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowDetInsertRangeInputDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[481]"></a>ShowDetOutsideInputDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, detoutsideinputdlg.o(i.ShowDetOutsideInputDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowDetOutsideInputDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[45b]"></a>ShowDetSlaveBackupMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, detslavebackupmenudlg.o(i.ShowDetSlaveBackupMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetSlaveBackupMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[40f]"></a>ShowDetTypeSetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dettypesetdlg.o(i.ShowDetTypeSetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDetTypeSetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2d0]"></a>ShowDeviceChargeStartDlg</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, devicechargestartdlg.o(i.ShowDeviceChargeStartDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDeviceChargeStartDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[3fe]"></a>ShowDeviceInfoDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, deviceinfodlg.o(i.ShowDeviceInfoDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDeviceInfoDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[410]"></a>ShowDeviceNameSetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, devicenamesetdlg.o(i.ShowDeviceNameSetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDeviceNameSetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[424]"></a>ShowDeviceSelfTestDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, deviceselftestdlg.o(i.ShowDeviceSelfTestDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDeviceSelfTestDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2cf]"></a>ShowDeviceStartDlg</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, devicestartdlg.o(i.ShowDeviceStartDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDeviceStartDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[40a]"></a>ShowDeviceUsagesSetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, deviceusagessetdlg.o(i.ShowDeviceUsagesSetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDeviceUsagesSetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[422]"></a>ShowDkeyPasswdModifyDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, dkeypasswdmodifydlg.o(i.ShowDkeyPasswdModifyDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowDkeyPasswdModifyDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ba]"></a>ShowDkeyUserInfoError</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, display.o(i.ShowDkeyUserInfoError))
<BR><BR>[Stack]<UL><LI>Max Depth = 760 + Unknown Stack Size
<LI>Call Chain = ShowDkeyUserInfoError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[421]"></a>ShowFileSystemFormatDlg</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, filesystemformatdlg.o(i.ShowFileSystemFormatDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowFileSystemFormatDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[427]"></a>ShowHelpToolDetTestDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, helptooldettestdlg.o(i.ShowHelpToolDetTestDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowHelpToolDetTestDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3a2]"></a>ShowHelpToolMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, helptoolmenudlg.o(i.ShowHelpToolMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowHelpToolMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[36c]"></a>ShowInfoHelp</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, display.o(i.ShowInfoHelp))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = ShowInfoHelp &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3a0]"></a>ShowInfoManageDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, infomanagedlg.o(i.ShowInfoManageDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowInfoManageDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[36a]"></a>ShowInfoTitle</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, display.o(i.ShowInfoTitle))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = ShowInfoTitle &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3b4]"></a>ShowInputCursor</STRONG> (Thumb, 152 bytes, Stack size 88 bytes, guicustomutils.o(i.ShowInputCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = ShowInputCursor &rArr; GUI_DrawLine &rArr; GL_DrawLine &rArr; GL_DrawLineEx &rArr; GL_DrawLine1Ex &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[7cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetUtf8StringCharsCount
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[438]"></a>ShowKeyboardCharSelectList</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, guicustomutils.o(i.ShowKeyboardCharSelectList))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = ShowKeyboardCharSelectList &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_GetText
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[48c]"></a>ShowLoadingDlg</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, loadingdlg.o(i.ShowLoadingDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowLoadingDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[426]"></a>ShowLogRecorderListViewDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, logrecorderlistviewdlg.o(i.ShowLogRecorderListViewDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowLogRecorderListViewDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[485]"></a>ShowLogUploadDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, loguploaddlg.o(i.ShowLogUploadDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowLogUploadDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[41d]"></a>ShowLogo</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, devicestartdlg.o(i.ShowLogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = ShowLogo &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2f0]"></a>ShowMainMenuDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, mainmenudlg.o(i.ShowMainMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowMainMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackKey
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveEnterMainMenuDlg
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3a3]"></a>ShowMainMenuMoreDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mainmenumoredlg.o(i.ShowMainMenuMoreDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowMainMenuMoreDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[40d]"></a>ShowMasterTimeShareSetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, mastertimesharesetdlg.o(i.ShowMasterTimeShareSetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowMasterTimeShareSetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[264]"></a>ShowMsgBox</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, custommessagebox.o(i.ShowMsgBox))
<BR><BR>[Stack]<UL><LI>Max Depth = 696 + Unknown Stack Size
<LI>Call Chain = ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ExecCreatedDialog
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyUserInfoError
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllUnRegFollow
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[39a]"></a>ShowNetInfoDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, netinfodlg.o(i.ShowNetInfoDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowNetInfoDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3c2]"></a>ShowNetInfoModifyMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, netinfomodifymenudlg.o(i.ShowNetInfoModifyMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowNetInfoModifyMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[47c]"></a>ShowNetInfoModifyRangeInputDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, netinfomodifyrangeinputdlg.o(i.ShowNetInfoModifyRangeInputDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowNetInfoModifyRangeInputDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3e8]"></a>ShowNetParamListViewDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, netparamlistviewdlg.o(i.ShowNetParamListViewDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowNetParamListViewDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ea]"></a>ShowNetParamModifyDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, netparammodifydlg.o(i.ShowNetParamModifyDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowNetParamModifyDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3e2]"></a>ShowNetTestErrorListViewDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, nettesterrorlistviewdlg.o(i.ShowNetTestErrorListViewDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowNetTestErrorListViewDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2f1]"></a>ShowNetTestReportDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, nettestreportdlg.o(i.ShowNetTestReportDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowNetTestReportDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackKey
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackKey
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[387]"></a>ShowPowerOffDlg</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, poweroffdlg.o(i.ShowPowerOffDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowPowerOffDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3da]"></a>ShowProgbarBlastDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, progbarblastdlg.o(i.ShowProgbarBlastDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowProgbarBlastDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3f2]"></a>ShowProgbarChargeDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, progbarchargedlg.o(i.ShowProgbarChargeDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowProgbarChargeDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3d9]"></a>ShowProgbarCompleteDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, progbarcompletedlg.o(i.ShowProgbarCompleteDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowProgbarCompleteDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[39f]"></a>ShowProgbarMaskRegDetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, progbarmaskregdetdlg.o(i.ShowProgbarMaskRegDetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowProgbarMaskRegDetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3db]"></a>ShowProgbarQuickBeforeBlastDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, progbarquickbeforeblastdlg.o(i.ShowProgbarQuickBeforeBlastDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowProgbarQuickBeforeBlastDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3d8]"></a>ShowProgbarQuickDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, progbarquickdlg.o(i.ShowProgbarQuickDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowProgbarQuickDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[48a]"></a>ShowRegDetFeatureInputForBarcodeDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, regdetfeatureinputforbarcodedlg.o(i.ShowRegDetFeatureInputForBarcodeDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowRegDetFeatureInputForBarcodeDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[491]"></a>ShowRegDetOutsideInputBatchDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, regdetoutsideinputbatchdlg.o(i.ShowRegDetOutsideInputBatchDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowRegDetOutsideInputBatchDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[490]"></a>ShowRegHoleInsertInputDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, regholeinsertinputdlg.o(i.ShowRegHoleInsertInputDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowRegHoleInsertInputDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[48e]"></a>ShowRegHoleParamInputDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, regholeparaminputdlg.o(i.ShowRegHoleParamInputDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowRegHoleParamInputDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[487]"></a>ShowRegParamMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, regparammenudlg.o(i.ShowRegParamMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowRegParamMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3e3]"></a>ShowRemoteBlastSlaveStateDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, remoteblastslavestatedlg.o(i.ShowRemoteBlastSlaveStateDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowRemoteBlastSlaveStateDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3c0]"></a>ShowSDCardError</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, display.o(i.ShowSDCardError))
<BR><BR>[Stack]<UL><LI>Max Depth = 704 + Unknown Stack Size
<LI>Call Chain = ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[453]"></a>ShowSlaveAccreditErrorForDLDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, slaveaccrediterrorfordldlg.o(i.ShowSlaveAccreditErrorForDLDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowSlaveAccreditErrorForDLDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2f5]"></a>ShowSlaveInfoListViewDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, slaveinfolistviewdlg.o(i.ShowSlaveInfoListViewDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowSlaveInfoListViewDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackKey
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[409]"></a>ShowSlaveNumberSetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, slavenumbersetdlg.o(i.ShowSlaveNumberSetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowSlaveNumberSetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[45c]"></a>ShowSlaveStatusDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, slavestatusdlg.o(i.ShowSlaveStatusDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowSlaveStatusDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[40b]"></a>ShowSliderDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, sliderdlg.o(i.ShowSliderDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowSliderDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3ae]"></a>ShowSoftwareUpdateDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, softwareupdatedlg.o(i.ShowSoftwareUpdateDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowSoftwareUpdateDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3a1]"></a>ShowSystemSetMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, systemsetmenudlg.o(i.ShowSystemSetMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowSystemSetMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2ca]"></a>ShowTopTitleDlg</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, toptitledlg.o(i.ShowTopTitleDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowTopTitleDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[404]"></a>ShowUploadBlastRecordDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, uploadblastrecorddlg.o(i.ShowUploadBlastRecordDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowUploadBlastRecordDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[397]"></a>ShowWaitLinCurrentReadyDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, waitlincurrentreadydlg.o(i.ShowWaitLinCurrentReadyDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowWaitLinCurrentReadyDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[38f]"></a>ShowWaitPowerOffDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, waitpoweroffdlg.o(i.ShowWaitPowerOffDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowWaitPowerOffDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[39e]"></a>ShowWaitRegListViewDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, waitreglistviewdlg.o(i.ShowWaitRegListViewDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowWaitRegListViewDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[437]"></a>ShowWifiConnectDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wificonnectdlg.o(i.ShowWifiConnectDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowWifiConnectDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[436]"></a>ShowWifiNetInfoDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wifinetinfodlg.o(i.ShowWifiNetInfoDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowWifiNetInfoDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[43e]"></a>ShowWifiNetInitDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wifinetinitdlg.o(i.ShowWifiNetInitDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowWifiNetInitDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[425]"></a>ShowWifiNetSetDlg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wifinetsetdlg.o(i.ShowWifiNetSetDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = ShowWifiNetSetDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[433]"></a>ShowWifiPasswordDlg</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wifipassworddlg.o(i.ShowWifiPasswordDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ShowWifiPasswordDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseMainDialog
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[384]"></a>ShowWifiSignalStrength</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, toptitledlg.o(i.ShowWifiSignalStrength))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = ShowWifiSignalStrength &rArr; GUI_AA_DrawArc &rArr; _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[44e]"></a>SlaveEnterMainMenuDlg</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, slaveinfolistviewdlg.o(i.SlaveEnterMainMenuDlg))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = SlaveEnterMainMenuDlg &rArr; ShowMainMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[24a]"></a>SlaveInitState</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, mastermode.o(i.SlaveInitState))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = SlaveInitState &rArr; OSSchedUnlock &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
</UL>
<BR>[Called By]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupImportDetDataFromSlave
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackupExportDetDataToSlave
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveDetTest
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveCharge
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllSlaveBlastDet
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[7f5]"></a>SlipSimpleCheck</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, slip.o(i.SlipSimpleCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SlipSimpleCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_DataOut
</UL>

<P><STRONG><a name="[347]"></a>Slip_Pack</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, slip.o(i.Slip_Pack))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Slip_Pack
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyPack
</UL>

<P><STRONG><a name="[348]"></a>Slip_Unpack</STRONG> (Thumb, 160 bytes, Stack size 20 bytes, slip.o(i.Slip_Unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Slip_Unpack
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUnpack
</UL>

<P><STRONG><a name="[7cf]"></a>SoundConfig</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, sound.o(i.SoundConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SoundConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
<LI><a href="#[7d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2PreloadConfig
<LI><a href="#[7d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[2a5]"></a>SoundOutput</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, sound.o(i.SoundOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = SoundOutput &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSoundTask
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[42c]"></a>SoundOutputError</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sound.o(i.SoundOutputError))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = SoundOutputError &rArr; CreateSoudTask &rArr; TaskCreate &rArr; PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSoudTask
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[7d2]"></a>SoundOutputPice</STRONG> (Thumb, 456 bytes, Stack size 24 bytes, sound.o(i.SoundOutputPice))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = SoundOutputPice &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_TimeBaseInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
</UL>

<P><STRONG><a name="[42b]"></a>SoundOutputRight</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sound.o(i.SoundOutputRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = SoundOutputRight &rArr; CreateSoudTask &rArr; TaskCreate &rArr; PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSoudTask
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
</UL>

<P><STRONG><a name="[7e6]"></a>StringToDecValue</STRONG> (Thumb, 58 bytes, Stack size 12 bytes, rtc.o(i.StringToDecValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = StringToDecValue
</UL>
<BR>[Called By]<UL><LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeStringToRtcStruct
</UL>

<P><STRONG><a name="[7d5]"></a>SysTickConfig</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, delay.o(i.SysTickConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SysTickConfig &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[39]"></a>SysTick_Handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = SysTick_Handler &rArr; OSTimeTick &rArr; OSTimeTickHook &rArr; OSTmrSignal &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[784]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485DirCountDecrement
<LI><a href="#[759]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeTick
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f9]"></a>System168MDelay100us</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, delay.o(i.System168MDelay100us))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = System168MDelay100us &rArr; System168MDelay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay10us
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetBright
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[4fc]"></a>System168MDelay10us</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, delay.o(i.System168MDelay10us))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = System168MDelay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[69e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1us
</UL>
<BR>[Called By]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay100us
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[240]"></a>System168MDelay1ms</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, delay.o(i.System168MDelay1ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = System168MDelay1ms &rArr; System168MDelay100us &rArr; System168MDelay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay100us
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetStartBlast
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSSD1963_ResetInit
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[71a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcdc_Reset
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Reset
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitReceive
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[69e]"></a>System168MDelay1us</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, delay.o(i.System168MDelay1us))
<BR><BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetBright
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay10us
<LI><a href="#[69d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Delay
</UL>

<P><STRONG><a name="[2a7]"></a>SystemGpioConfig</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, systemconfig.o(i.SystemGpioConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 132 + Unknown Stack Size
<LI>Call Chain = SystemGpioConfig &rArr; LCD_FSMC_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConfig
<LI><a href="#[7d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_AutoCheck_Config
<LI><a href="#[7d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickConfig
<LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
<LI><a href="#[7aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanGpioPinConfig
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[777]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerConfig
<LI><a href="#[717]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightInitOS
<LI><a href="#[6b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FSMC_Config
<LI><a href="#[6a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GPIO_Config
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSConfig
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceChargeConfig
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetHardwareInit
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BluePinConfig
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADCConfig
<LI><a href="#[7d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TriggerSinglePinConfig
<LI><a href="#[735]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoPinConfig
<LI><a href="#[721]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedPinConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[420]"></a>SystemHardwareInit</STRONG> (Thumb, 338 bytes, Stack size 56 bytes, systemconfig.o(i.SystemHardwareInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = SystemHardwareInit &rArr; FileSystemTest &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetTypeAndDelay
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
<LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserConfigParam
<LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFactoryConfigParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Config
<LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackageKeyInit
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetMaxDelay
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareInit
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHardwareVersion
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[8c]"></a>SystemInit</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, system_stm32f4xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SystemInit &rArr; SetSysClock
</UL>
<BR>[Calls]<UL><LI><a href="#[7db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_WKUP_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_WKUP_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(.text)
</UL>
<P><STRONG><a name="[112]"></a>TEXT_Callback</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, text.o(i.TEXT_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = TEXT_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreePtr
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> text.o(i.TEXT_CreateUser)
</UL>
<P><STRONG><a name="[137]"></a>TEXT_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, text_createindirect.o(i.TEXT_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = TEXT_CreateIndirect &rArr; TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
</UL>
<BR>[Address Reference Count : 47]<UL><LI> custommessagebox.o(.constdata)
<LI> loadingdlg.o(.constdata)
<LI> blastdetdlg.o(.constdata)
<LI> helptooldettestdlg.o(.constdata)
<LI> bluehoststatusdlg.o(.constdata)
<LI> detslavebackupmenudlg.o(.constdata)
<LI> detanalystblastdlg.o(.constdata)
<LI> blastcanneldlg.o(.constdata)
<LI> regholeinsertinputdlg.o(.constdata)
<LI> detoutsideinputdlg.o(.constdata)
<LI> regdetoutsideinputbatchdlg.o(.constdata)
<LI> regdetfeatureinputforbarcodedlg.o(.constdata)
<LI> blastenterdlg.o(.constdata)
<LI> infomanagedlg.o(.constdata)
<LI> deviceinfodlg.o(.constdata)
<LI> sliderdlg.o(.constdata)
<LI> blastdelaydlg.o(.constdata)
<LI> devicestartdlg.o(.constdata)
<LI> detanalystdlg.o(.constdata)
<LI> wifipassworddlg.o(.constdata)
<LI> uploadblastrecorddlg.o(.constdata)
<LI> softwareupdatedlg.o(.constdata)
<LI> deviceselftestdlg.o(.constdata)
<LI> blastinfoverifydlg.o(.constdata)
<LI> blastmasterprocessdlg.o(.constdata)
<LI> detbluebackupmenudlg.o(.constdata)
<LI> slavestatusdlg.o(.constdata)
<LI> blastrecorderdetaileddlg.o(.constdata)
<LI> blastrecordermasterbriefdlg.o(.constdata)
<LI> delaysampleprocesswaitregdetdlg.o(.constdata)
<LI> delaysampleprocessreadyconfirmdlg.o(.constdata)
<LI> detinfoinsertrangeinputdlg.o(.constdata)
<LI> delaysampleprocessblastdetdlg.o(.constdata)
<LI> detblueinsertmenudlg.o(.constdata)
<LI> detinfoinsertstatusdlg.o(.constdata)
<LI> netinfomodifymenudlg.o(.constdata)
<LI> netinfomodifyrangeinputdlg.o(.constdata)
<LI> buserrorrestoredlg.o(.constdata)
<LI> detanalysthighvoltageinputdlg.o(.constdata)
<LI> detcodewritemenudlg.o(.constdata)
<LI> detcodewritestatusdlg.o(.constdata)
<LI> wificonnectdlg.o(.constdata)
<LI> loguploaddlg.o(.constdata)
<LI> colorsetdlg.o(.constdata)
<LI> filesystemformatdlg.o(.constdata)
<LI> regholeparaminputdlg.o(.constdata)
<LI> waitpoweroffdlg.o(.constdata)
</UL>
<P><STRONG><a name="[7dd]"></a>TEXT_CreateUser</STRONG> (Thumb, 150 bytes, Stack size 72 bytes, text.o(i.TEXT_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = TEXT_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateIndirect
</UL>

<P><STRONG><a name="[43f]"></a>TEXT_GetText</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, text_get.o(i.TEXT_GetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = TEXT_GetText &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
</UL>

<P><STRONG><a name="[41e]"></a>TEXT_SetBkColor</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, text_setbkcolor.o(i.TEXT_SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = TEXT_SetBkColor &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
</UL>

<P><STRONG><a name="[7bf]"></a>TEXT_SetDefaultFont</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, text_default.o(i.TEXT_SetDefaultFont))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[7c0]"></a>TEXT_SetDefaultTextColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, text_default.o(i.TEXT_SetDefaultTextColor))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[3fd]"></a>TEXT_SetFont</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text_setfont.o(i.TEXT_SetFont))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = TEXT_SetFont &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[371]"></a>TEXT_SetText</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, text_settext.o(i.TEXT_SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[36e]"></a>TEXT_SetTextAlign</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, text_settextalign.o(i.TEXT_SetTextAlign))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = TEXT_SetTextAlign &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[370]"></a>TEXT_SetTextColor</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, text_settextcolor.o(i.TEXT_SetTextColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = TEXT_SetTextColor &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[36f]"></a>TEXT_SetWrapMode</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, text_setwrapmode.o(i.TEXT_SetWrapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = TEXT_SetWrapMode &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[56]"></a>TIM2_IRQHandler</STRONG> (Thumb, 540 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = TIM2_IRQHandler &rArr; ExtiConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCounter
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetAutoreload
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ITConfig
<LI><a href="#[7e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetITStatus
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearFlag
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ToggleBits
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExtiConfig
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>TIM5_IRQHandler</STRONG> (Thumb, 286 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.TIM5_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = TIM5_IRQHandler &rArr; OSIntExit
</UL>
<BR>[Calls]<UL><LI><a href="#[7d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCompare2
<LI><a href="#[7e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetFlagStatus
<LI><a href="#[7d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CtrlPWMOutputs
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Cmd
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearITPendingBit
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.TIM8_UP_TIM13_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[4f4]"></a>TIM_ARRPreloadConfig</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ARRPreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[4fa]"></a>TIM_ClearFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[4ff]"></a>TIM_ClearITPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ClearITPendingBit))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetTimerConfig
</UL>

<P><STRONG><a name="[4f8]"></a>TIM_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetTimerConfig
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[7d4]"></a>TIM_CtrlPWMOutputs</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_CtrlPWMOutputs))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
</UL>

<P><STRONG><a name="[7e1]"></a>TIM_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
</UL>

<P><STRONG><a name="[7e0]"></a>TIM_GetITStatus</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f4xx_tim.o(i.TIM_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
</UL>

<P><STRONG><a name="[4f7]"></a>TIM_ITConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_ITConfig))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetTimerConfig
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[7d0]"></a>TIM_OC2Init</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, stm32f4xx_tim.o(i.TIM_OC2Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_OC2Init
</UL>
<BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
</UL>

<P><STRONG><a name="[7d1]"></a>TIM_OC2PreloadConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_OC2PreloadConfig))
<BR><BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
</UL>

<P><STRONG><a name="[4f6]"></a>TIM_SetAutoreload</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetAutoreload))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[7d3]"></a>TIM_SetCompare2</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetCompare2))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM5_IRQHandler
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
</UL>

<P><STRONG><a name="[4f5]"></a>TIM_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[4fe]"></a>TIM_TimeBaseInit</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f4xx_tim.o(i.TIM_TimeBaseInit))
<BR><BR>[Called By]<UL><LI><a href="#[7cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundConfig
<LI><a href="#[7d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputPice
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetTimerConfig
</UL>

<P><STRONG><a name="[2a9]"></a>TaskCreate</STRONG> (Thumb, 422 bytes, Stack size 48 bytes, taskutils.o(i.TaskCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = TaskCreate &rArr; PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIdlePublicStk
<LI><a href="#[779]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicStkUnlock
<LI><a href="#[778]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PublicStkLock
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStartBlastTask
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveEnterMainMenuDlg
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateSoudTask
</UL>

<P><STRONG><a name="[3a8]"></a>TaskIsExist</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, taskutils.o(i.TaskIsExist))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = TaskIsExist &rArr; OSTaskStkChk
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStartBlastTask
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIdlePublicStk
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[27d]"></a>TestDetComplete</STRONG> (Thumb, 352 bytes, Stack size 24 bytes, det_operart.o(i.TestDetComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = TestDetComplete &rArr; XA3_ReadStatus &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatus
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_GetDetStatus
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Bit
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgbarParam
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveErrCode
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsSingleCap
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConnectErrorCodeIdentify
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCurrentProgbar
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[27b]"></a>TestDetQuick</STRONG> (Thumb, 1792 bytes, Stack size 120 bytes, det_operart.o(i.TestDetQuick))
<BR><BR>[Stack]<UL><LI>Max Depth = 1328 + Unknown Stack Size
<LI>Call Chain = TestDetQuick &rArr; XA3_UnlockAndWriteEEPROM &rArr; XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Reset
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadSerl
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_PwdUnlock
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Mask
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgbarParam
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_UnlockAndWriteEEPROM
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveErrCode
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveUnregisteredDetBySimpleSignal
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetType
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCodeRulePass
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConnectErrorCodeIdentify
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCurrentProgbar
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[31c]"></a>TestInfoInit</STRONG> (Thumb, 164 bytes, Stack size 12 bytes, det_operart.o(i.TestInfoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TestInfoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[7e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSerlGroupIndex
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[7e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSerlGroup
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[67d]"></a>TimeStringToRtcStruct</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, rtc.o(i.TimeStringToRtcStruct))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TimeStringToRtcStruct &rArr; StringToDecValue
</UL>
<BR>[Calls]<UL><LI><a href="#[7e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StringToDecValue
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRtcTime
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeDifferSec
</UL>

<P><STRONG><a name="[7d8]"></a>TriggerSinglePinConfig</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, systemconfig.o(i.TriggerSinglePinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TriggerSinglePinConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[891]"></a>U16DataCMP</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, midfunction.o(i.U16DataCMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = U16DataCMP
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaiLinCurrentSteady
</UL>

<P><STRONG><a name="[64d]"></a>U16DataFallRank</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, midfunction.o(i.U16DataFallRank))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = U16DataFallRank
</UL>
<BR>[Calls]<UL><LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleMaxMinRegInside
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetADCValue
</UL>

<P><STRONG><a name="[4ec]"></a>U32DataCMP</STRONG> (Thumb, 52 bytes, Stack size 12 bytes, midfunction.o(i.U32DataCMP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = U32DataCMP
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
</UL>

<P><STRONG><a name="[6e]"></a>UART4_IRQHandler</STRONG> (Thumb, 230 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.UART4_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = UART4_IRQHandler &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[7e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueCurrentHostSlaveStatus
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>USART1_IRQHandler</STRONG> (Thumb, 198 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = USART1_IRQHandler &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[785]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRS485MasterSlaveState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>USART2_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = USART2_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>USART3_IRQHandler</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + Unknown Stack Size
<LI>Call Chain = USART3_IRQHandler &rArr; USART_GetITStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReceiveData
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetITStatus
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>USART6_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, stm32f4xx_it.o(i.USART6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52 + Unknown Stack Size
<LI>Call Chain = USART6_IRQHandler &rArr; GPSUartCallback &rArr; GPSReceiveDataDeal &rArr; GPS_BufferVerify &rArr; Asc_Hex
</UL>
<BR>[Calls]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntEnter
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSUartCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[359]"></a>USART_ClearITPendingBit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_usart.o(i.USART_ClearITPendingBit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
</UL>

<P><STRONG><a name="[35c]"></a>USART_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReceiveGPSInfoStop
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
</UL>

<P><STRONG><a name="[353]"></a>USART_GetFlagStatus</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendData
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanSendData
</UL>

<P><STRONG><a name="[54e]"></a>USART_GetITStatus</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, stm32f4xx_usart.o(i.USART_GetITStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_GetITStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSUartCallback
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[35a]"></a>USART_ITConfig</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, stm32f4xx_usart.o(i.USART_ITConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USART_ITConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
</UL>

<P><STRONG><a name="[358]"></a>USART_Init</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, stm32f4xx_usart.o(i.USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueUartConfig
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaudRate
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART6_Config
<LI><a href="#[7ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanUartConfig
</UL>

<P><STRONG><a name="[54f]"></a>USART_ReceiveData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSUartCallback
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART3_IRQHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART4_IRQHandler
</UL>

<P><STRONG><a name="[352]"></a>USART_SendData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_usart.o(i.USART_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485SendData
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendData
<LI><a href="#[6ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanSendData
</UL>

<P><STRONG><a name="[806]"></a>USBD_ClrCfg</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_ClrCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_ClrCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
</UL>

<P><STRONG><a name="[7eb]"></a>USBD_CtlContinueRx</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, usbd_ioreq.o(i.USBD_CtlContinueRx))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_CtlContinueRx &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataOutStage
</UL>

<P><STRONG><a name="[7ec]"></a>USBD_CtlContinueSendData</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, usbd_ioreq.o(i.USBD_CtlContinueSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_CtlContinueSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
</UL>

<P><STRONG><a name="[7ea]"></a>USBD_CtlError</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_CtlError))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USBD_CtlError &rArr; DCD_EP_Stall &rArr; USB_OTG_EPSetStall
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
</UL>
<BR>[Called By]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_Setup
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetStatus
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetConfig
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrFeature
</UL>

<P><STRONG><a name="[7ed]"></a>USBD_CtlReceiveStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbd_ioreq.o(i.USBD_CtlReceiveStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBD_CtlReceiveStatus &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
</UL>

<P><STRONG><a name="[7ee]"></a>USBD_CtlSendData</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, usbd_ioreq.o(i.USBD_CtlSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_Setup
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetStatus
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetConfig
</UL>

<P><STRONG><a name="[7e9]"></a>USBD_CtlSendStatus</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbd_ioreq.o(i.USBD_CtlSendStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataOutStage
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetFeature
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrFeature
</UL>

<P><STRONG><a name="[7f9]"></a>USBD_DeInit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_DeInit))
<BR><BR>[Called By]<UL><LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[7f3]"></a>USBD_GetString</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_GetString))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[7f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetLen
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SerialStrDescriptor
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_ProductStrDescriptor
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_ManufacturerStrDescriptor
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_InterfaceStrDescriptor
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_ConfigStrDescriptor
</UL>

<P><STRONG><a name="[1a]"></a>USBD_HID_ConfigStrDescriptor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_hid_desc.o(i.USBD_HID_ConfigStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_HID_ConfigStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_desc.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>USBD_HID_DeviceDescriptor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_hid_desc.o(i.USBD_HID_DeviceDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_desc.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>USBD_HID_InterfaceStrDescriptor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_hid_desc.o(i.USBD_HID_InterfaceStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_HID_InterfaceStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_desc.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>USBD_HID_LangIDStrDescriptor</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_hid_desc.o(i.USBD_HID_LangIDStrDescriptor))
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_desc.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>USBD_HID_ManufacturerStrDescriptor</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, usbd_hid_desc.o(i.USBD_HID_ManufacturerStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_HID_ManufacturerStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_desc.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>USBD_HID_ProductStrDescriptor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_hid_desc.o(i.USBD_HID_ProductStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_HID_ProductStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_desc.o(.data)
</UL>
<P><STRONG><a name="[7f6]"></a>USBD_HID_SendReport</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_hid_core.o(i.USBD_HID_SendReport))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USBD_HID_SendReport &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>
<BR>[Called By]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_tedata
</UL>

<P><STRONG><a name="[19]"></a>USBD_HID_SerialStrDescriptor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_hid_desc.o(i.USBD_HID_SerialStrDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USBD_HID_SerialStrDescriptor &rArr; USBD_GetString
</UL>
<BR>[Calls]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_desc.o(.data)
</UL>
<P><STRONG><a name="[7f7]"></a>USBD_Init</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, usbd_core.o(i.USBD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USBD_Init &rArr; DCD_Init &rArr; USB_OTG_CoreInitDev &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_Init
<LI><a href="#[7fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_EnableInterrupt
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
<LI><a href="#[7f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_init
</UL>

<P><STRONG><a name="[769]"></a>USBD_OTG_ISR_Handler</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, usb_dcd_int.o(i.USBD_OTG_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = USBD_OTG_ISR_Handler &rArr; DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadCoreItr
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsDeviceMode
<LI><a href="#[801]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_IsoOUTIncomplete_ISR
<LI><a href="#[800]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_IsoINIncomplete_ISR
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
<LI><a href="#[7fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUSBSuspend_ISR
<LI><a href="#[7ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleSof_ISR
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleRxStatusQueueLevel_ISR
<LI><a href="#[7fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleResume_ISR
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleEnumDone_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[808]"></a>USBD_ParseSetupRequest</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, usbd_req.o(i.USBD_ParseSetupRequest))
<BR><BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[805]"></a>USBD_SetCfg</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_SetCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBD_SetCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
</UL>

<P><STRONG><a name="[809]"></a>USBD_StdDevReq</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_StdDevReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[807]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetFeature
<LI><a href="#[804]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetConfig
<LI><a href="#[802]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetAddress
<LI><a href="#[7f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetStatus
<LI><a href="#[7f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetDescriptor
<LI><a href="#[7f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetConfig
<LI><a href="#[7e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrFeature
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[80b]"></a>USBD_StdEPReq</STRONG> (Thumb, 344 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_StdEPReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USBD_StdEPReq &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_ClrStall
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[80a]"></a>USBD_StdItfReq</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_StdItfReq))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_StdItfReq &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetupStage
</UL>

<P><STRONG><a name="[1e]"></a>USBD_USR_DeviceConfigured</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbd_usr.o(i.USBD_USR_DeviceConfigured))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = USBD_USR_DeviceConfigured &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>USBD_USR_DeviceConnected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceConnected))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>USBD_USR_DeviceDisconnected</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceDisconnected))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>USBD_USR_DeviceReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceReset))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>USBD_USR_DeviceResumed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceResumed))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>USBD_USR_DeviceSuspended</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_DeviceSuspended))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>USBD_USR_Init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbd_usr.o(i.USBD_USR_Init))
<BR>[Address Reference Count : 1]<UL><LI> usbd_usr.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>USBH_Connected</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_Connected))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[80c]"></a>USBH_DeInit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, usbh_core.o(i.USBH_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USBH_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[80d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_Free_Channel
</UL>
<BR>[Called By]<UL><LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_host_exit
</UL>

<P><STRONG><a name="[14]"></a>USBH_Disconnected</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_Disconnected))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[80d]"></a>USBH_Free_Channel</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, usbh_hcs.o(i.USBH_Free_Channel))
<BR><BR>[Called By]<UL><LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
</UL>

<P><STRONG><a name="[768]"></a>USBH_OTG_ISR_Handler</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USBH_OTG_ISR_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBH_OTG_ISR_Handler &rArr; USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
<LI><a href="#[7fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadCoreItr
<LI><a href="#[80e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_sof_ISR
<LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
<LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
<LI><a href="#[815]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
<LI><a href="#[814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_Disconnect_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[12]"></a>USBH_SOF</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, usbh_core.o(i.USBH_SOF))
<BR>[Address Reference Count : 1]<UL><LI> usbh_core.o(.data)
</UL>
<P><STRONG><a name="[7d6]"></a>USB_AutoCheck_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, usb.o(i.USB_AutoCheck_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_AutoCheck_Config &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[7fa]"></a>USB_OTG_BSP_EnableInterrupt</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, usb_bsp.o(i.USB_OTG_BSP_EnableInterrupt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_BSP_EnableInterrupt &rArr; NVIC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[783]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_PriorityGroupConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[7f8]"></a>USB_OTG_BSP_Init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, usb_bsp.o(i.USB_OTG_BSP_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_OTG_BSP_Init &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[816]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB2PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
</UL>

<P><STRONG><a name="[817]"></a>USB_OTG_BSP_mDelay</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usb_bsp.o(i.USB_OTG_BSP_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_BSP_mDelay &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_SetCurrentMode
<LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>

<P><STRONG><a name="[818]"></a>USB_OTG_BSP_uDelay</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_bsp.o(i.USB_OTG_BSP_uDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>

<P><STRONG><a name="[4d2]"></a>USB_OTG_CoreInit</STRONG> (Thumb, 294 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_CoreInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_CoreInit &rArr; USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[819]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreReset
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[4d4]"></a>USB_OTG_CoreInitDev</STRONG> (Thumb, 522 bytes, Stack size 48 bytes, usb_core.o(i.USB_OTG_CoreInitDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = USB_OTG_CoreInitDev &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[81a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitDevSpeed
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
<LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableDevInt
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[4d1]"></a>USB_OTG_DisableGlobalInt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_DisableGlobalInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_DisableGlobalInt
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[4c2]"></a>USB_OTG_EP0Activate</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EP0Activate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_EP0Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleEnumDone_ISR
</UL>

<P><STRONG><a name="[4bc]"></a>USB_OTG_EP0StartXfer</STRONG> (Thumb, 342 bytes, Stack size 32 bytes, usb_core.o(i.USB_OTG_EP0StartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_EP0StartXfer
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>

<P><STRONG><a name="[4c7]"></a>USB_OTG_EP0_OutStart</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EP0_OutStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_EP0_OutStart
</UL>
<BR>[Called By]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[4ba]"></a>USB_OTG_EPActivate</STRONG> (Thumb, 152 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_EPActivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_EPActivate
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Open
</UL>

<P><STRONG><a name="[4b5]"></a>USB_OTG_EPClearStall</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EPClearStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_EPClearStall
</UL>
<BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_ClrStall
</UL>

<P><STRONG><a name="[4b3]"></a>USB_OTG_EPDeactivate</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_EPDeactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_EPDeactivate
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Close
</UL>

<P><STRONG><a name="[4bf]"></a>USB_OTG_EPSetStall</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EPSetStall))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_EPSetStall
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
</UL>

<P><STRONG><a name="[4bd]"></a>USB_OTG_EPStartXfer</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, usb_core.o(i.USB_OTG_EPStartXfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Tx
</UL>

<P><STRONG><a name="[81b]"></a>USB_OTG_EnableDevInt</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_EnableDevInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_EnableDevInt &rArr; USB_OTG_EnableCommonInt
</UL>
<BR>[Calls]<UL><LI><a href="#[81c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableCommonInt
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
</UL>

<P><STRONG><a name="[4d5]"></a>USB_OTG_EnableGlobalInt</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_EnableGlobalInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EnableGlobalInt
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[4b8]"></a>USB_OTG_FlushRxFifo</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_FlushRxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_FlushRxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_StopHost
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Flush
</UL>

<P><STRONG><a name="[4b7]"></a>USB_OTG_FlushTxFifo</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_FlushTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_StopHost
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Flush
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleUsbReset_ISR
</UL>

<P><STRONG><a name="[4c3]"></a>USB_OTG_GetDeviceSpeed</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_GetDeviceSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_GetDeviceSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleEnumDone_ISR
</UL>

<P><STRONG><a name="[81d]"></a>USB_OTG_GetMode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_GetMode))
<BR><BR>[Called By]<UL><LI><a href="#[767]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsHostMode
<LI><a href="#[7fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_IsDeviceMode
</UL>

<P><STRONG><a name="[825]"></a>USB_OTG_HC_DoPing</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_HC_DoPing))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_HC_DoPing
</UL>
<BR>[Called By]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
</UL>

<P><STRONG><a name="[824]"></a>USB_OTG_HC_Halt</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, usb_core.o(i.USB_OTG_HC_Halt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
</UL>

<P><STRONG><a name="[81a]"></a>USB_OTG_InitDevSpeed</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_InitDevSpeed))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_InitDevSpeed
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInitDev
</UL>

<P><STRONG><a name="[826]"></a>USB_OTG_InitFSLSPClkSel</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_InitFSLSPClkSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_InitFSLSPClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
</UL>

<P><STRONG><a name="[7fb]"></a>USB_OTG_IsDeviceMode</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, usb_core.o(i.USB_OTG_IsDeviceMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_OTG_IsDeviceMode
</UL>
<BR>[Calls]<UL><LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[767]"></a>USB_OTG_IsHostMode</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, usb_core.o(i.USB_OTG_IsHostMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = USB_OTG_IsHostMode
</UL>
<BR>[Calls]<UL><LI><a href="#[81d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_IRQHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_IRQHandler
</UL>

<P><STRONG><a name="[7fc]"></a>USB_OTG_ReadCoreItr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadCoreItr))
<BR><BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
<LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[4c5]"></a>USB_OTG_ReadDevAllInEPItr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevAllInEPItr))
<BR><BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[4ca]"></a>USB_OTG_ReadDevAllOutEp_itr</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevAllOutEp_itr))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
</UL>

<P><STRONG><a name="[4cb]"></a>USB_OTG_ReadDevOutEP_itr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadDevOutEP_itr))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleOutEP_ISR
</UL>

<P><STRONG><a name="[81f]"></a>USB_OTG_ReadHPRT0</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_ReadHPRT0))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_ReadHPRT0
</UL>
<BR>[Called By]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
</UL>

<P><STRONG><a name="[821]"></a>USB_OTG_ReadHostAllChannels_intr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, usb_core.o(i.USB_OTG_ReadHostAllChannels_intr))
<BR><BR>[Called By]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[4cd]"></a>USB_OTG_ReadPacket</STRONG> (Thumb, 40 bytes, Stack size 20 bytes, usb_core.o(i.USB_OTG_ReadPacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[80f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_rx_qlvl_ISR
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleRxStatusQueueLevel_ISR
</UL>

<P><STRONG><a name="[81e]"></a>USB_OTG_ResetPort</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_ResetPort))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
<LI><a href="#[81f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHPRT0
</UL>
<BR>[Called By]<UL><LI><a href="#[813]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_port_ISR
</UL>

<P><STRONG><a name="[4d0]"></a>USB_OTG_SelectCore</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_SelectCore))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_SelectCore
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[4d3]"></a>USB_OTG_SetCurrentMode</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_SetCurrentMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_OTG_SetCurrentMode &rArr; USB_OTG_BSP_mDelay &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[817]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_Init
</UL>

<P><STRONG><a name="[820]"></a>USB_OTG_StopHost</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, usb_core.o(i.USB_OTG_StopHost))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_OTG_StopHost &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushRxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_host_exit
</UL>

<P><STRONG><a name="[76a]"></a>USB_OTG_UngateClock</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, usb_core.o(i.USB_OTG_UngateClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_UngateClock
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_HS_WKUP_IRQHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTG_FS_WKUP_IRQHandler
</UL>

<P><STRONG><a name="[4d6]"></a>USB_OTG_WritePacket</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_WritePacket))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EPStartXfer
<LI><a href="#[811]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_ptxfempty_ISR
<LI><a href="#[810]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_nptxfempty_ISR
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_WriteEmptyTxFifo
</UL>

<P><STRONG><a name="[38d]"></a>UTF8StringToGBK</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, ansitounicode.o(i.UTF8StringToGBK))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UTF8StringToGBK &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[827]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Utf8ToUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[52c]"></a>UnicodeToUtf8</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ansitounicode.o(i.UnicodeToUtf8))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GBKStringToUTF8
</UL>

<P><STRONG><a name="[292]"></a>Unpack</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, package.o(i.Unpack))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Unpack &rArr; aes_decrypt
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Slip_Unpack
<LI><a href="#[828]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerCurrentTime
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRS485Task
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveStartOperate
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveSaveDetInfo
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveRtc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetInfo
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDetHoleNumber
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveDeleteDetInfo
<LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVoltageOrCurrent
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveVerison
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveTestInfo
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveID
<LI><a href="#[67c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetIndexInfo
<LI><a href="#[67b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveDetHoleNumber
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBusVoltageCtrlState
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastResult
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastDetTestResult
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveBlastChargeResult
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveAddr
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileData
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleGeneralTransferData
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveHoleNumberData
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlueSlaveDetData
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlueSlaveDetAndHoleData
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveHoleNumberData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberSpecifiedHoleRange
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetData
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetDataSpecifiedHoleRange
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteBlueSlaveDetData
</UL>

<P><STRONG><a name="[29f]"></a>UpdateBlasterRecordUploadState</STRONG> (Thumb, 488 bytes, Stack size 72 bytes, recorder.o(i.UpdateBlasterRecordUploadState))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = UpdateBlasterRecordUploadState &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[514]"></a>UpdateProgbar</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, display.o(i.UpdateProgbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = UpdateProgbar &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FillCurrentProgbar
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataSecondPackFromRecorder
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataFirstPackFromRecorder
<LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastDataDetInfoFromRecorder
</UL>

<P><STRONG><a name="[29d]"></a>UpdateRtcTime</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, rtc.o(i.UpdateRtcTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = UpdateRtcTime &rArr; RTC_Write_Time &rArr; RTC_SetTime &rArr; RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Write_Time
<LI><a href="#[67d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeStringToRtcStruct
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppSafeMonitorTask
</UL>

<P><STRONG><a name="[37f]"></a>UpdateTextPointCount</STRONG> (Thumb, 150 bytes, Stack size 80 bytes, guicustomutils.o(i.UpdateTextPointCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = UpdateTextPointCount &rArr; TEXT_SetText &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[35]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f40_41xxx.o(RESET)
</UL>
<P><STRONG><a name="[827]"></a>Utf8ToUnicode</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, ansitounicode.o(i.Utf8ToUnicode))
<BR><BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
</UL>

<P><STRONG><a name="[459]"></a>ValidateDetType</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, midfunction.o(i.ValidateDetType))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ValidateDetType &rArr; CheckDetType &rArr; GetDetType
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetType
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[45a]"></a>ValidateDetTypeAndDelay</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, midfunction.o(i.ValidateDetTypeAndDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016 + Unknown Stack Size
<LI>Call Chain = ValidateDetTypeAndDelay &rArr; DeleteAllDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllDetInfo
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetType
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2ac]"></a>VoltageOutputAdjust</STRONG> (Thumb, 218 bytes, Stack size 8 bytes, dac.o(i.VoltageOutputAdjust))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = VoltageOutputAdjust &rArr; GetChannelxVoltage &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStatusIsIdle
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusCurrentInRange
<LI><a href="#[829]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getCurrentHvDacValue
<LI><a href="#[714]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LVVoltageOutputAdjust
<LI><a href="#[698]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HVVoltageOutputAdjust
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
</UL>

<P><STRONG><a name="[2ec]"></a>WIDGET_AndState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_AndState))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[1a9]"></a>WIDGET_EFFECT_3D_DrawUp</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i.WIDGET_EFFECT_3D_DrawUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WIDGET_EFFECT_3D_DrawUp &rArr; _DrawUpRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[68c]"></a>WIDGET_GetDefaultEffect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET_GetDefaultEffect))
<BR><BR>[Called By]<UL><LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
</UL>

<P><STRONG><a name="[2db]"></a>WIDGET_HandleActive</STRONG> (Thumb, 286 bytes, Stack size 32 bytes, widget.o(i.WIDGET_HandleActive))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[2eb]"></a>WIDGET_OrState</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, widget.o(i.WIDGET_OrState))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetPressed
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[76e]"></a>WIDGET_SetEffect</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, widget_seteffect.o(i.WIDGET_SetEffect))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetEffect &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[82c]"></a>WIDGET_SetState</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, widget.o(i.WIDGET_SetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[7a3]"></a>WIDGET_SetWidth</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, widget_setwidth.o(i.WIDGET_SetWidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = WIDGET_SetWidth &rArr; WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[6f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetWidth
</UL>

<P><STRONG><a name="[830]"></a>WIDGET__DrawFocusRect</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, widget.o(i.WIDGET__DrawFocusRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawFocusRect &rArr; GUI_DrawFocusRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[832]"></a>WIDGET__DrawTriangle</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, widget.o(i.WIDGET__DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[833]"></a>WIDGET__DrawVLine</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, widget.o(i.WIDGET__DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WIDGET__DrawVLine &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[901]"></a>WIDGET__EFFECT_DrawDown</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, widget.o(i.WIDGET__EFFECT_DrawDown))
<BR><BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[834]"></a>WIDGET__EFFECT_DrawDownRect</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WIDGET__EFFECT_DrawDownRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[836]"></a>WIDGET__EFFECT_DrawUpRect</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, widget.o(i.WIDGET__EFFECT_DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WIDGET__EFFECT_DrawUpRect &rArr; _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
<LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[837]"></a>WIDGET__FillRectEx</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, widget.o(i.WIDGET__FillRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WIDGET__FillRectEx &rArr; GUI_FillRectEx &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRectEx
<LI><a href="#[831]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[838]"></a>WIDGET__GetClientRect</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetClientRect &rArr; WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[82d]"></a>WIDGET__GetInsideRect</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WIDGET__GetInsideRect
</UL>
<BR>[Calls]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[83a]"></a>WIDGET__GetWindowSizeX</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, widget.o(i.WIDGET__GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WIDGET__GetWindowSizeX &rArr; WM_GetWindowSizeX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[8bb]"></a>WIDGET__GetXSize</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, widget.o(i.WIDGET__GetXSize))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[8bc]"></a>WIDGET__GetYSize</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, widget.o(i.WIDGET__GetYSize))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[2e8]"></a>WIDGET__Init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, widget.o(i.WIDGET__Init))
<BR><BR>[Called By]<UL><LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[831]"></a>WIDGET__RotateRect90</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, widget.o(i.WIDGET__RotateRect90))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WIDGET__RotateRect90
</UL>
<BR>[Called By]<UL><LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>

<P><STRONG><a name="[83b]"></a>WIDGET__SetScrollState</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, widget.o(i.WIDGET__SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollState
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[11f]"></a>WINDOW_Callback</STRONG> (Thumb, 260 bytes, Stack size 32 bytes, window.o(i.WINDOW_Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = WINDOW_Callback &rArr; WIDGET_HandleActive &rArr; WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window.o(i.WINDOW_CreateUser)
</UL>
<P><STRONG><a name="[135]"></a>WINDOW_CreateIndirect</STRONG> (Thumb, 60 bytes, Stack size 48 bytes, window.o(i.WINDOW_CreateIndirect))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = WINDOW_CreateIndirect &rArr; WINDOW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
</UL>
<BR>[Address Reference Count : 97]<UL><LI> custommessagebox.o(.constdata)
<LI> loadingdlg.o(.constdata)
<LI> netinfodlg.o(.constdata)
<LI> waitlincurrentreadydlg.o(.constdata)
<LI> nettestreportdlg.o(.constdata)
<LI> nettesterrorlistviewdlg.o(.constdata)
<LI> deletedetmenudlg.o(.constdata)
<LI> delaymodifysingledlg.o(.constdata)
<LI> blastrecorderlistviewdlg.o(.constdata)
<LI> systemsetmenudlg.o(.constdata)
<LI> blastdetdlg.o(.constdata)
<LI> helptooldettestdlg.o(.constdata)
<LI> netparamlistviewdlg.o(.constdata)
<LI> devicenamesetdlg.o(.constdata)
<LI> slavenumbersetdlg.o(.constdata)
<LI> bluehoststatusdlg.o(.constdata)
<LI> detslavebackupmenudlg.o(.constdata)
<LI> blastrecorderdetinfolistdlg.o(.constdata)
<LI> blastrecorderslaveinfolistdlg.o(.constdata)
<LI> delaysampleprocessdelayinputdlg.o(.constdata)
<LI> detanalystblastdlg.o(.constdata)
<LI> blastcanneldlg.o(.constdata)
<LI> regholeinsertinputdlg.o(.constdata)
<LI> detoutsideinputdlg.o(.constdata)
<LI> toptitledlg.o(.constdata)
<LI> regdetoutsideinputbatchdlg.o(.constdata)
<LI> regdetfeatureinputforbarcodedlg.o(.constdata)
<LI> slaveaccrediterrorfordldlg.o(.constdata)
<LI> mainmenudlg.o(.constdata)
<LI> mainmenumoredlg.o(.constdata)
<LI> blastenterdlg.o(.constdata)
<LI> netparammodifydlg.o(.constdata)
<LI> blasttestreportdlg.o(.constdata)
<LI> slaveinfolistviewdlg.o(.constdata)
<LI> deletedetinputholeinfodlg.o(.constdata)
<LI> delaymodifybatchdlg.o(.constdata)
<LI> infomanagedlg.o(.constdata)
<LI> deviceinfodlg.o(.constdata)
<LI> blastprocessdlg.o(.constdata)
<LI> sliderdlg.o(.constdata)
<LI> blastdelaydlg.o(.constdata)
<LI> poweroffdlg.o(.constdata)
<LI> devicestartdlg.o(.constdata)
<LI> dkeypasswdmodifydlg.o(.constdata)
<LI> helptoolmenudlg.o(.constdata)
<LI> detanalystdlg.o(.constdata)
<LI> wifinetinfodlg.o(.constdata)
<LI> wifinetsetdlg.o(.constdata)
<LI> wifinetinitdlg.o(.constdata)
<LI> devicechargestartdlg.o(.constdata)
<LI> wifipassworddlg.o(.constdata)
<LI> uploadblastrecorddlg.o(.constdata)
<LI> softwareupdatedlg.o(.constdata)
<LI> deviceselftestdlg.o(.constdata)
<LI> blastinfoverifydlg.o(.constdata)
<LI> deviceusagessetdlg.o(.constdata)
<LI> blastmasterprocessdlg.o(.constdata)
<LI> remoteblastslavestatedlg.o(.constdata)
<LI> detbluebackupmenudlg.o(.constdata)
<LI> detbackupbluetypeseldlg.o(.constdata)
<LI> slavestatusdlg.o(.constdata)
<LI> blastrecorderdetaileddlg.o(.constdata)
<LI> waitreglistviewdlg.o(.constdata)
<LI> progbarquickdlg.o(.constdata)
<LI> progbarchargedlg.o(.constdata)
<LI> blastrecordermasterbriefdlg.o(.constdata)
<LI> progbarblastdlg.o(.constdata)
<LI> progbarcompletedlg.o(.constdata)
<LI> progbarmaskregdetdlg.o(.constdata)
<LI> progbarquickbeforeblastdlg.o(.constdata)
<LI> delaysampleprocessdelayseldlg.o(.constdata)
<LI> delaysampleprocesswaitregdetdlg.o(.constdata)
<LI> detaccrediterrorfordldlg.o(.constdata)
<LI> delaysampleprocessreadyconfirmdlg.o(.constdata)
<LI> detbackupoperatetypeseldlg.o(.constdata)
<LI> detinfoinsertrangeinputdlg.o(.constdata)
<LI> delaysampleprocessblastdetdlg.o(.constdata)
<LI> detbackupoperatebluetypeseldlg.o(.constdata)
<LI> detblueinsertmenudlg.o(.constdata)
<LI> detinfoinsertstatusdlg.o(.constdata)
<LI> netinfomodifymenudlg.o(.constdata)
<LI> netinfomodifyrangeinputdlg.o(.constdata)
<LI> buserrorrestoredlg.o(.constdata)
<LI> detanalysthighvoltageinputdlg.o(.constdata)
<LI> detcodewritemenudlg.o(.constdata)
<LI> detcodewritestatusdlg.o(.constdata)
<LI> wificonnectdlg.o(.constdata)
<LI> logrecorderlistviewdlg.o(.constdata)
<LI> loguploaddlg.o(.constdata)
<LI> colorsetdlg.o(.constdata)
<LI> filesystemformatdlg.o(.constdata)
<LI> regholeparaminputdlg.o(.constdata)
<LI> regparammenudlg.o(.constdata)
<LI> dettypesetdlg.o(.constdata)
<LI> blastterminationfromappdlg.o(.constdata)
<LI> waitpoweroffdlg.o(.constdata)
<LI> mastertimesharesetdlg.o(.constdata)
</UL>
<P><STRONG><a name="[840]"></a>WINDOW_CreateUser</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, window.o(i.WINDOW_CreateUser))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = WINDOW_CreateUser &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__Init
</UL>
<BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateIndirect
</UL>

<P><STRONG><a name="[7bb]"></a>WINDOW_SetDefaultBkColor</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, window_default.o(i.WINDOW_SetDefaultBkColor))
<BR><BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
</UL>

<P><STRONG><a name="[5e3]"></a>WM_Activate</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm.o(i.WM_Activate))
<BR><BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLCD
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
</UL>

<P><STRONG><a name="[841]"></a>WM_BringToBottom</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, wm_bringtobottom.o(i.WM_BringToBottom))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = WM_BringToBottom &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[82b]"></a>WM_BringToTop</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm_bringtotop.o(i.WM_BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = WM_BringToTop &rArr; _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[846]"></a>WM_CheckScrollBounds</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm_checkscrollpos.o(i.WM_CheckScrollBounds))
<BR><BR>[Called By]<UL><LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>

<P><STRONG><a name="[845]"></a>WM_CheckScrollPos</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_checkscrollpos.o(i.WM_CheckScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM_CheckScrollPos
</UL>
<BR>[Calls]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[7de]"></a>WM_ClrHasTrans</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_ClrHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = WM_ClrHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
</UL>

<P><STRONG><a name="[374]"></a>WM_CreateTimer</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, wm_timer.o(i.WM_CreateTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WM_CreateTimer &rArr; GUI_TIMER_Create &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetTime
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2e7]"></a>WM_CreateWindowAsChild</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, wm.o(i.WM_CreateWindowAsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
<LI>Call Chain = WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
</UL>
<BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_CreateUser
<LI><a href="#[840]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_CreateUser
<LI><a href="#[7dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_CreateUser
<LI><a href="#[7a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_CreateUser
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
<LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[5f7]"></a>WM_Deactivate</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i.WM_Deactivate))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_Deactivate &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
</UL>
<BR>[Called By]<UL><LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>

<P><STRONG><a name="[2e3]"></a>WM_DefaultProc</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, wm.o(i.WM_DefaultProc))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeskCallback
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_Callback
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[37e]"></a>WM_DeleteTimer</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_timer.o(i.WM_DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveTimerHandleAndDeleteById
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>

<P><STRONG><a name="[593]"></a>WM_DeleteWindow</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, wm.o(i.WM_DeleteWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = WM_DeleteWindow &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[84d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteAssocTimer
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveFromLinList
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[6dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_CreateUser
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[84e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteAllChildren
</UL>

<P><STRONG><a name="[5bf]"></a>WM_Exec</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, wm.o(i.WM_Exec))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[851]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Exec1Input
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>
<BR>[Called By]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Exec1
</UL>

<P><STRONG><a name="[853]"></a>WM_ForEachDesc</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_foreachdesc.o(i.WM_ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_ForEachDesc &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[8f1]"></a>WM_GetActiveWindow</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm.o(i.WM_GetActiveWindow))
<BR><BR>[Called By]<UL><LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>

<P><STRONG><a name="[77f]"></a>WM_GetBkColor</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getbkcolor.o(i.WM_GetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_GetBkColor &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[77e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_CreateUser
</UL>

<P><STRONG><a name="[5cb]"></a>WM_GetClientRect</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, wm_getclientrect.o(i.WM_GetClientRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRect &rArr; WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>

<P><STRONG><a name="[68f]"></a>WM_GetClientRectEx</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM_GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetClientRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[703]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_CreateUser
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>

<P><STRONG><a name="[373]"></a>WM_GetClientWindow</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, wm_getclientwindow.o(i.WM_GetClientWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_GetClientWindow &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[2c8]"></a>WM_GetDesktopWindow</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, wm_getdesktopwindow.o(i.WM_GetDesktopWindow))
<BR><BR>[Called By]<UL><LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTopTitleDlg
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceStartDlg
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceChargeStartDlg
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemoteBlastSlaveStateDlg
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarChargeDlg
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAccreditErrorForDLDlg
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastEnterDlg
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetMenuDlg
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSoftwareUpdateDlg
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarMaskRegDetDlg
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuMoreDlg
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoManageDlg
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastInfoVerifyDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitPowerOffDlg
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPowerOffDlg
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWindowAndParent
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetSetDlg
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogRecorderListViewDlg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolDetTestDlg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceSelfTestDlg
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateTypeSelDlg
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystDlg
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyPasswdModifyDlg
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFileSystemFormatDlg
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSliderDlg
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveNumberSetDlg
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMasterTimeShareSetDlg
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceUsagesSetDlg
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceNameSetDlg
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetTypeSetDlg
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowColorSetDlg
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUploadBlastRecordDlg
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderMasterBriefDlg
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetailedDlg
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceInfoDlg
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetInputHoleInfoDlg
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessBlastDetDlg
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDetDlg
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDelayDlg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastProcessDlg
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamListViewDlg
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamModifyDlg
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteStatusDlg
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastTestReportDlg
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarQuickDlg
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarQuickBeforeBlastDlg
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarCompleteDlg
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarBlastDlg
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyMenuDlg
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifySingleDlg
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifyBatchDlg
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderSlaveInfoListDlg
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetInfoListDlg
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveStatusDlg
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetSlaveBackupMenuDlg
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueInsertMenuDlg
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueBackupMenuDlg
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveAccreditErrorForDLDlg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastMasterProcessDlg
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateBlueTypeSelDlg
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiConnectDlg
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInitDlg
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiPasswordDlg
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInfoDlg
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystHighVoltageInputDlg
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetOutsideInputDlg
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystBlastDlg
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyRangeInputDlg
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInfoInsertStatusDlg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInsertRangeInputDlg
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessReadyConfirmDlg
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessWaitRegDetDlg
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelayInputDlg
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelaySelDlg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleParamInputDlg
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleInsertInputDlg
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegDetOutsideInputBatchDlg
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegDetFeatureInputForBarcodeDlg
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogUploadDlg
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitContext
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[36d]"></a>WM_GetDialogItem</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_getdialogitem.o(i.WM_GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetListViewSelcet
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[856]"></a>WM_GetFirstChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getfirstchild.o(i.WM_GetFirstChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetFirstChild &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[857]"></a>WM_GetFlags</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getflags.o(i.WM_GetFlags))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetFlags &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>

<P><STRONG><a name="[591]"></a>WM_GetFocussedWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_getfocussedwindow.o(i.WM_GetFocussedWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetFocussedWindow &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
</UL>

<P><STRONG><a name="[858]"></a>WM_GetHasTrans</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_GetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetHasTrans &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[7dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[859]"></a>WM_GetId</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, wm_getid.o(i.WM_GetId))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_GetId &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[6e8]"></a>WM_GetInsideRect</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm_getinsiderect.o(i.WM_GetInsideRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRect &rArr; WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
</UL>

<P><STRONG><a name="[68b]"></a>WM_GetInsideRectEx</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_getinsiderect.o(i.WM_GetInsideRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectEx &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRect
<LI><a href="#[68a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_CreateUser
<LI><a href="#[7a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateUser
</UL>

<P><STRONG><a name="[6e9]"></a>WM_GetInsideRectExScrollbar</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, wm_getinsiderectexscrollbar.o(i.WM_GetInsideRectExScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
<LI><a href="#[857]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFlags
</UL>
<BR>[Called By]<UL><LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateTextArea
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[6ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSelFromPos
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_OwnerDraw
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>

<P><STRONG><a name="[377]"></a>WM_GetParent</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_getparent.o(i.WM_GetParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_GetParent &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWindowAndParent
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[7a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollPartner
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>

<P><STRONG><a name="[7a4]"></a>WM_GetScrollPartner</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm_getscrollpartner.o(i.WM_GetScrollPartner))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
</UL>
<BR>[Called By]<UL><LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[6d5]"></a>WM_GetScrollState</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_getscrollstate.o(i.WM_GetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[6d6]"></a>WM_GetScrollbarH</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getscrollbar.o(i.WM_GetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[6d4]"></a>WM_GetScrollbarV</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getscrollbar.o(i.WM_GetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[37a]"></a>WM_GetTimerId</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_timer.o(i.WM_GetTimerId))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetTimerId &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTimerHandleToBuffer
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveTimerHandleAndDeleteById
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[67e]"></a>WM_GetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_userdata.o(i.WM_GetUserData))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM_GetUserData &rArr; WM__GetUserDataEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
</UL>

<P><STRONG><a name="[85a]"></a>WM_GetWindowRectEx</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm_getwindowrect.o(i.WM_GetWindowRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowRectEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcPositions
</UL>

<P><STRONG><a name="[7cc]"></a>WM_GetWindowSizeX</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
</UL>

<P><STRONG><a name="[418]"></a>WM_GetWindowSizeY</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, wm_getwindowsize.o(i.WM_GetWindowSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_GetWindowSizeY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[85d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDefaultWin
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[685]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemIndex
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
</UL>

<P><STRONG><a name="[900]"></a>WM_HasFocus</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm_hasfocus.o(i.WM_HasFocus))
<BR><BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[372]"></a>WM_HideWindow</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_hide.o(i.WM_HideWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WM_HideWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[5dc]"></a>WM_Init</STRONG> (Thumb, 184 bytes, Stack size 56 bytes, wm.o(i.WM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = WM_Init &rArr; WM_CreateWindowAsChild &rArr; WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[85e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__AddCriticalHandle
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[6f0]"></a>WM_InvalidateRect</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, wm.o(i.WM_InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateTextArea
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[705]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRowAndBelow
<LI><a href="#[6fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateRow
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
</UL>

<P><STRONG><a name="[2ee]"></a>WM_InvalidateWindow</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM_InvalidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCallback
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate
<LI><a href="#[6f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetColor
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[684]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_AddItem
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[82c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetState
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbInvalidateOne
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[864]"></a>WM_InvalidateWindowAndDescs</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, wm_show.o(i.WM_InvalidateWindowAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>

<P><STRONG><a name="[865]"></a>WM_InvalidateWindowAndDescsEx</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, wm.o(i.WM_InvalidateWindowAndDescsEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_InvalidateWindowAndDescsEx &rArr;  WM_InvalidateWindowAndDescsEx (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[867]"></a>WM_IsFocussable</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, wm_isfocussable.o(i.WM_IsFocussable))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_IsFocussable &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[376]"></a>WM_IsVisible</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm_isvisible.o(i.WM_IsVisible))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_IsVisible &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[28b]"></a>WM_IsWindow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm_iswindow.o(i.WM_IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WM_IsWindow &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[84b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgbar
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgbarParam
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTopTitleDlg
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CustomSendMessage
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppKeyScanTask
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLoadingDlg
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseLoadingDlg
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWindowAndParent
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[2c4]"></a>WM_MULTIBUF_Enable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, wm_multibuf.o(i.WM_MULTIBUF_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[7ce]"></a>WM_MakeModal</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, wm_makemodal.o(i.WM_MakeModal))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = WM_MakeModal &rArr; WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
<LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
</UL>

<P><STRONG><a name="[41a]"></a>WM_MoveTo</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = WM_MoveTo &rArr; WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3cc]"></a>WM_MoveWindow</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_move.o(i.WM_MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
</UL>

<P><STRONG><a name="[687]"></a>WM_NotifyParent</STRONG> (Thumb, 16 bytes, Stack size 24 bytes, wm_notifyparent.o(i.WM_NotifyParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WM_NotifyParent &rArr; WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
<LI><a href="#[7a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Inc
<LI><a href="#[7a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Dec
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[781]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO__SetValue
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[606]"></a>WM_OnKey</STRONG> (Thumb, 56 bytes, Stack size 40 bytes, wm_onkey.o(i.WM_OnKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SendKeyMsg
<LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[415]"></a>WM_Paint</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_paint.o(i.WM_Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = WM_Paint &rArr; WM_Update &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[868]"></a>WM_ReleaseCapture</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_setcapture.o(i.WM_ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_ReleaseCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[419]"></a>WM_ResizeWindow</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, wm_resizewindow.o(i.WM_ResizeWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[82a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__UpdateChildPositions
<LI><a href="#[82f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetYSize
<LI><a href="#[82e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetXSize
</UL>

<P><STRONG><a name="[37c]"></a>WM_RestartTimer</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_timer.o(i.WM_RestartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_RestartTimer &rArr; GUI_TIMER_SetPeriod &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_SetPeriod
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[724]"></a>WM_SelectWindow</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, wm.o(i.WM_SelectWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = WM_SelectWindow &rArr; WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>

<P><STRONG><a name="[4b1]"></a>WM_SendMessage</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm.o(i.WM_SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgbar
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetProgbarParam
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CustomSendMessage
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[76e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetEffect
<LI><a href="#[6d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollState
<LI><a href="#[68b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectEx
<LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetDialogStatusPtr
<LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetDialogStatusPtr
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbTimer
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[77f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetBkColor
<LI><a href="#[83c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollState
</UL>

<P><STRONG><a name="[590]"></a>WM_SendMessageNoPara</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, wm_sendmessagenopara.o(i.WM_SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_SendMessageNoPara &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[870]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageNoPara
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[79d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__InvalidatePartner
</UL>

<P><STRONG><a name="[84a]"></a>WM_SendToParent</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, wm_sendtoparent.o(i.WM_SendToParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM_SendToParent &rArr;  WM__SendMessage (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
</UL>

<P><STRONG><a name="[2c9]"></a>WM_SetCallback</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_setcallback.o(i.WM_SetCallback))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = WM_SetCallback &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[871]"></a>WM_SetCapture</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, wm_setcapture.o(i.WM_SetCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>
<BR>[Called By]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
</UL>

<P><STRONG><a name="[2c6]"></a>WM_SetCreateFlags</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_setcreateflags.o(i.WM_SetCreateFlags))
<BR><BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUserGUITask
</UL>

<P><STRONG><a name="[872]"></a>WM_SetDefault</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wm.o(i.WM_SetDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM_SetDefault &rArr; GL_SetDefault &rArr; GUI_SetPenSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
</UL>

<P><STRONG><a name="[28c]"></a>WM_SetFocus</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, wm_setfocus.o(i.WM_SetFocus))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppKeyScanTask
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
<LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
<LI><a href="#[7a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[77b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[592]"></a>WM_SetFocusOnNextChild</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i.WM_SetFocusOnNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[83f]"></a>WM_SetFocusOnPrevChild</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm_setfocusonprevchild.o(i.WM_SetFocusOnPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = WM_SetFocusOnPrevChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[7df]"></a>WM_SetHasTrans</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, wm_settrans.o(i.WM_SetHasTrans))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[876]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ValidateWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[780]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetTransState
</UL>

<P><STRONG><a name="[83c]"></a>WM_SetScrollState</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, wm_setscrollstate.o(i.WM_SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollState &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>

<P><STRONG><a name="[877]"></a>WM_SetScrollValue</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm_checkscrollpos.o(i.WM_SetScrollValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM_SetScrollValue
</UL>
<BR>[Calls]<UL><LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
</UL>
<BR>[Called By]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[712]"></a>WM_SetScrollbarH</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarH &rArr; WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[6eb]"></a>WM_SetScrollbarV</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setscrollbar.o(i.WM_SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScrollV
<LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[694]"></a>WM_SetSize</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, wm_setsize.o(i.WM_SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>

<P><STRONG><a name="[780]"></a>WM_SetTransState</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, wm_settransstate.o(i.WM_SetTransState))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = WM_SetTransState &rArr; WM_SetHasTrans &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
<LI><a href="#[7de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ClrHasTrans
</UL>
<BR>[Called By]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
</UL>

<P><STRONG><a name="[5ae]"></a>WM_SetUserClipRect</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm_setusercliprect.o(i.WM_SetUserClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_SetUserClipRect &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetClipRect
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[7cb]"></a>WM_SetUserData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm_userdata.o(i.WM_SetUserData))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM_SetUserData &rArr; WM__SetUserDataEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
</UL>

<P><STRONG><a name="[82e]"></a>WM_SetXSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_setxsize.o(i.WM_SetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = WM_SetXSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[82f]"></a>WM_SetYSize</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, wm_setysize.o(i.WM_SetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = WM_SetYSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_SetWidth
</UL>

<P><STRONG><a name="[38b]"></a>WM_ShowWindow</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, wm_show.o(i.WM_ShowWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = WM_ShowWindow &rArr; WM_InvalidateWindowAndDescs &rArr;  WM_InvalidateWindowAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[864]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CreateDialogBox
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[86d]"></a>WM_Update</STRONG> (Thumb, 50 bytes, Stack size 128 bytes, wm_paint.o(i.WM_Update))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = WM_Update &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
</UL>

<P><STRONG><a name="[876]"></a>WM_ValidateWindow</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, wm_validatewindow.o(i.WM_ValidateWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM_ValidateWindow &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
</UL>
<BR>[Called By]<UL><LI><a href="#[7df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetHasTrans
</UL>

<P><STRONG><a name="[87a]"></a>WM__ActivateClipRect</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wm.o(i.WM__ActivateClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
</UL>

<P><STRONG><a name="[85e]"></a>WM__AddCriticalHandle</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_criticalhandle.o(i.WM__AddCriticalHandle))
<BR><BR>[Called By]<UL><LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Init
</UL>

<P><STRONG><a name="[860]"></a>WM__Client2Screen</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, wm.o(i.WM__Client2Screen))
<BR><BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[87d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetClipRectUserIntersect
</UL>

<P><STRONG><a name="[862]"></a>WM__ClipAtParentBorders</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, wm.o(i.WM__ClipAtParentBorders))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__ClipAtParentBorders
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[84d]"></a>WM__DeleteAssocTimer</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, wm_timer.o(i.WM__DeleteAssocTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = WM__DeleteAssocTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetNextTimerLin
<LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER__GetFirstTimer
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_GetFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[5bd]"></a>WM__DeleteSecure</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm.o(i.WM__DeleteSecure))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__DeleteSecure
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>

<P><STRONG><a name="[84f]"></a>WM__DetachWindow</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, wm.o(i.WM__DetachWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = WM__DetachWindow &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[854]"></a>WM__ForEachDesc</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, wm__foreachdesc.o(i.WM__ForEachDesc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + In Cycle
<LI>Call Chain = WM__ForEachDesc &rArr;  WM__ForEachDesc (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
<LI><a href="#[854]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ForEachDesc
</UL>

<P><STRONG><a name="[849]"></a>WM__GetClientRectEx</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm_getclientrect.o(i.WM__GetClientRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__GetClientRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[839]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectWin
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
</UL>

<P><STRONG><a name="[839]"></a>WM__GetClientRectWin</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, wm.o(i.WM__GetClientRectWin))
<BR><BR>[Called By]<UL><LI><a href="#[849]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetClientRectEx
<LI><a href="#[82d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetInsideRect
</UL>

<P><STRONG><a name="[880]"></a>WM__GetFirstSibling</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm__getfirstsibling.o(i.WM__GetFirstSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
</UL>

<P><STRONG><a name="[874]"></a>WM__GetFocussedChild</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, wm__getfocussedchild.o(i.WM__GetFocussedChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__GetFocussedChild &rArr; WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[881]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsChild
</UL>
<BR>[Called By]<UL><LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[882]"></a>WM__GetLastSibling</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm__getlastsibling.o(i.WM__GetLastSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetLastSibling
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[368]"></a>WM__GetNextIVR</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, wm.o(i.WM__GetNextIVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>
<BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[55e]"></a>WM__GetOrgX_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__getorg_aa.o(i.WM__GetOrgX_AA))
<BR><BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[55f]"></a>WM__GetOrgY_AA</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, wm__getorg_aa.o(i.WM__GetOrgY_AA))
<BR><BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[842]"></a>WM__GetPrevSibling</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, wm__getprevsibling.o(i.WM__GetPrevSibling))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[880]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFirstSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[875]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPrevChild
</UL>

<P><STRONG><a name="[84c]"></a>WM__GetTopLevelLayer</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, wm.o(i.WM__GetTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__GetTopLevelLayer
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[86f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SelectTopLevelLayer
<LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[85c]"></a>WM__GetUserDataEx</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, wm_userdata.o(i.WM__GetUserDataEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM__GetUserDataEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[67e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetUserData
</UL>

<P><STRONG><a name="[366]"></a>WM__InitIVRSearch</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, wm.o(i.WM__InitIVRSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
<LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRect
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CL_DispChar
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_CopyToLCDAt
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_WriteAt
</UL>

<P><STRONG><a name="[847]"></a>WM__InsertWindowIntoList</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, wm.o(i.WM__InsertWindowIntoList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__InsertWindowIntoList
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[863]"></a>WM__Invalidate1Abs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WM__Invalidate1Abs &rArr; _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
</UL>

<P><STRONG><a name="[85f]"></a>WM__InvalidateDrawAndDescs</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateDrawAndDescs))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateDrawAndDescs &rArr;  WM__InvalidateDrawAndDescs (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[856]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetFirstChild
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Delete
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[85f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateDrawAndDescs
</UL>

<P><STRONG><a name="[885]"></a>WM__InvalidateParent</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__InvalidateParent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__InvalidateParent
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>

<P><STRONG><a name="[886]"></a>WM__InvalidateRect</STRONG> (Thumb, 118 bytes, Stack size 40 bytes, wm.o(i.WM__InvalidateRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
<LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>
<BR>[Called By]<UL><LI><a href="#[843]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRectEx
<LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>

<P><STRONG><a name="[843]"></a>WM__InvalidateRectEx</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, wm.o(i.WM__InvalidateRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[841]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToBottom
<LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
</UL>

<P><STRONG><a name="[83e]"></a>WM__IsAncestor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__isancestor.o(i.WM__IsAncestor))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[869]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsInModalArea
<LI><a href="#[83d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestorOrSelf
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[83d]"></a>WM__IsAncestorOrSelf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wm__isancestor.o(i.WM__IsAncestorOrSelf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsAncestorOrSelf &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WINDOW_Callback
</UL>

<P><STRONG><a name="[881]"></a>WM__IsChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm__ischild.o(i.WM__IsChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__IsChild
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
</UL>

<P><STRONG><a name="[887]"></a>WM__IsEnabled</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, wm__isenabled.o(i.WM__IsEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsEnabled
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>

<P><STRONG><a name="[869]"></a>WM__IsInModalArea</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm_touch.o(i.WM__IsInModalArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__IsInModalArea &rArr; WM__IsAncestor
</UL>
<BR>[Calls]<UL><LI><a href="#[83e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsAncestor
</UL>
<BR>[Called By]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
</UL>

<P><STRONG><a name="[84b]"></a>WM__IsWindow</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, wm.o(i.WM__IsWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WM__IsWindow
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[86b]"></a>WM__MoveTo</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, wm_move.o(i.WM__MoveTo))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = WM__MoveTo &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
</UL>

<P><STRONG><a name="[86c]"></a>WM__MoveWindow</STRONG> (Thumb, 152 bytes, Stack size 64 bytes, wm_move.o(i.WM__MoveWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[885]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateParent
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[86b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveTo
</UL>

<P><STRONG><a name="[87c]"></a>WM__Paint</STRONG> (Thumb, 152 bytes, Stack size 56 bytes, wm.o(i.WM__Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Called By]<UL><LI><a href="#[86d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Update
<LI><a href="#[852]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawNext
</UL>

<P><STRONG><a name="[134]"></a>WM__Paint1</STRONG> (Thumb, 138 bytes, Stack size 56 bytes, wm.o(i.WM__Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = WM__Paint1 &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
<LI><a href="#[872]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetDefault
</UL>
<BR>[Called By]<UL><LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateStaticDevice
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i._Paint1)
</UL>
<P><STRONG><a name="[8ff]"></a>WM__RectIsNZ</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, wm.o(i.WM__RectIsNZ))
<BR><BR>[Called By]<UL><LI><a href="#[866]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate1Abs
</UL>

<P><STRONG><a name="[850]"></a>WM__RemoveFromLinList</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[87f]"></a>WM__RemoveWindowFromList</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, wm.o(i.WM__RemoveWindowFromList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WM__RemoveWindowFromList
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[84f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DetachWindow
<LI><a href="#[844]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_BringToTop
</UL>

<P><STRONG><a name="[88d]"></a>WM__Screen2Client</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, wm__screen2client.o(i.WM__Screen2Client))
<BR><BR>[Calls]<UL><LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[835]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EffectRequiresRedraw
</UL>

<P><STRONG><a name="[86f]"></a>WM__SelectTopLevelLayer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, wm.o(i.WM__SelectTopLevelLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = WM__SelectTopLevelLayer &rArr; GUI_SelectLayer &rArr; GUI_SelectLCD &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SelectWindow
</UL>

<P><STRONG><a name="[696]"></a>WM__SendMessage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, wm__sendmessage.o(i.WM__SendMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_OnKey
<LI><a href="#[700]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
<LI><a href="#[84a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendToParent
<LI><a href="#[848]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMsgNoData
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
<LI><a href="#[86e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ReleaseCapture
</UL>

<P><STRONG><a name="[88e]"></a>WM__SendMessageIfEnabled</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, wm__sendmessageifenabled.o(i.WM__SendMessageIfEnabled))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[86a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendPIDMessage
</UL>

<P><STRONG><a name="[870]"></a>WM__SendMessageNoPara</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, wm__sendmessagenopara.o(i.WM__SendMessageNoPara))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = WM__SendMessageNoPara
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessageNoPara
</UL>

<P><STRONG><a name="[848]"></a>WM__SendMsgNoData</STRONG> (Thumb, 14 bytes, Stack size 24 bytes, wm.o(i.WM__SendMsgNoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 264 + Unknown Stack Size
<LI>Call Chain = WM__SendMsgNoData &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateWindowAsChild
</UL>

<P><STRONG><a name="[86a]"></a>WM__SendPIDMessage</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, wm_touch.o(i.WM__SendPIDMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = WM__SendPIDMessage &rArr; WM__SendMessageIfEnabled &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[88e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessageIfEnabled
</UL>
<BR>[Called By]<UL><LI><a href="#[7ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MakeModal
</UL>

<P><STRONG><a name="[878]"></a>WM__SetScrollbarH</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarH))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarH &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>

<P><STRONG><a name="[879]"></a>WM__SetScrollbarV</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, wm_setscrollbar.o(i.WM__SetScrollbarV))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[88f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>

<P><STRONG><a name="[87b]"></a>WM__SetUserDataEx</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, wm_userdata.o(i.WM__SetUserDataEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = WM__SetUserDataEx &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[884]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNumBytes
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[7cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserData
</UL>

<P><STRONG><a name="[82a]"></a>WM__UpdateChildPositions</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, wm__updatechildpositions.o(i.WM__UpdateChildPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = WM__UpdateChildPositions &rArr; WM_MoveWindow &rArr; WM__MoveWindow &rArr; _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_HandleActive
</UL>

<P><STRONG><a name="[26a]"></a>WaiLinCurrentSteady</STRONG> (Thumb, 150 bytes, Stack size 48 bytes, midfunction.o(i.WaiLinCurrentSteady))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = WaiLinCurrentSteady &rArr; GetBusCurrent &rArr; GetBusLowCurrent &rArr; AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[891]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;U16DataCMP
<LI><a href="#[890]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetU16DataAverage
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusCurrent
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
</UL>

<P><STRONG><a name="[7d7]"></a>WifiConfig</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wifi.o(i.WifiConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 116 + Unknown Stack Size
<LI>Call Chain = WifiConfig &rArr; WifiUartConfig &rArr; SetWifiUartBaudRate &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[893]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUartConfig
<LI><a href="#[892]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiGpioPinConfig
<LI><a href="#[894]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInitOS
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemGpioConfig
</UL>

<P><STRONG><a name="[79b]"></a>WifiConfigIsOpen</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, recorder.o(i.WifiConfigIsOpen))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = WifiConfigIsOpen &rArr; GetConfigFileU32 &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileU32
</UL>
<BR>[Called By]<UL><LI><a href="#[79a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadUserConfigParam
</UL>

<P><STRONG><a name="[2d8]"></a>WifiConnectAP</STRONG> (Thumb, 280 bytes, Stack size 248 bytes, wifi.o(i.WifiConnectAP))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = WifiConnectAP &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiReset
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoConnect
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
</UL>

<P><STRONG><a name="[76c]"></a>WifiExitCmdMode</STRONG> (Thumb, 276 bytes, Stack size 72 bytes, wifi.o(i.WifiExitCmdMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WifiExitCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
</UL>

<P><STRONG><a name="[892]"></a>WifiGpioPinConfig</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, wifi.o(i.WifiGpioPinConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = WifiGpioPinConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConfig
</UL>

<P><STRONG><a name="[2bd]"></a>WifiInit</STRONG> (Thumb, 304 bytes, Stack size 72 bytes, wifi.o(i.WifiInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = WifiInit &rArr; SetWifiUartBaud &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[7ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiReset
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaudRate
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaud
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
</UL>

<P><STRONG><a name="[2d3]"></a>WifiLock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wifi.o(i.WifiLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = WifiLock &rArr; OSMutexPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
</UL>

<P><STRONG><a name="[7ca]"></a>WifiReset</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, wifi.o(i.WifiReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = WifiReset &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaud
</UL>

<P><STRONG><a name="[2d5]"></a>WifiScanAP</STRONG> (Thumb, 818 bytes, Stack size 1096 bytes, wifi.o(i.WifiScanAP))
<BR><BR>[Stack]<UL><LI>Max Depth = 1304 + Unknown Stack Size
<LI>Call Chain = WifiScanAP &rArr; WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUnlock
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiLock
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
</UL>

<P><STRONG><a name="[895]"></a>WifiSendData</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, wifi.o(i.WifiSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = WifiSendData
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_SendData
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
</UL>

<P><STRONG><a name="[4a9]"></a>WifiSetCmdMode</STRONG> (Thumb, 212 bytes, Stack size 72 bytes, wifi.o(i.WifiSetCmdMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = WifiSetCmdMode &rArr; WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindStringFromBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiCurrentAPInfo
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWifiSocket
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaud
</UL>

<P><STRONG><a name="[896]"></a>WifiTransferData</STRONG> (Thumb, 216 bytes, Stack size 56 bytes, wifi.o(i.WifiTransferData))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WifiTransferData &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUnlock
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiLock
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendData
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleTransferData
</UL>

<P><STRONG><a name="[4aa]"></a>WifiTransmitter</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, wifi.o(i.WifiTransmitter))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = WifiTransmitter &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUnlock
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiLock
<LI><a href="#[897]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiWaitReceive
<LI><a href="#[895]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSendData
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiInit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConnectAP
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenWifiSocket
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWifiCurrentAPInfo
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWifiSocket
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiSetCmdMode
<LI><a href="#[76c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiExitCmdMode
<LI><a href="#[7c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaud
</UL>

<P><STRONG><a name="[893]"></a>WifiUartConfig</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, wifi.o(i.WifiUartConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = WifiUartConfig &rArr; SetWifiUartBaudRate &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB1PeriphClockCmd
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
<LI><a href="#[7c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWifiUartBaudRate
</UL>
<BR>[Called By]<UL><LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConfig
</UL>

<P><STRONG><a name="[2d4]"></a>WifiUnlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, wifi.o(i.WifiUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiScanAP
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppWifiTask
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
</UL>

<P><STRONG><a name="[897]"></a>WifiWaitReceive</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, wifi.o(i.WifiWaitReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = WifiWaitReceive &rArr; System168MDelay1ms &rArr; System168MDelay100us &rArr; System168MDelay10us
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransmitter
</UL>

<P><STRONG><a name="[3d6]"></a>WindowHasChild</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, guicustomutils.o(i.WindowHasChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = WindowHasChild &rArr; WM_IsWindow &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[679]"></a>WireleGeneralTransferData</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, safemonitor.o(i.WireleGeneralTransferData))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = WireleGeneralTransferData &rArr; WireleTransferData &rArr; WifiTransferData &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[675]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleTransferData
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendBlastFireInfoData
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetServerReadyForUpdate
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileVerifyResult
</UL>

<P><STRONG><a name="[675]"></a>WireleTransferData</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, safemonitor.o(i.WireleTransferData))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = WireleTransferData &rArr; WifiTransferData &rArr; WifiUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[896]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiTransferData
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerDeviceVersionInfo
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerCurrentTime
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetServerHexFileData
<LI><a href="#[679]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WireleGeneralTransferData
</UL>

<P><STRONG><a name="[220]"></a>WriteAccreditErrorFile</STRONG> (Thumb, 132 bytes, Stack size 64 bytes, recorder.o(i.WriteAccreditErrorFile))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = WriteAccreditErrorFile &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditOneDeviceForDL
</UL>

<P><STRONG><a name="[683]"></a>WriteAccreditInfoFileForDL</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, recorder.o(i.WriteAccreditInfoFileForDL))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = WriteAccreditInfoFileForDL &rArr; f_rename &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
</UL>

<P><STRONG><a name="[283]"></a>WriteBlasterRecord</STRONG> (Thumb, 4290 bytes, Stack size 152 bytes, recorder.o(i.WriteBlasterRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = WriteBlasterRecord &rArr; BlastRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc16Value
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenBlasterRecordFile
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddDetInfoToBlasterRecord
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[338]"></a>WriteBlueSlaveDetData</STRONG> (Thumb, 598 bytes, Stack size 80 bytes, bluemaster.o(i.WriteBlueSlaveDetData))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = WriteBlueSlaveDetData &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoInsert
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoBackUp
</UL>

<P><STRONG><a name="[339]"></a>WriteBlueSlaveHoleNumberData</STRONG> (Thumb, 366 bytes, Stack size 24 bytes, bluemaster.o(i.WriteBlueSlaveHoleNumberData))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = WriteBlueSlaveHoleNumberData &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSendData
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoInsert
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDetInfoBackUp
</UL>

<P><STRONG><a name="[506]"></a>WriteHexFileData</STRONG> (Thumb, 136 bytes, Stack size 64 bytes, recorder.o(i.WriteHexFileData))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = WriteHexFileData &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
</UL>

<P><STRONG><a name="[238]"></a>WriteSystemLog</STRONG> (Thumb, 4634 bytes, Stack size 192 bytes, recorder.o(i.WriteSystemLog))
<BR><BR>[Stack]<UL><LI>Max Depth = 992 + Unknown Stack Size
<LI>Call Chain = WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSTM32ChipIDStr
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetErrorDetIndex
<LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRetryErrCount
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltage
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusCurrent
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltageFromAdcValue
<LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderIndexFromFileName
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllDetInfo
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStateMonitor
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckHVProtectPoint
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetStartBlast
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetAccreditForDL
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppTemporaryTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllErrorDetInfo
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>

<P><STRONG><a name="[4a4]"></a>XA3_Bit</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_Bit))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_Bit &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
</UL>

<P><STRONG><a name="[32a]"></a>XA3_Charge</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_Charge))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_Charge &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[327]"></a>XA3_CheckOscAll</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, xa3_detcmd.o(i.XA3_CheckOscAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = XA3_CheckOscAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[244]"></a>XA3_ClearAll</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_ClearAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
</UL>

<P><STRONG><a name="[242]"></a>XA3_DetBlast</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xa3_detcmd.o(i.XA3_DetBlast))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = XA3_DetBlast &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[89b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetBlastCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetStartBlast
</UL>

<P><STRONG><a name="[89b]"></a>XA3_DetBlastCmdEncode</STRONG> (Thumb, 234 bytes, Stack size 0 bytes, xa3_detcmd.o(i.XA3_DetBlastCmdEncode))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetBlast
</UL>

<P><STRONG><a name="[241]"></a>XA3_DetBlastOne</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, xa3_detcmd.o(i.XA3_DetBlastOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = XA3_DetBlastOne &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[89c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOneBlastCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetStartBlast
</UL>

<P><STRONG><a name="[42f]"></a>XA3_DetCheckIn</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_DetCheckIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_DetCheckIn &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[69b]"></a>XA3_DetCheckInBySimpleSignal</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_DetCheckInBySimpleSignal))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_DetCheckInBySimpleSignal &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HaveUnregisteredDetBySimpleSignal
</UL>

<P><STRONG><a name="[662]"></a>XA3_DetCheckInNotAck</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_DetCheckInNotAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_DetCheckInNotAck &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetAckCurrentWave
</UL>

<P><STRONG><a name="[899]"></a>XA3_DetCmdEncode</STRONG> (Thumb, 420 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_DetCmdEncode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = XA3_DetCmdEncode
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteTime
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteEEPROM
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteDataUnlock
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ResetAll
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Reset
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadTimeClock
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatusNotAck
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatus
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwd
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadEEPROM
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_PwdUnlock
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Mask
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ExpenAll
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckInNotAck
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckInBySimpleSignal
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ClearAll
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_CheckOscAll
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Charge
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Bit
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelayUnlock
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelay
<LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncodeForBlastSignalPin
</UL>

<P><STRONG><a name="[89d]"></a>XA3_DetCmdEncodeForBlastSignalPin</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, xa3_detcmd.o(i.XA3_DetCmdEncodeForBlastSignalPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = XA3_DetCmdEncodeForBlastSignalPin &rArr; XA3_DetCmdEncode
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ExpenAllByBlastSignalPin
</UL>

<P><STRONG><a name="[288]"></a>XA3_DetCodeWriteFromBackup</STRONG> (Thumb, 682 bytes, Stack size 64 bytes, det_operart.o(i.XA3_DetCodeWriteFromBackup))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = XA3_DetCodeWriteFromBackup &rArr; XA3_UnlockAndWriteEEPROM &rArr; XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadSerl
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadEEPROM
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_UnlockAndWriteEEPROM
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCodeRulePass
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[287]"></a>XA3_DetCodeWriteNew</STRONG> (Thumb, 518 bytes, Stack size 56 bytes, det_operart.o(i.XA3_DetCodeWriteNew))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = XA3_DetCodeWriteNew &rArr; XA3_UnlockAndWriteEEPROM &rArr; XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadSerl
<LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_UnlockAndWriteEEPROM
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCodeRulePass
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppDetOperateTask
</UL>

<P><STRONG><a name="[328]"></a>XA3_DetFixedPulse</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, xa3_detcmd.o(i.XA3_DetFixedPulse))
<BR><BR>[Stack]<UL><LI>Max Depth = 1144 + Unknown Stack Size
<LI>Call Chain = XA3_DetFixedPulse &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[89f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetFixedPulseEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[89f]"></a>XA3_DetFixedPulseEncode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, xa3_detcmd.o(i.XA3_DetFixedPulseEncode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = XA3_DetFixedPulseEncode
</UL>
<BR>[Called By]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetFixedPulse
</UL>

<P><STRONG><a name="[3bd]"></a>XA3_DetInside2Outside</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, det_operart.o(i.XA3_DetInside2Outside))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = XA3_DetInside2Outside &rArr; __2sprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCodeRulePass
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCode2UIDStr
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[89c]"></a>XA3_DetOneBlastCmdEncode</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, xa3_detcmd.o(i.XA3_DetOneBlastCmdEncode))
<BR><BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetBlastOne
</UL>

<P><STRONG><a name="[301]"></a>XA3_DetOutside2Inside</STRONG> (Thumb, 606 bytes, Stack size 48 bytes, det_operart.o(i.XA3_DetOutside2Inside))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = XA3_DetOutside2Inside &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCrc8Value
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst14
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst13
</UL>

<P><STRONG><a name="[89a]"></a>XA3_DetSendAndRec</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, dethardware.o(i.XA3_DetSendAndRec))
<BR><BR>[Stack]<UL><LI>Max Depth = 1128 + Unknown Stack Size
<LI>Call Chain = XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteTime
<LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteEEPROM
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteDataUnlock
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ResetAll
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Reset
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadTimeClock
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatusNotAck
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadStatus
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwd
<LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadEEPROM
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_PwdUnlock
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Mask
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ExpenAllByBlastSignalPin
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ExpenAll
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetFixedPulse
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckInNotAck
<LI><a href="#[69b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckInBySimpleSignal
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetBlastOne
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetBlast
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ClearAll
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_CheckOscAll
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Charge
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Bit
<LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelayUnlock
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelay
</UL>

<P><STRONG><a name="[4e4]"></a>XA3_ExpenAll</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_ExpenAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_ExpenAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
</UL>

<P><STRONG><a name="[23f]"></a>XA3_ExpenAllByBlastSignalPin</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_ExpenAllByBlastSignalPin))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_ExpenAllByBlastSignalPin &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[89d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncodeForBlastSignalPin
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetStartBlast
</UL>

<P><STRONG><a name="[330]"></a>XA3_GetDetStatus</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, xa3_detcmd.o(i.XA3_GetDetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[31f]"></a>XA3_Mask</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_Mask))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_Mask &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[329]"></a>XA3_PwdUnlock</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, xa3_detcmd.o(i.XA3_PwdUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = XA3_PwdUnlock &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[89e]"></a>XA3_ReadEEPROM</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, xa3_detcmd.o(i.XA3_ReadEEPROM))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadSerl
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
</UL>

<P><STRONG><a name="[8a0]"></a>XA3_ReadPwd</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, xa3_detcmd.o(i.XA3_ReadPwd))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = XA3_ReadPwd &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
</UL>

<P><STRONG><a name="[4a3]"></a>XA3_ReadPwdRetry</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, det_operart.o(i.XA3_ReadPwdRetry))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176 + Unknown Stack Size
<LI>Call Chain = XA3_ReadPwdRetry &rArr; XA3_ReadPwd &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[7e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_Reset
<LI><a href="#[8a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwd
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
</UL>

<P><STRONG><a name="[4a2]"></a>XA3_ReadSerl</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, xa3_detcmd.o(i.XA3_ReadSerl))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176 + Unknown Stack Size
<LI>Call Chain = XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[89e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadEEPROM
</UL>
<BR>[Called By]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_UnlockAndWriteEEPROM
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetMaskAll
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
</UL>

<P><STRONG><a name="[32f]"></a>XA3_ReadStatus</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, xa3_detcmd.o(i.XA3_ReadStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = XA3_ReadStatus &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetComplete
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDet
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[663]"></a>XA3_ReadStatusNotAck</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_ReadStatusNotAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_ReadStatusNotAck &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetAckCurrentWave
</UL>

<P><STRONG><a name="[32b]"></a>XA3_ReadTimeClock</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, xa3_detcmd.o(i.XA3_ReadTimeClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = XA3_ReadTimeClock &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[7e3]"></a>XA3_Reset</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_Reset &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadPwdRetry
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
</UL>

<P><STRONG><a name="[248]"></a>XA3_ResetAll</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_ResetAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_ResetAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllReset
</UL>

<P><STRONG><a name="[7e2]"></a>XA3_UnlockAndWriteEEPROM</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, det_operart.o(i.XA3_UnlockAndWriteEEPROM))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = XA3_UnlockAndWriteEEPROM &rArr; XA3_ReadSerl &rArr; XA3_ReadEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteEEPROM
<LI><a href="#[8a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteDataUnlock
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_ReadSerl
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteNew
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCodeWriteFromBackup
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestDetQuick
</UL>

<P><STRONG><a name="[8a1]"></a>XA3_WriteDataUnlock</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_WriteDataUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_WriteDataUnlock &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_UnlockAndWriteEEPROM
</UL>

<P><STRONG><a name="[8a2]"></a>XA3_WriteEEPROM</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, xa3_detcmd.o(i.XA3_WriteEEPROM))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = XA3_WriteEEPROM &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[7e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_UnlockAndWriteEEPROM
</UL>

<P><STRONG><a name="[8a3]"></a>XA3_WriteFixDelay</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, xa3_detcmd.o(i.XA3_WriteFixDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = XA3_WriteFixDelay &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelayTest
</UL>

<P><STRONG><a name="[324]"></a>XA3_WriteFixDelayTest</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, xa3_detcmd.o(i.XA3_WriteFixDelayTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176 + Unknown Stack Size
<LI>Call Chain = XA3_WriteFixDelayTest &rArr; XA3_WriteFixDelay &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[8a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelayUnlock
<LI><a href="#[8a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[8a4]"></a>XA3_WriteFixDelayUnlock</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, xa3_detcmd.o(i.XA3_WriteFixDelayUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 1152 + Unknown Stack Size
<LI>Call Chain = XA3_WriteFixDelayUnlock &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_WriteFixDelayTest
</UL>

<P><STRONG><a name="[325]"></a>XA3_WriteTime</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, xa3_detcmd.o(i.XA3_WriteTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 1160 + Unknown Stack Size
<LI>Call Chain = XA3_WriteTime &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[899]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCmdEncode
<LI><a href="#[89a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetSendAndRec
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetAnalyst
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
</UL>

<P><STRONG><a name="[1f2]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[66a]"></a>__hardfp_acos</STRONG> (Thumb, 738 bytes, Stack size 72 bytes, acos.o(i.__hardfp_acos))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = __hardfp_acos &rArr; sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
</UL>

<P><STRONG><a name="[8cd]"></a>__hardfp_ceil</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, ceil.o(i.__hardfp_ceil))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __hardfp_ceil &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[668]"></a>__hardfp_cos</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
</UL>

<P><STRONG><a name="[8ce]"></a>__hardfp_floor</STRONG> (Thumb, 252 bytes, Stack size 40 bytes, floor.o(i.__hardfp_floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[90d]"></a>__hardfp_ldexp</STRONG> (Thumb, 216 bytes, Stack size 48 bytes, ldexp.o(i.__hardfp_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __hardfp_ldexp &rArr; __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[669]"></a>__hardfp_sin</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
</UL>

<P><STRONG><a name="[909]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 972 bytes, Stack size 168 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[911]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[90c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[90b]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[907]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[90a]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[910]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[1fb]"></a>__mathlib_narrow</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, narrow.o(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __mathlib_narrow &rArr; frexp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[681]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[90e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[204]"></a>__support_ldexp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __support_ldexp &rArr; __hardfp_ldexp &rArr; __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[1d5]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[828]"></a>aes_decrypt</STRONG> (Thumb, 4144 bytes, Stack size 48 bytes, aes.o(i.aes_decrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = aes_decrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Unpack
</UL>

<P><STRONG><a name="[774]"></a>aes_encrypt</STRONG> (Thumb, 4138 bytes, Stack size 48 bytes, aes.o(i.aes_encrypt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = aes_encrypt
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pack
</UL>

<P><STRONG><a name="[913]"></a>aes_gen_tables</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, aes.o(i.aes_gen_tables))
<BR><BR>[Called By]<UL><LI><a href="#[776]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_set_key
</UL>

<P><STRONG><a name="[776]"></a>aes_set_key</STRONG> (Thumb, 930 bytes, Stack size 20 bytes, aes.o(i.aes_set_key))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = aes_set_key
</UL>
<BR>[Calls]<UL><LI><a href="#[913]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;aes_gen_tables
</UL>
<BR>[Called By]<UL><LI><a href="#[775]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PackageKeyInit
</UL>

<P><STRONG><a name="[925]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(i.clust2sect))
<BR><BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[92d]"></a>disk_initialize</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, diskio.o(i.disk_initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = disk_initialize &rArr; SdCardPowerOn &rArr; SdCardSendCmd &rArr;  SdCardSendCmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardPowerOn
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareInit
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[92e]"></a>disk_ioctl</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, diskio.o(i.disk_ioctl))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = disk_ioctl &rArr; SdCardIoCtrl &rArr; SdCardSendCmd &rArr;  SdCardSendCmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardIoCtrl
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[92f]"></a>disk_read</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, diskio.o(i.disk_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = disk_read &rArr; SdCardReadBlock &rArr; SdCardSendCmd &rArr;  SdCardSendCmd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardReadBlock
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadData
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[93d]"></a>disk_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, diskio.o(i.disk_status))
<BR><BR>[Called By]<UL><LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[930]"></a>disk_write</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, diskio.o(i.disk_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SdCardWriteBlock
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
</UL>

<P><STRONG><a name="[5da]"></a>emWin_LCD_Init</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, lcd.o(i.emWin_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = emWin_LCD_Init &rArr; LCD_InitColors &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDrawMode
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectMax
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SelectLayer
<LI><a href="#[6c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitLUT
<LI><a href="#[6c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_InitColors
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[315]"></a>f_chmod</STRONG> (Thumb, 88 bytes, Stack size 80 bytes, ff.o(i.f_chmod))
<BR><BR>[Stack]<UL><LI>Max Depth = 424<LI>Call Chain = f_chmod &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
</UL>

<P><STRONG><a name="[231]"></a>f_close</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ff.o(i.f_close))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = f_close &rArr; f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMasterTimeShareTest
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedHexFileSize
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAccreditErrorFile
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderFileSize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileSize
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFeatureDefult
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileIndex
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileCount
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
</UL>

<P><STRONG><a name="[7da]"></a>f_getfree</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, ff.o(i.f_getfree))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = f_getfree &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[4ac]"></a>f_gets</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, ff.o(i.f_gets))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = f_gets &rArr; f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>
<BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
</UL>

<P><STRONG><a name="[22d]"></a>f_lseek</STRONG> (Thumb, 382 bytes, Stack size 32 bytes, ff.o(i.f_lseek))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = f_lseek &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMasterTimeShareTest
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAccreditErrorFile
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenBlasterRecordFile
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFeatureDefult
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
</UL>

<P><STRONG><a name="[4ae]"></a>f_mkdir</STRONG> (Thumb, 354 bytes, Stack size 88 bytes, ff.o(i.f_mkdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
</UL>

<P><STRONG><a name="[511]"></a>f_mkfs</STRONG> (Thumb, 1594 bytes, Stack size 112 bytes, ff.o(i.f_mkfs))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = f_mkfs &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemFormatSdCard
</UL>

<P><STRONG><a name="[7d9]"></a>f_mount</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, ff.o(i.f_mount))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = f_mount &rArr; find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
</UL>

<P><STRONG><a name="[22b]"></a>f_open</STRONG> (Thumb, 354 bytes, Stack size 88 bytes, ff.o(i.f_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMasterTimeShareTest
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWifiInfo
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedHexFileSize
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAccreditErrorFile
<LI><a href="#[76b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenBlasterRecordFile
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedFileExistState
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderFileSize
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFileSize
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFeatureDefult
<LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderFileSize
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileIndex
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileCount
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
</UL>

<P><STRONG><a name="[312]"></a>f_opendir</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, ff.o(i.f_opendir))
<BR><BR>[Stack]<UL><LI>Max Depth = 384<LI>Call Chain = f_opendir &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
</UL>

<P><STRONG><a name="[898]"></a>f_printf</STRONG> (Thumb, 628 bytes, Stack size 160 bytes, ff.o(i.f_printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 504<LI>Call Chain = f_printf &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
</UL>

<P><STRONG><a name="[22e]"></a>f_puts</STRONG> (Thumb, 74 bytes, Stack size 96 bytes, ff.o(i.f_puts))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = f_puts &rArr; putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveWifiInfo
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddEndFlagToBlasterRecord
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddCurrentDetInfoToBlasterRecord
</UL>

<P><STRONG><a name="[513]"></a>f_read</STRONG> (Thumb, 414 bytes, Stack size 64 bytes, ff.o(i.f_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[799]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadNetParam
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditDetInfoForDL
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMasterTimeShareTest
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_gets
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAccreditErrorFile
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSpecifiedHexFileCRCValue
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogRecorderData
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFeatureDefult
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderData
</UL>

<P><STRONG><a name="[313]"></a>f_readdir</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, ff.o(i.f_readdir))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = f_readdir &rArr; dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
</UL>

<P><STRONG><a name="[509]"></a>f_rename</STRONG> (Thumb, 288 bytes, Stack size 136 bytes, ff.o(i.f_rename))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = f_rename &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceHexFileLoader
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
</UL>

<P><STRONG><a name="[510]"></a>f_stat</STRONG> (Thumb, 64 bytes, Stack size 72 bytes, ff.o(i.f_stat))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = f_stat &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileIsExist
</UL>

<P><STRONG><a name="[934]"></a>f_sync</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, ff.o(i.f_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = f_sync &rArr; sync_fs &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[937]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;st_clust
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[936]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fattime
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
</UL>

<P><STRONG><a name="[314]"></a>f_unlink</STRONG> (Thumb, 174 bytes, Stack size 104 bytes, ff.o(i.f_unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>
<BR>[Called By]<UL><LI><a href="#[722]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LogRecordFileInit
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllFileSpecifiedPath
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastRecordFileInit
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllAccreditErrorFile
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
</UL>

<P><STRONG><a name="[4af]"></a>f_write</STRONG> (Thumb, 470 bytes, Stack size 64 bytes, ff.o(i.f_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = f_write &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[935]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemTest
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditErrorFile
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveGPSInfo
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexFileData
<LI><a href="#[683]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAccreditInfoFileForDL
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveSlaveDetInfo
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateNewFileData
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[911]"></a>fabs</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[52b]"></a>ff_convert</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, cc936.o(i.ff_convert))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GBKStringToUTF8
<LI><a href="#[93c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fileinfo
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[917]"></a>ff_wtoupper</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, cc936.o(i.ff_wtoupper))
<BR><BR>[Called By]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>

<P><STRONG><a name="[912]"></a>frexp</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, frexp.o(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = frexp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[829]"></a>getCurrentHvDacValue</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, dac.o(i.getCurrentHvDacValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = getCurrentHvDacValue &rArr; DAC_GetDataOutputValue
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_GetDataOutputValue
</UL>
<BR>[Called By]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoltageOutputAdjust
</UL>

<P><STRONG><a name="[7c7]"></a>getDacHvValueMin</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dac.o(i.getDacHvValueMin))
<BR><BR>[Called By]<UL><LI><a href="#[699]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHVVoltageUp
<LI><a href="#[69a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHVVoltageDown
</UL>

<P><STRONG><a name="[4de]"></a>getDacLvValueMin</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dac.o(i.getDacLvValueMin))
<BR><BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[715]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLVVoltageUp
<LI><a href="#[716]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLVVoltageDown
</UL>

<P><STRONG><a name="[919]"></a>get_fat</STRONG> (Thumb, 232 bytes, Stack size 24 bytes, ff.o(i.get_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[936]"></a>get_fattime</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, diskio.o(i.get_fattime))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_fattime
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[1c8]"></a>main</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = main &rArr; OSInit &rArr; OSTmr_Init &rArr; OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
<LI><a href="#[93e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetVectorTable
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[91a]"></a>put_fat</STRONG> (Thumb, 316 bytes, Stack size 32 bytes, ff.o(i.put_fat))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[938]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remove_chain
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>

<P><STRONG><a name="[26f]"></a>setDacHvValueMinFromVoltage</STRONG> (Thumb, 366 bytes, Stack size 0 bytes, dac.o(i.setDacHvValueMinFromVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNormalHighVoltageGoal
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceSelfTest
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppStartUpTask
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppBackgroundTask
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[4da]"></a>setDacLvValueMinFromVoltage</STRONG> (Thumb, 366 bytes, Stack size 0 bytes, dac.o(i.setDacLvValueMinFromVoltage))
<BR><BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacConfig
</UL>

<P><STRONG><a name="[908]"></a>sqrt</STRONG> (Thumb, 110 bytes, Stack size 32 bytes, sqrt.o(i.sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[2c0]"></a>usb_hid_device_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, usb.o(i.usb_hid_device_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = usb_hid_device_init &rArr; USBD_Init &rArr; DCD_Init &rArr; USB_OTG_CoreInitDev &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[7f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_Init
<LI><a href="#[940]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_host_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
</UL>

<P><STRONG><a name="[2c1]"></a>usb_hid_device_tedata</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, usb.o(i.usb_hid_device_tedata))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = usb_hid_device_tedata &rArr; USBD_HID_SendReport &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_HID_SendReport
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUSBTask
</UL>

<P><STRONG><a name="[940]"></a>usb_host_exit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usb.o(i.usb_host_exit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = usb_host_exit &rArr; USB_OTG_StopHost &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[820]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_StopHost
<LI><a href="#[80c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usb_hid_device_init
</UL>

<P><STRONG><a name="[1c2]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[95]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[90c]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[994]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[995]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[996]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[997]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[998]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[681]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFactoryConfigParam
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[941]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[942]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[4ed]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulated
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[944]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[947]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[90f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[94b]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[375]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFactoryConfigParam
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterAnalyzeRetry
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[949]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[90e]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[94a]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[515]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltageFromAdcValue
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterAnalyzeRetry
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
</UL>

<P><STRONG><a name="[94c]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[32e]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusIsShort
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatVoltage
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulated
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulatedAdjust
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
</UL>

<P><STRONG><a name="[94d]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[21a]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[798]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadFactoryConfigParam
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulated
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[999]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[32c]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusIsShort
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatVoltage
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltageFromAdcValue
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulatedAdjust
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterAnalyzeRetry
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetRecAnalyze
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[99a]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[21c]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
</UL>

<P><STRONG><a name="[94e]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[94b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[951]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[950]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[32d]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusIsShort
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendLogFileToServer
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatVoltage
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulated
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GuestRespond
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasteTestComplete
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusVoltageFromAdcValue
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulatedAdjust
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[910]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[907]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
<LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
<LI><a href="#[912]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
</UL>

<P><STRONG><a name="[94f]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[943]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[93f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[94e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[94d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[94c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[94a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[946]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[94f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[949]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[516]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterAnalyzeRetry
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
</UL>

<P><STRONG><a name="[950]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[951]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[4db]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FilterAnalyzeRetry
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[952]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[945]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[93f]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[908]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt
</UL>

<P><STRONG><a name="[667]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[90a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[909]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[90b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_acos
</UL>

<P><STRONG><a name="[954]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[943]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[953]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[666]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[955]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[956]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[946]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[956]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[955]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[1bd]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[99b]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[99c]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[942]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[941]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[1b2]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[948]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[957]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[90f]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[947]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[90d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[1ff]"></a>_scanf_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf1.o(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<BR>[Called By]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[1fa]"></a>_scanf_hex_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[1f9]"></a>_scanf_infnan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[958]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[957]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[948]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[50c]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_it.o(i.NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_IRQHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI9_5_IRQHandler
</UL>

<P><STRONG><a name="[718]"></a>LcdBrightLock</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, midfunction.o(i.LcdBrightLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = LcdBrightLock &rArr; OSMutexPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
</UL>

<P><STRONG><a name="[719]"></a>LcdBrightUnlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, midfunction.o(i.LcdBrightUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = LcdBrightUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
</UL>

<P><STRONG><a name="[778]"></a>PublicStkLock</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, taskutils.o(i.PublicStkLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = PublicStkLock &rArr; OSMutexPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
</UL>

<P><STRONG><a name="[779]"></a>PublicStkUnlock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, taskutils.o(i.PublicStkUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
</UL>

<P><STRONG><a name="[ec]"></a>Callback</STRONG> (Thumb, 786 bytes, Stack size 128 bytes, custommessagebox.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HelpSupportEnter
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseWindowAndParent
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> custommessagebox.o(i.ShowMsgBox)
</UL>
<P><STRONG><a name="[e6]"></a>Callback</STRONG> (Thumb, 512 bytes, Stack size 120 bytes, loadingdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> loadingdlg.o(i.ShowLoadingDlg)
</UL>
<P><STRONG><a name="[108]"></a>Callback</STRONG> (Thumb, 1828 bytes, Stack size 112 bytes, toptitledlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; BusStateMonitor &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusStateMonitor
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Read_Time
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatVoltage
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulated
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitPowerOffDlg
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPowerOffDlg
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBusErrorRestoreDlg
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_PllLockState
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSSD1963_ResetInit
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulatedAdjust
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiSignalStrength
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueSignal
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> toptitledlg.o(i.ShowTopTitleDlg)
</UL>
<P><STRONG><a name="[383]"></a>ShowBatteryState</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, toptitledlg.o(i.ShowBatteryState))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = ShowBatteryState &rArr; GUI_FillRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[e9]"></a>Callback</STRONG> (Thumb, 3298 bytes, Stack size 120 bytes, mainmenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485Config
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNormalHighVoltageGoal
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasDivideRegHole
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckDetDelayIsSame
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetFactoryCodeIsRulePass
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Slave
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Master
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasAccreditInfoFileForDL
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSoftwareUpdateDlg
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarMaskRegDetDlg
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuMoreDlg
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoManageDlg
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastInfoVerifyDlg
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWaitRegListViewDlgSelIndex
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveInfoListViewDlgListViewSelIndex
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNetInfoDlgListViewSelIndex
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OpenDetCmdDelayInterval
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueStatus
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelaySampleProcessInit
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxIsShow
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainmenudlg.o(i.ShowMainMenuDlg)
</UL>
<P><STRONG><a name="[ea]"></a>Callback</STRONG> (Thumb, 672 bytes, Stack size 120 bytes, mainmenumoredlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDetFactoryCodeIsRulePass
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetMenuDlg
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainmenumoredlg.o(i.ShowMainMenuMoreDlg)
</UL>
<P><STRONG><a name="[2ef]"></a>BackKey</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, blastenterdlg.o(i.BackKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = BackKey &rArr; ShowNetTestReportDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[b5]"></a>Callback</STRONG> (Thumb, 1950 bytes, Stack size 104 bytes, blastenterdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1096 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueDkeyInfo
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyUserInfoVerify
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyGpsIsPass
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSFormatConvert
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AccreditAreaVerifyForDL
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAccreditErrorForDLDlg
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetPasswordMode
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatVoltageToAccumulated
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastEnterDlg
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackKey
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveInfoListViewDlgListViewSelIndex
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserStringToMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyUserInfoError
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastenterdlg.o(i.ShowBlastEnterDlg)
</UL>
<P><STRONG><a name="[ed]"></a>Callback</STRONG> (Thumb, 2720 bytes, Stack size 144 bytes, netinfodlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; DeleteDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnDelay
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp2
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyMenuDlg
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifySingleDlg
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifyBatchDlg
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netinfodlg.o(i.ShowNetInfoDlg)
</UL>
<P><STRONG><a name="[3c7]"></a>ScanBar</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, netinfodlg.o(i.ScanBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = ScanBar &rArr; TaskCreate &rArr; PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[3c5]"></a>ShowListViewData</STRONG> (Thumb, 604 bytes, Stack size 40 bytes, netinfodlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[10a]"></a>Callback</STRONG> (Thumb, 494 bytes, Stack size 120 bytes, waitlincurrentreadydlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowProgbarQuickDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarQuickDlg
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarQuickBeforeBlastDlg
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarCompleteDlg
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarBlastDlg
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waitlincurrentreadydlg.o(i.ShowWaitLinCurrentReadyDlg)
</UL>
<P><STRONG><a name="[f3]"></a>Callback</STRONG> (Thumb, 1886 bytes, Stack size 144 bytes, nettestreportdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 848 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowBlastCannelConfirm &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemoteBlastSlaveStateDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastInfoVerifyDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNetTestErrorListViewDlgListViewSelIndex
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nettestreportdlg.o(i.ShowNetTestReportDlg)
</UL>
<P><STRONG><a name="[2f2]"></a>BackKey</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, nettesterrorlistviewdlg.o(i.BackKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = BackKey &rArr; ShowNetTestReportDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetMenuDlg
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastTestReportDlg
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[f2]"></a>Callback</STRONG> (Thumb, 2960 bytes, Stack size 144 bytes, nettesterrorlistviewdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; DeleteDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetErrorDetIndex
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfoNotSave
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp2
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteStatusDlg
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BackKey
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> nettesterrorlistviewdlg.o(i.ShowNetTestErrorListViewDlg)
</UL>
<P><STRONG><a name="[3e6]"></a>ShowListViewData</STRONG> (Thumb, 302 bytes, Stack size 40 bytes, nettesterrorlistviewdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetErrorDetIndex
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[f1]"></a>Callback</STRONG> (Thumb, 1370 bytes, Stack size 96 bytes, netparammodifydlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; InitUserDataToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserDataToMULTIEDIT
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamListViewDlg
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamModifyDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netparammodifydlg.o(i.ShowNetParamModifyDlg)
</UL>
<P><STRONG><a name="[be]"></a>Callback</STRONG> (Thumb, 1436 bytes, Stack size 88 bytes, blasttestreportdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1080 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNormalHighVoltageGoal
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasterIs04
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastProcessDlg
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNetTestErrorListViewDlgListViewSelIndex
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispDecSpace
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blasttestreportdlg.o(i.ShowBlastTestReportDlg)
</UL>
<P><STRONG><a name="[b8]"></a>Callback</STRONG> (Thumb, 1524 bytes, Stack size 104 bytes, blastprocessdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; BlastSingleSelfTest &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetOfflinePossible
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSelfTest
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowProgbarChargeDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxIsShow
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessBlastDetDlg
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDetDlg
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDelayDlg
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastProcessDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastprocessdlg.o(i.ShowBlastProcessDlg)
</UL>
<P><STRONG><a name="[ca]"></a>Callback</STRONG> (Thumb, 684 bytes, Stack size 120 bytes, deletedetmenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; DeleteAllDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllDetInfo
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllErrorDetInfo
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetMenuDlg
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuMoreDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetInputHoleInfoDlg
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNetTestErrorListViewDlgListViewSelIndex
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> deletedetmenudlg.o(i.ShowDeleteDetMenuDlg)
</UL>
<P><STRONG><a name="[c9]"></a>Callback</STRONG> (Thumb, 1848 bytes, Stack size 104 bytes, deletedetinputholeinfodlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1168 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; DeleteDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfo
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteDetMenuDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp2
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserDataToMULTIEDIT
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUserDataToMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInputInsideSole
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> deletedetinputholeinfodlg.o(i.ShowDeleteDetInputHoleInfoDlg)
</UL>
<P><STRONG><a name="[3f6]"></a>GetInputInsideSole</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, deletedetinputholeinfodlg.o(i.GetInputInsideSole))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GetInputInsideSole &rArr; GetCurrentHoleMaxMinRegInside &rArr; U16DataFallRank
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleNameDetCount
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleMaxMinRegInside
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[c2]"></a>Callback</STRONG> (Thumb, 1946 bytes, Stack size 112 bytes, delaymodifybatchdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegHoleMinIndexFromHoleRange
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayParamVerify
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayModifyBaseOnParam
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNetInfoDlgListViewSelIndex
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifyBatchDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> delaymodifybatchdlg.o(i.ShowDelayModifyBatchDlg)
</UL>
<P><STRONG><a name="[c3]"></a>Callback</STRONG> (Thumb, 822 bytes, Stack size 96 bytes, delaymodifysingledlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ClearUserDataToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUserDataToMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> delaymodifysingledlg.o(i.ShowDelayModifySingleDlg)
</UL>
<P><STRONG><a name="[e5]"></a>Callback</STRONG> (Thumb, 616 bytes, Stack size 120 bytes, infomanagedlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceInfoDlg
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> infomanagedlg.o(i.ShowInfoManageDlg)
</UL>
<P><STRONG><a name="[dc]"></a>Callback</STRONG> (Thumb, 1546 bytes, Stack size 224 bytes, deviceinfodlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ReadSpecifiedFileData &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IPAddrU32ToString
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSpecifiedFileData
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoManageDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GBKStringToUTF8
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> deviceinfodlg.o(i.ShowDeviceInfoDlg)
</UL>
<P><STRONG><a name="[bb]"></a>Callback</STRONG> (Thumb, 1968 bytes, Stack size 128 bytes, blastrecorderlistviewdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 920 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderDeviceUsages
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlastRecorderDeviceName
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoManageDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUploadBlastRecordDlg
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderMasterBriefDlg
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetailedDlg
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastrecorderlistviewdlg.o(i.ShowBlastRecorderListViewDlg)
</UL>
<P><STRONG><a name="[402]"></a>ShowListViewData</STRONG> (Thumb, 542 bytes, Stack size 168 bytes, blastrecorderlistviewdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ConfigFileVerify
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[107]"></a>Callback</STRONG> (Thumb, 1504 bytes, Stack size 120 bytes, systemsetmenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowBlueHostStatusDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuMoreDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSliderDlg
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveNumberSetDlg
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMasterTimeShareSetDlg
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceUsagesSetDlg
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceNameSetDlg
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetTypeSetDlg
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowColorSetDlg
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNetParamListViewDlgSelIndex
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamListViewDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> systemsetmenudlg.o(i.ShowSystemSetMenuDlg)
</UL>
<P><STRONG><a name="[105]"></a>Callback</STRONG> (Thumb, 3388 bytes, Stack size 88 bytes, sliderdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetRange
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetNumTicks
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sliderdlg.o(i.ShowSliderDlg)
</UL>
<P><STRONG><a name="[b3]"></a>Callback</STRONG> (Thumb, 652 bytes, Stack size 104 bytes, blastdelaydlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 808 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowBlastCannelConfirm &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDetDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastdelaydlg.o(i.ShowBlastDelayDlg)
</UL>
<P><STRONG><a name="[b4]"></a>Callback</STRONG> (Thumb, 2336 bytes, Stack size 144 bytes, blastdetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStartBlastTask
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBlasterRecord
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBlasterRecordUploadState
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlasteFireTime
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastSingleSendedResult
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPowerOffDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxIsShow
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveTo
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastProcessDlg
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastdetdlg.o(i.ShowBlastDetDlg)
</UL>
<P><STRONG><a name="[f4]"></a>Callback</STRONG> (Thumb, 428 bytes, Stack size 16 bytes, poweroffdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1176 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_CloseShow
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Address Reference Count : 1]<UL><LI> poweroffdlg.o(i.ShowPowerOffDlg)
</UL>
<P><STRONG><a name="[df]"></a>Callback</STRONG> (Thumb, 1442 bytes, Stack size 80 bytes, devicestartdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1200 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; SystemHardwareInit &rArr; FileSystemTest &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemHardwareInit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSetBright
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowFileSystemFormatDlg
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogo
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> devicestartdlg.o(i.ShowDeviceStartDlg)
</UL>
<P><STRONG><a name="[e1]"></a>Callback</STRONG> (Thumb, 1664 bytes, Stack size 104 bytes, dkeypasswdmodifydlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 952 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; InitUserStringToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueDkeyModifyUserInfo
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetPasswordMode
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatVoltageToAccumulated
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserStringToMULTIEDIT
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyUserInfoError
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyPasswdModifyDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dkeypasswdmodifydlg.o(i.ShowDkeyPasswdModifyDlg)
</UL>
<P><STRONG><a name="[e4]"></a>Callback</STRONG> (Thumb, 1754 bytes, Stack size 120 bytes, helptoolmenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSoftwareUpdateDlg
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuMoreDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetSetDlg
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogRecorderListViewDlg
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolDetTestDlg
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceSelfTestDlg
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateTypeSelDlg
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystDlg
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> helptoolmenudlg.o(i.ShowHelpToolMenuDlg)
</UL>
<P><STRONG><a name="[e3]"></a>Callback</STRONG> (Thumb, 1780 bytes, Stack size 120 bytes, helptooldettestdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; XA3_DetCheckIn &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetType
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetTypeName
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputRight
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputError
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolDetTestDlg
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> helptooldettestdlg.o(i.ShowHelpToolDetTestDlg)
</UL>
<P><STRONG><a name="[cd]"></a>Callback</STRONG> (Thumb, 2532 bytes, Stack size 128 bytes, detanalystdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; XA3_DetCheckIn &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetType
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCodeRulePass
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetTypeName
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutLVVoltage
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystHighVoltageInputDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detanalystdlg.o(i.ShowDetAnalystDlg)
</UL>
<P><STRONG><a name="[10e]"></a>Callback</STRONG> (Thumb, 798 bytes, Stack size 128 bytes, wifinetinfodlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiPasswordDlg
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetListViewSelcet
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifinetinfodlg.o(i.ShowWifiNetInfoDlg)
</UL>
<P><STRONG><a name="[432]"></a>SetListViewSelcet</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, wifinetinfodlg.o(i.SetListViewSelcet))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = SetListViewSelcet &rArr; LISTVIEW_SetSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[431]"></a>ShowListViewData</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, wifinetinfodlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[db]"></a>Callback</STRONG> (Thumb, 438 bytes, Stack size 16 bytes, devicechargestartdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowDeviceStartDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdBrightRefreshProcess
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942Init
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeviceStartDlg
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTC2942BatAccumulated
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WriteBit
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> devicechargestartdlg.o(i.ShowDeviceChargeStartDlg)
</UL>
<P><STRONG><a name="[435]"></a>ShowBatteryState</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, devicechargestartdlg.o(i.ShowBatteryState))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = ShowBatteryState &rArr; GUI_DispStringHCenterAt &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_FillRect
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[10f]"></a>Callback</STRONG> (Thumb, 452 bytes, Stack size 96 bytes, wifinetinitdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 792 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInfoDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifinetinitdlg.o(i.ShowWifiNetInitDlg)
</UL>
<P><STRONG><a name="[111]"></a>Callback</STRONG> (Thumb, 1596 bytes, Stack size 104 bytes, wifipassworddlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ResizeWindow
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiConnectDlg
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetWrapChar
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInfoDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifipassworddlg.o(i.ShowWifiPasswordDlg)
</UL>
<P><STRONG><a name="[110]"></a>Callback</STRONG> (Thumb, 848 bytes, Stack size 104 bytes, wifinetsetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 808 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInitDlg
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiNetInfoDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wifinetsetdlg.o(i.ShowWifiNetSetDlg)
</UL>
<P><STRONG><a name="[109]"></a>Callback</STRONG> (Thumb, 1012 bytes, Stack size 120 bytes, uploadblastrecorddlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WM_Paint &rArr; WM_Update &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUnlock
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiLock
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSafeMonitor
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uploadblastrecorddlg.o(i.ShowUploadBlastRecordDlg)
</UL>
<P><STRONG><a name="[f0]"></a>Callback</STRONG> (Thumb, 1290 bytes, Stack size 144 bytes, netparamlistviewdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 800 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllRegDetRankBaseOnHoleInfo
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetParamModifyDlg
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netparamlistviewdlg.o(i.ShowNetParamListViewDlg)
</UL>
<P><STRONG><a name="[441]"></a>ShowListViewData</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, netparamlistviewdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[106]"></a>Callback</STRONG> (Thumb, 1698 bytes, Stack size 144 bytes, softwareupdatedlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUnlock
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiLock
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSafeMonitor
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softwareupdatedlg.o(i.ShowSoftwareUpdateDlg)
</UL>
<P><STRONG><a name="[b6]"></a>Callback</STRONG> (Thumb, 1622 bytes, Stack size 120 bytes, blastinfoverifydlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1112 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveInfoListViewDlgListViewSelIndex
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueStatus
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateBlueTypeSelDlg
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastinfoverifydlg.o(i.ShowBlastInfoVerifyDlg)
</UL>
<P><STRONG><a name="[de]"></a>Callback</STRONG> (Thumb, 1558 bytes, Stack size 120 bytes, deviceselftestdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowHelpToolMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> deviceselftestdlg.o(i.ShowDeviceSelfTestDlg)
</UL>
<P><STRONG><a name="[e0]"></a>Callback</STRONG> (Thumb, 930 bytes, Stack size 128 bytes, deviceusagessetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> deviceusagessetdlg.o(i.ShowDeviceUsagesSetDlg)
</UL>
<P><STRONG><a name="[dd]"></a>Callback</STRONG> (Thumb, 1234 bytes, Stack size 144 bytes, devicenamesetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 848 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetScrollbarColor
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetFont
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetBkColor
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetAutoScrollV
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListBoxData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> devicenamesetdlg.o(i.ShowDeviceNameSetDlg)
</UL>
<P><STRONG><a name="[449]"></a>ShowListBoxData</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, devicenamesetdlg.o(i.ShowListBoxData))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = ShowListBoxData &rArr; LISTBOX_AddString &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetNumItems
<LI><a href="#[6e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DeleteItem
<LI><a href="#[6cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddString
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[100]"></a>Callback</STRONG> (Thumb, 814 bytes, Stack size 88 bytes, remoteblastslavestatedlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowMainMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> remoteblastslavestatedlg.o(i.ShowRemoteBlastSlaveStateDlg)
</UL>
<P><STRONG><a name="[103]"></a>Callback</STRONG> (Thumb, 632 bytes, Stack size 72 bytes, slavenumbersetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; InitUserDataToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserDataToMULTIEDIT
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveNumberSetDlg
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slavenumbersetdlg.o(i.ShowSlaveNumberSetDlg)
</UL>
<P><STRONG><a name="[102]"></a>Callback</STRONG> (Thumb, 3542 bytes, Stack size 136 bytes, slaveinfolistviewdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 840 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowBlastCannelConfirm &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveInitState
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxIsShow
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveTimerHandleToBuffer
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveTimerHandleAndDeleteById
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearTimerHandleBuffer
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNetTestErrorListViewDlgListViewSelIndex
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveAccreditErrorForDLDlg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastMasterProcessDlg
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveEnterMainMenuDlg
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slaveinfolistviewdlg.o(i.ShowSlaveInfoListViewDlg)
</UL>
<P><STRONG><a name="[44f]"></a>ShowListViewData</STRONG> (Thumb, 1000 bytes, Stack size 32 bytes, slaveinfolistviewdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[b7]"></a>Callback</STRONG> (Thumb, 1004 bytes, Stack size 72 bytes, blastmasterprocessdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowBlastCannelConfirm &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlasterIs04
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveErrorCount
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveInfoListViewDlg
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlaveInfoListViewDlgListViewSelIndex
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDetDlg
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastDelayDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastMasterProcessDlg
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastmasterprocessdlg.o(i.ShowBlastMasterProcessDlg)
</UL>
<P><STRONG><a name="[bf]"></a>Callback</STRONG> (Thumb, 1844 bytes, Stack size 184 bytes, bluehoststatusdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 864 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastEnterDlg
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateTypeSelDlg
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDkeyPasswdModifyDlg
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueInsertMenuDlg
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueBackupMenuDlg
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlueSlaveFilter
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bluehoststatusdlg.o(i.ShowBlueHostStatusDlg)
</UL>
<P><STRONG><a name="[456]"></a>ShowListViewData</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, bluehoststatusdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[cf]"></a>Callback</STRONG> (Thumb, 1686 bytes, Stack size 120 bytes, detbackupbluetypeseldlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ValidateDetTypeAndDelay &rArr; DeleteAllDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetTypeAndDelay
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ValidateDetType
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileIsExist
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastInfoVerifyDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveStatusDlg
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetSlaveBackupMenuDlg
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detbackupbluetypeseldlg.o(i.ShowDetBackupBlueTypeSelDlg)
</UL>
<P><STRONG><a name="[d2]"></a>Callback</STRONG> (Thumb, 1868 bytes, Stack size 144 bytes, detbluebackupmenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; GetBlueSlaveDetNumberAndType &rArr; GetDecValueFromSeparator &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FormatIsSameForDetInfo
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskStkChk
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveVersion
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlueSlaveDetNumberAndType
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueBackupMenuDlg
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detbluebackupmenudlg.o(i.ShowDetBlueBackupMenuDlg)
</UL>
<P><STRONG><a name="[104]"></a>Callback</STRONG> (Thumb, 480 bytes, Stack size 88 bytes, slavestatusdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ReadAllDetInfo &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Slave
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slavestatusdlg.o(i.ShowSlaveStatusDlg)
</UL>
<P><STRONG><a name="[d9]"></a>Callback</STRONG> (Thumb, 1734 bytes, Stack size 120 bytes, detslavebackupmenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ReadAllDetInfo &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Slave
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Master
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetSlaveBackupMenuDlg
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detslavebackupmenudlg.o(i.ShowDetSlaveBackupMenuDlg)
</UL>
<P><STRONG><a name="[ba]"></a>Callback</STRONG> (Thumb, 658 bytes, Stack size 88 bytes, blastrecorderdetaileddlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowData &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderSlaveInfoListDlg
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetInfoListDlg
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastrecorderdetaileddlg.o(i.ShowBlastRecorderDetailedDlg)
</UL>
<P><STRONG><a name="[45f]"></a>ShowData</STRONG> (Thumb, 1632 bytes, Stack size 152 bytes, blastrecorderdetaileddlg.o(i.ShowData))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = ShowData &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[b9]"></a>Callback</STRONG> (Thumb, 1350 bytes, Stack size 144 bytes, blastrecorderdetinfolistdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 920 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderSlaveInfoListDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastrecorderdetinfolistdlg.o(i.ShowBlastRecorderDetInfoListDlg)
</UL>
<P><STRONG><a name="[462]"></a>ShowListViewData</STRONG> (Thumb, 490 bytes, Stack size 152 bytes, blastrecorderdetinfolistdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 776 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[bc]"></a>Callback</STRONG> (Thumb, 520 bytes, Stack size 88 bytes, blastrecordermasterbriefdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowData &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderSlaveInfoListDlg
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastrecordermasterbriefdlg.o(i.ShowBlastRecorderMasterBriefDlg)
</UL>
<P><STRONG><a name="[463]"></a>ShowData</STRONG> (Thumb, 440 bytes, Stack size 152 bytes, blastrecordermasterbriefdlg.o(i.ShowData))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = ShowData &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[bd]"></a>Callback</STRONG> (Thumb, 1368 bytes, Stack size 152 bytes, blastrecorderslaveinfolistdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 888 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderDetailedDlg
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastRecorderListViewDlg
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetItemText
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastrecorderslaveinfolistdlg.o(i.ShowBlastRecorderSlaveInfoListDlg)
</UL>
<P><STRONG><a name="[464]"></a>ShowListViewData</STRONG> (Thumb, 310 bytes, Stack size 112 bytes, blastrecorderslaveinfolistdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 736 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetConfigFileString
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBlasterPath
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[f5]"></a>Callback</STRONG> (Thumb, 908 bytes, Stack size 104 bytes, progbarblastdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDifferentColor
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastTestReportDlg
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNetTestErrorListViewDlgListViewSelIndex
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbarblastdlg.o(i.ShowProgbarBlastDlg)
</UL>
<P><STRONG><a name="[46c]"></a>UpdateBar</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, progbarblastdlg.o(i.UpdateBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = UpdateBar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[f6]"></a>Callback</STRONG> (Thumb, 714 bytes, Stack size 120 bytes, progbarchargedlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowRemoteBlastSlaveStateDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetOnlineCount
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemoteBlastSlaveStateDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDifferentColor
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastProcessDlg
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbarchargedlg.o(i.ShowProgbarChargeDlg)
</UL>
<P><STRONG><a name="[f7]"></a>Callback</STRONG> (Thumb, 596 bytes, Stack size 104 bytes, progbarcompletedlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDifferentColor
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbarcompletedlg.o(i.ShowProgbarCompleteDlg)
</UL>
<P><STRONG><a name="[46f]"></a>UpdateBar</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, progbarcompletedlg.o(i.UpdateBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = UpdateBar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[fa]"></a>Callback</STRONG> (Thumb, 692 bytes, Stack size 104 bytes, progbarquickdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDifferentColor
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbarquickdlg.o(i.ShowProgbarQuickDlg)
</UL>
<P><STRONG><a name="[470]"></a>UpdateBar</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, progbarquickdlg.o(i.UpdateBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = UpdateBar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[f9]"></a>Callback</STRONG> (Thumb, 652 bytes, Stack size 104 bytes, progbarquickbeforeblastdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1264 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestReportDlg
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDifferentColor
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlastTerminationFromAppDlg
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskSuspend
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskResume
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbarquickbeforeblastdlg.o(i.ShowProgbarQuickBeforeBlastDlg)
</UL>
<P><STRONG><a name="[471]"></a>UpdateBar</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, progbarquickbeforeblastdlg.o(i.UpdateBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = UpdateBar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[f8]"></a>Callback</STRONG> (Thumb, 728 bytes, Stack size 128 bytes, progbarmaskregdetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 824 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HasDivideRegHole
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearProgbarData
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWaitRegListViewDlgSelIndex
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDifferentColor
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBar
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetTextColor
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetMinMax
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetFont
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetBarColor
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbarmaskregdetdlg.o(i.ShowProgbarMaskRegDetDlg)
</UL>
<P><STRONG><a name="[472]"></a>UpdateBar</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, progbarmaskregdetdlg.o(i.UpdateBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = UpdateBar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[c6]"></a>Callback</STRONG> (Thumb, 516 bytes, Stack size 120 bytes, delaysampleprocessdelayseldlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 824 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRegDetDelay
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessWaitRegDetDlg
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelayInputDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> delaysampleprocessdelayseldlg.o(i.ShowDelaySampleProcessDelaySelDlg)
</UL>
<P><STRONG><a name="[c5]"></a>Callback</STRONG> (Thumb, 712 bytes, Stack size 96 bytes, delaysampleprocessdelayinputdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 960 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; InitUserDataToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRegDetDelay
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserDataToMULTIEDIT
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessWaitRegDetDlg
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelayInputDlg
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelaySelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> delaysampleprocessdelayinputdlg.o(i.ShowDelaySampleProcessDelayInputDlg)
</UL>
<P><STRONG><a name="[c8]"></a>Callback</STRONG> (Thumb, 1852 bytes, Stack size 120 bytes, delaysampleprocesswaitregdetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; XA3_DetCheckIn &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetType
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRS485Master
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetTypeName
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485TxPinExitUartConfig
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessDelaySelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> delaysampleprocesswaitregdetdlg.o(i.ShowDelaySampleProcessWaitRegDetDlg)
</UL>
<P><STRONG><a name="[479]"></a>SaveConfim</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, delaysampleprocesswaitregdetdlg.o(i.SaveConfim))
<BR><BR>[Stack]<UL><LI>Max Depth = 720 + Unknown Stack Size
<LI>Call Chain = SaveConfim &rArr; ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[478]"></a>ScanBar</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, delaysampleprocesswaitregdetdlg.o(i.ScanBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = ScanBar &rArr; TaskCreate &rArr; PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[c4]"></a>Callback</STRONG> (Thumb, 752 bytes, Stack size 120 bytes, delaysampleprocessblastdetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; DeleteAllDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllDetInfo
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System168MDelay1ms
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStartBlastTask
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlasteFireTime
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessWaitRegDetDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> delaysampleprocessblastdetdlg.o(i.ShowDelaySampleProcessBlastDetDlg)
</UL>
<P><STRONG><a name="[c7]"></a>Callback</STRONG> (Thumb, 378 bytes, Stack size 96 bytes, delaysampleprocessreadyconfirmdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowMainMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelaySampleProcessWaitRegDetDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> delaysampleprocessreadyconfirmdlg.o(i.ShowDelaySampleProcessReadyConfirmDlg)
</UL>
<P><STRONG><a name="[d1]"></a>Callback</STRONG> (Thumb, 430 bytes, Stack size 120 bytes, detbackupoperatetypeseldlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowHelpToolMenuDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateBlueTypeSelDlg
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupBlueTypeSelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detbackupoperatetypeseldlg.o(i.ShowDetBackupOperateTypeSelDlg)
</UL>
<P><STRONG><a name="[d0]"></a>Callback</STRONG> (Thumb, 442 bytes, Stack size 120 bytes, detbackupoperatebluetypeseldlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowBlueHostStatusDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlueHostStatusDlg
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastInfoVerifyDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateTypeSelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detbackupoperatebluetypeseldlg.o(i.ShowDetBackupOperateBlueTypeSelDlg)
</UL>
<P><STRONG><a name="[d7]"></a>Callback</STRONG> (Thumb, 1002 bytes, Stack size 96 bytes, detinfoinsertrangeinputdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueInsertMenuDlg
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateBlueTypeSelDlg
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInfoInsertStatusDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detinfoinsertrangeinputdlg.o(i.ShowDetInsertRangeInputDlg)
</UL>
<P><STRONG><a name="[d6]"></a>Callback</STRONG> (Thumb, 884 bytes, Stack size 120 bytes, detinfoinsertstatusdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ReadAllDetInfo &rArr; f_open &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBlueInsertMenuDlg
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateBlueTypeSelDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detinfoinsertstatusdlg.o(i.ShowDetInfoInsertStatusDlg)
</UL>
<P><STRONG><a name="[d3]"></a>Callback</STRONG> (Thumb, 464 bytes, Stack size 120 bytes, detblueinsertmenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowDetInsertRangeInputDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetBackupOperateBlueTypeSelDlg
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetInsertRangeInputDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detblueinsertmenudlg.o(i.ShowDetBlueInsertMenuDlg)
</UL>
<P><STRONG><a name="[ee]"></a>Callback</STRONG> (Thumb, 528 bytes, Stack size 120 bytes, netinfomodifymenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; SaveUserConfigParam &rArr; f_mkdir &rArr; dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyRangeInputDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netinfomodifymenudlg.o(i.ShowNetInfoModifyMenuDlg)
</UL>
<P><STRONG><a name="[ef]"></a>Callback</STRONG> (Thumb, 2132 bytes, Stack size 112 bytes, netinfomodifyrangeinputdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 976 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; InitUserDataToMULTIEDIT &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegDetHoleMax
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleNameDetCount
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HoleMove
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserDataToMULTIEDIT
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetInfoModifyMenuDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> netinfomodifyrangeinputdlg.o(i.ShowNetInfoModifyRangeInputDlg)
</UL>
<P><STRONG><a name="[c0]"></a>Callback</STRONG> (Thumb, 824 bytes, Stack size 88 bytes, buserrorrestoredlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 408 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusIsShort
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buserrorrestoredlg.o(i.ShowBusErrorRestoreDlg)
</UL>
<P><STRONG><a name="[ce]"></a>Callback</STRONG> (Thumb, 1530 bytes, Stack size 96 bytes, detanalysthighvoltageinputdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1256 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeGet
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNormalHighVoltageGoal
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setDacHvValueMinFromVoltage
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DacOutHVVoltage
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystDlg
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystBlastDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detanalysthighvoltageinputdlg.o(i.ShowDetAnalystHighVoltageInputDlg)
</UL>
<P><STRONG><a name="[cc]"></a>Callback</STRONG> (Thumb, 700 bytes, Stack size 88 bytes, detanalystblastdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1248 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetNormalHighVoltageGoal
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CreateStartBlastTask
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveBlasteFireTime
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAnalystDlg
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detanalystblastdlg.o(i.ShowDetAnalystBlastDlg)
</UL>
<P><STRONG><a name="[d4]"></a>Callback</STRONG> (Thumb, 556 bytes, Stack size 120 bytes, detcodewritemenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowDetCodeWriteStatusDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetFont
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteStatusDlg
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetOutsideInputDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detcodewritemenudlg.o(i.ShowDetCodeWriteMenuDlg)
</UL>
<P><STRONG><a name="[d5]"></a>Callback</STRONG> (Thumb, 2590 bytes, Stack size 120 bytes, detcodewritestatusdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1272 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; XA3_DetCheckIn &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutput
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNetTestErrorListViewDlg
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detcodewritestatusdlg.o(i.ShowDetCodeWriteStatusDlg)
</UL>
<P><STRONG><a name="[482]"></a>ScanBar</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, detcodewritestatusdlg.o(i.ScanBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = ScanBar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
</UL>
<BR>[Called By]<UL><LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[10d]"></a>Callback</STRONG> (Thumb, 578 bytes, Stack size 120 bytes, wificonnectdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowWifiPasswordDlg &rArr; GUI_CreateDialogBox &rArr; WM_SetFocusOnNextChild &rArr; _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWifiPasswordDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wificonnectdlg.o(i.ShowWifiConnectDlg)
</UL>
<P><STRONG><a name="[e7]"></a>Callback</STRONG> (Thumb, 1540 bytes, Stack size 128 bytes, logrecorderlistviewdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 824 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLogFileSize
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetTextAlign
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogUploadDlg
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logrecorderlistviewdlg.o(i.ShowLogRecorderListViewDlg)
</UL>
<P><STRONG><a name="[483]"></a>ShowListViewData</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, logrecorderlistviewdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[e8]"></a>Callback</STRONG> (Thumb, 1348 bytes, Stack size 128 bytes, loguploaddlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiUnlock
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiLock
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemUnlock
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FileSystemLock
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSafeMonitor
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolMenuDlg
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogRecorderListViewDlg
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> loguploaddlg.o(i.ShowLogUploadDlg)
</UL>
<P><STRONG><a name="[e2]"></a>Callback</STRONG> (Thumb, 474 bytes, Stack size 16 bytes, filesystemformatdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 632 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WM_Paint &rArr; WM_Update &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
</UL>
<BR>[Address Reference Count : 1]<UL><LI> filesystemformatdlg.o(i.ShowFileSystemFormatDlg)
</UL>
<P><STRONG><a name="[b2]"></a>Callback</STRONG> (Thumb, 744 bytes, Stack size 120 bytes, blastcanneldlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAllDetInfo
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateTextPointCount
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastcanneldlg.o(i.ShowBlastCannelDlg)
</UL>
<P><STRONG><a name="[c1]"></a>Callback</STRONG> (Thumb, 1466 bytes, Stack size 128 bytes, colorsetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 744 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WM_Paint &rArr; WM_Update &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGuiDefaultColor
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Paint
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> colorsetdlg.o(i.ShowColorSetDlg)
</UL>
<P><STRONG><a name="[25f]"></a>AllUnRegFollow</STRONG> (Thumb, 130 bytes, Stack size 16 bytes, waitreglistviewdlg.o(i.AllUnRegFollow))
<BR><BR>[Stack]<UL><LI>Max Depth = 712 + Unknown Stack Size
<LI>Call Chain = AllUnRegFollow &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegDetIndexFirst
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[10c]"></a>Callback</STRONG> (Thumb, 3486 bytes, Stack size 288 bytes, waitreglistviewdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1472 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; SaveConfim &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetCheckIn
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskIsExist
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetType
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDelReq
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLoadingDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxIsShow
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseLoadingDlg
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetTypeName
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputError
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeDataAnalyst
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegParamMenuDlg
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegDetFeatureInputForBarcodeDlg
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst18ForBoxSmall
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17ForBoxBig
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ScanBar
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllUnRegFollow
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waitreglistviewdlg.o(i.ShowWaitRegListViewDlg)
</UL>
<P><STRONG><a name="[489]"></a>SaveConfim</STRONG> (Thumb, 854 bytes, Stack size 72 bytes, waitreglistviewdlg.o(i.SaveConfim))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = SaveConfim &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetNum
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorString1ForDL
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputRight
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputError
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[488]"></a>ScanBar</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, waitreglistviewdlg.o(i.ScanBar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = ScanBar &rArr; TaskCreate &rArr; PublicStkUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[486]"></a>ShowListViewData</STRONG> (Thumb, 466 bytes, Stack size 40 bytes, waitreglistviewdlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemTextColor
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveConfim
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[ff]"></a>Callback</STRONG> (Thumb, 1634 bytes, Stack size 24 bytes, regparammenudlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1024 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; DeleteAllDetInfo &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAllDetInfo
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegDetHoleMax
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteDetInfoNotChangeRank
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWaitRegListViewDlgSelIndex
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_EndDialog
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWindowParam
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHelpToolDetTestDlg
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDelayModifySingleDlg
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleParamInputDlg
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegHoleInsertInputDlg
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegDetOutsideInputBatchDlg
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRegParamMenuDlg
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitRegListViewDlgSelIndex
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> regparammenudlg.o(i.ShowRegParamMenuDlg)
</UL>
<P><STRONG><a name="[fe]"></a>Callback</STRONG> (Thumb, 1662 bytes, Stack size 112 bytes, regholeparaminputdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfo
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RegHoleInit
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleNameDetCount
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCurrentHoleMaxMinRegInside
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveNetParam
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWaitRegListViewDlgSelIndex
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitRegListViewDlgSelIndex
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> regholeparaminputdlg.o(i.ShowRegHoleParamInputDlg)
</UL>
<P><STRONG><a name="[fd]"></a>Callback</STRONG> (Thumb, 1592 bytes, Stack size 112 bytes, regholeinsertinputdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 944 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegDetHoleMax
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcRegHoleDelayFromNetParam
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetRegStatus
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWaitRegListViewDlgSelIndex
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitRegListViewDlgSelIndex
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> regholeinsertinputdlg.o(i.ShowRegHoleInsertInputDlg)
</UL>
<P><STRONG><a name="[da]"></a>Callback</STRONG> (Thumb, 756 bytes, Stack size 120 bytes, dettypesetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 824 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetMaxDelay
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveUserConfigParam
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp2
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetTypeSetDlg
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dettypesetdlg.o(i.ShowDetTypeSetDlg)
</UL>
<P><STRONG><a name="[d8]"></a>Callback</STRONG> (Thumb, 1142 bytes, Stack size 96 bytes, detoutsideinputdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 928 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; MULTIEDIT_AddKey &rArr; _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteMenuDlg
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetCodeWriteStatusDlg
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detoutsideinputdlg.o(i.ShowDetOutsideInputDlg)
</UL>
<P><STRONG><a name="[494]"></a>KeyboardStatusUpdate</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, detoutsideinputdlg.o(i.KeyboardStatusUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = KeyboardStatusUpdate &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[fc]"></a>Callback</STRONG> (Thumb, 2066 bytes, Stack size 104 bytes, regdetoutsideinputbatchdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1288 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; CheckInput &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRegDetIndexFirst
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardStatusUpdate
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitRegListViewDlgSelIndex
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> regdetoutsideinputbatchdlg.o(i.ShowRegDetOutsideInputBatchDlg)
</UL>
<P><STRONG><a name="[497]"></a>CheckInput</STRONG> (Thumb, 666 bytes, Stack size 72 bytes, regdetoutsideinputbatchdlg.o(i.CheckInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 1184 + Unknown Stack Size
<LI>Call Chain = CheckInput &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetFactoryCodeIsRulePass
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWaitRegListViewDlgSelIndex
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDecFromMULTIEDIT
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorString2ForDL
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitRegListViewDlgSelIndex
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[496]"></a>KeyboardStatusUpdate</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, regdetoutsideinputbatchdlg.o(i.KeyboardStatusUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = KeyboardStatusUpdate &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[fb]"></a>Callback</STRONG> (Thumb, 1282 bytes, Stack size 112 bytes, regdetfeatureinputforbarcodedlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1392 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; KeyEnter &rArr; CheckInput &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsWindow
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetFeatureDefult
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextColor
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowKeyboardCharSelectList
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInputCursor
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCursor
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUserStringToMULTIEDIT
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearUserDataToMULTIEDIT
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoundOutputRight
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetBkColor
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetScanDataBytes
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst18ForBoxSmall
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17ForBoxBig
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> regdetfeatureinputforbarcodedlg.o(i.ShowRegDetFeatureInputForBarcodeDlg)
</UL>
<P><STRONG><a name="[4a7]"></a>CheckInput</STRONG> (Thumb, 762 bytes, Stack size 96 bytes, regdetfeatureinputforbarcodedlg.o(i.CheckInput))
<BR><BR>[Stack]<UL><LI>Max Depth = 1208 + Unknown Stack Size
<LI>Call Chain = CheckInput &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetIsAccreditPassForDL
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetFactoryCodeIsRulePass
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetOutside2Inside
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckOverlap
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAllDetInfoNotChangeRank
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetWaitRegListViewDlgSelIndex
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorString2ForDL
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst18ForBoxSmall
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BarCodeAnalyst17ForBoxBig
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWaitRegListViewDlgSelIndex
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyEnter
</UL>

<P><STRONG><a name="[499]"></a>KeyEnter</STRONG> (Thumb, 196 bytes, Stack size 72 bytes, regdetfeatureinputforbarcodedlg.o(i.KeyEnter))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = KeyEnter &rArr; CheckInput &rArr; DetIsAccreditPassForDL &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveDetFeature
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitRegListViewDlg
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_GetText
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetTextSize
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_GetText
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckInput
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[cb]"></a>Callback</STRONG> (Thumb, 1930 bytes, Stack size 144 bytes, detaccrediterrorfordldlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1136 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DetCode2UIDStr
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XA3_DetInside2Outside
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWaitLinCurrentReadyDlg
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllAccreditErrorCount
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLoadingDlg
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseLoadingDlg
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelDlg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastCannelConfirm
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSlaveAccreditErrorForDLDlg
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> detaccrediterrorfordldlg.o(i.ShowDetAccreditErrorForDLDlg)
</UL>
<P><STRONG><a name="[49c]"></a>ShowListViewData</STRONG> (Thumb, 240 bytes, Stack size 48 bytes, detaccrediterrorfordldlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[797]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAccreditErrorFile
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorString2ForDL
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[101]"></a>Callback</STRONG> (Thumb, 1598 bytes, Stack size 128 bytes, slaveaccrediterrorfordldlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1120 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadSlaveDetInfo
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAllAccreditErrorCount
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileIndex
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileCount
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDetAccreditErrorForDLDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLoadingDlg
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxRight
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessageColor
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseLoadingDlg
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WindowHasChild
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMsgBox
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxMessage
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxLeft
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxHelp1
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMsgBoxCaption
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MsgBoxInit
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_MoveWindow
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetPageSize
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetNumItems
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetDefaultColor
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Create
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetSel
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetRowHeight
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetGridVis
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetBkColor
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetHeader
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddColumn
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextColor
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetTextAlign
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetHeight
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetBkColor
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBlastMasterProcessDlg
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlaveEnterMainMenuDlg
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowListViewData
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slaveaccrediterrorfordldlg.o(i.ShowSlaveAccreditErrorForDLDlg)
</UL>
<P><STRONG><a name="[4a0]"></a>ShowListViewData</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, slaveaccrediterrorfordldlg.o(i.ShowListViewData))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = ShowListViewData &rArr; LISTVIEW_AddRow &rArr; LISTVIEW__UpdateScrollParas &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileIndex
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorFileCount
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccreditErrorCount
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[70a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_SetItemText
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetNumRows
<LI><a href="#[704]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_DeleteRow
<LI><a href="#[6fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_AddRow
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Callback
</UL>

<P><STRONG><a name="[98]"></a>Callback</STRONG> (Thumb, 548 bytes, Stack size 120 bytes, blastterminationfromappdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TaskCreate
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestInfoInit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenuDlg
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringHCenterAt
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> blastterminationfromappdlg.o(i.BlastTerminationFromAppDlg)
</UL>
<P><STRONG><a name="[10b]"></a>Callback</STRONG> (Thumb, 1340 bytes, Stack size 120 bytes, waitpoweroffdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 1280 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; AllDisCharge &rArr; XA3_ClearAll &rArr; XA3_DetSendAndRec &rArr; DetSendAndRec &rArr; WriteSystemLog &rArr; LogRecordFileInit &rArr; f_unlink &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSystemLog
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDly
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskDel
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AllDisCharge
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UTF8StringToGBK
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetWrapMode
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetTextAlign
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_SetText
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWindowParam
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> waitpoweroffdlg.o(i.ShowWaitPowerOffDlg)
</UL>
<P><STRONG><a name="[eb]"></a>Callback</STRONG> (Thumb, 700 bytes, Stack size 128 bytes, mastertimesharesetdlg.o(i.Callback))
<BR><BR>[Stack]<UL><LI>Max Depth = 832 + Unknown Stack Size
<LI>Call Chain = Callback &rArr; ShowSDCardError &rArr; ShowMsgBox &rArr; GUI_ExecCreatedDialog &rArr; GUI_Exec &rArr; GUI_Exec1 &rArr; WM_Exec &rArr; _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMasterTimeShareTest
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSlaveStateCount
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveMasterTimeShareTest
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSystemSetMenuDlg
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ShowWindow
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsVisible
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientWindow
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_SetText
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetTimerId
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSDCardError
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoTitle
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowInfoHelp
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetInfoString
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetTextColor
<LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetBkColor
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_GetValue
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mastertimesharesetdlg.o(i.ShowMasterTimeShareSetDlg)
</UL>
<P><STRONG><a name="[720]"></a>Lcdc_SpiSend</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, lcdssd1963.o(i.Lcdc_SpiSend))
<BR><BR>[Called By]<UL><LI><a href="#[71b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcdc_Spi_Init
</UL>

<P><STRONG><a name="[71b]"></a>Lcdc_Spi_Init</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, lcdssd1963.o(i.Lcdc_Spi_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = Lcdc_Spi_Init &rArr; OSTimeDlyHMSM &rArr; OSTimeDly &rArr; OS_Sched
</UL>
<BR>[Calls]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTimeDlyHMSM
<LI><a href="#[71f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_Reset
<LI><a href="#[720]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcdc_SpiSend
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LcdSSD1963_ResetInit
</UL>

<P><STRONG><a name="[222]"></a>AdcLock</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, adc.o(i.AdcLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = AdcLock &rArr; OSMutexPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinABAdcValue
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusIsShort
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLowCurrent
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusHighCurrent
</UL>

<P><STRONG><a name="[225]"></a>AdcUnlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, adc.o(i.AdcUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = AdcUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLinABAdcValue
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusIsShort
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDetWaveADCValue
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetChannelxVoltage
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLeakCurrent
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusLowCurrent
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBusHighCurrent
</UL>

<P><STRONG><a name="[6ad]"></a>Key1Key3Scan</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, keyscan.o(i.Key1Key3Scan))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Key1Key3Scan
</UL>
<BR>[Calls]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardScan
</UL>

<P><STRONG><a name="[6b3]"></a>KeyCodeToKeyMsg</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, keyscan.o(i.KeyCodeToKeyMsg))
<BR><BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardScan
</UL>

<P><STRONG><a name="[6b2]"></a>MatrixKeyScan</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, keyscan.o(i.MatrixKeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = MatrixKeyScan &rArr; KeyVerticalOutput &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[6af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyVerticalOutput
<LI><a href="#[6ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyRowOutput
<LI><a href="#[733]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyVertical
<LI><a href="#[734]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadKeyRow
</UL>
<BR>[Called By]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyboardScan
</UL>

<P><STRONG><a name="[734]"></a>ReadKeyRow</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, keyscan.o(i.ReadKeyRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ReadKeyRow &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatrixKeyScan
</UL>

<P><STRONG><a name="[733]"></a>ReadKeyVertical</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, keyscan.o(i.ReadKeyVertical))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = ReadKeyVertical &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MatrixKeyScan
</UL>

<P><STRONG><a name="[894]"></a>WifiInitOS</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, wifi.o(i.WifiInitOS))
<BR><BR>[Stack]<UL><LI>Max Depth = 32 + Unknown Stack Size
<LI>Call Chain = WifiInitOS &rArr; OSMutexCreate
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[7d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WifiConfig
</UL>

<P><STRONG><a name="[518]"></a>FlashDelay</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, flash.o(i.FlashDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = FlashDelay &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareRest
</UL>

<P><STRONG><a name="[51d]"></a>FlashHardwareRest</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, flash.o(i.FlashHardwareRest))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FlashHardwareRest &rArr; FlashDelay &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ResetBits
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareInit
</UL>

<P><STRONG><a name="[51f]"></a>FlashPageCmd</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, flash.o(i.FlashPageCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTransmmitData
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitReady
</UL>
<BR>[Called By]<UL><LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteData
</UL>

<P><STRONG><a name="[525]"></a>FlashSendByte</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, flash.o(i.FlashSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_SendData
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_ReceiveData
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_I2S_GetFlagStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTransmmitData
</UL>

<P><STRONG><a name="[51e]"></a>FlashStatusRegister1</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, flash.o(i.FlashStatusRegister1))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashTransmmitData
</UL>
<BR>[Called By]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashHardwareInit
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitReady
</UL>

<P><STRONG><a name="[521]"></a>FlashWaitReady</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, flash.o(i.FlashWaitReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashStatusRegister1
</UL>
<BR>[Called By]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashPageCmd
</UL>

<P><STRONG><a name="[30e]"></a>search_index</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, base64.o(i.search_index))
<BR><BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Base64Decode
</UL>

<P><STRONG><a name="[549]"></a>GPSLock</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gps.o(i.GPSLock))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = GPSLock &rArr; OSMutexPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPend
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMC_FormatAnalyze
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastGPSInfo
</UL>

<P><STRONG><a name="[548]"></a>GPSPortConfig</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, gps.o(i.GPSPortConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GPSPortConfig &rArr; GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBits
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSConfig
</UL>

<P><STRONG><a name="[550]"></a>GPSUnlock</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gps.o(i.GPSUnlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = GPSUnlock &rArr; OSMutexPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RMC_FormatAnalyze
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastGPSInfo
</UL>

<P><STRONG><a name="[547]"></a>USART6_Config</STRONG> (Thumb, 186 bytes, Stack size 32 bytes, gps.o(i.USART6_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART6_Config &rArr; USART_Init &rArr; RCC_GetClocksFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_AHB1PeriphClockCmd
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinAFConfig
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_APB2PeriphClockCmd
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Init
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ITConfig
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Cmd
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ClearITPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSConfig
</UL>

<P><STRONG><a name="[792]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[793]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetTime
<LI><a href="#[791]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetDate
<LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[796]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, stm32f4xx_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[78f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetTime
<LI><a href="#[78e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetDate
</UL>

<P><STRONG><a name="[7db]"></a>SetSysClock</STRONG> (Thumb, 218 bytes, Stack size 12 bytes, system_stm32f4xx.o(i.SetSysClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SetSysClock
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[75d]"></a>OSTmr_InitTask</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, os_tmr.o(i.OSTmr_InitTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OSTmr_InitTask &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
</UL>
<BR>[Called By]<UL><LI><a href="#[744]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Init
</UL>

<P><STRONG><a name="[75f]"></a>OSTmr_Link</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, os_tmr.o(i.OSTmr_Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OSTmr_Link
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[ab]"></a>OSTmr_Task</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, os_tmr.o(i.OSTmr_Task))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = OSTmr_Task &rArr; OSSemPend &rArr; OS_EventTaskWait
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPend
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedUnlock
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSchedLock
<LI><a href="#[75e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Unlink
<LI><a href="#[75f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Link
</UL>
<BR>[Address Reference Count : 1]<UL><LI> os_tmr.o(i.OSTmr_InitTask)
</UL>
<P><STRONG><a name="[75e]"></a>OSTmr_Unlink</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, os_tmr.o(i.OSTmr_Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OSTmr_Unlink
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTmr_Task
</UL>

<P><STRONG><a name="[74c]"></a>OSMutex_RdyAtPrio</STRONG> (Thumb, 120 bytes, Stack size 12 bytes, os_mutex.o(i.OSMutex_RdyAtPrio))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OSMutex_RdyAtPrio
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSMutexPost
</UL>

<P><STRONG><a name="[73e]"></a>OS_InitEventList</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, os_core.o(i.OS_InitEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_InitEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[73b]"></a>OS_InitMisc</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, os_core.o(i.OS_InitMisc))
<BR><BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[73c]"></a>OS_InitRdyList</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, os_core.o(i.OS_InitRdyList))
<BR><BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[73d]"></a>OS_InitTCBList</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, os_core.o(i.OS_InitTCBList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OS_InitTCBList
</UL>
<BR>[Calls]<UL><LI><a href="#[75c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_MemClr
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[742]"></a>OS_InitTaskIdle</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, os_core.o(i.OS_InitTaskIdle))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskIdle &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[743]"></a>OS_InitTaskStat</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, os_core.o(i.OS_InitTaskStat))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = OS_InitTaskStat &rArr; OSTaskCreateExt &rArr; OS_TCBInit
</UL>
<BR>[Calls]<UL><LI><a href="#[750]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskCreateExt
<LI><a href="#[758]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSTaskNameSet
</UL>
<BR>[Called By]<UL><LI><a href="#[739]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSInit
</UL>

<P><STRONG><a name="[746]"></a>OS_SchedNew</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, os_core.o(i.OS_SchedNew))
<BR><BR>[Called By]<UL><LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSIntExit
<LI><a href="#[74e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSStart
<LI><a href="#[74a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_Sched
</UL>

<P><STRONG><a name="[914]"></a>check_fs</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, ff.o(i.check_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[91c]"></a>chk_chr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ff.o(i.chk_chr))
<BR><BR>[Called By]<UL><LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[916]"></a>cmp_lfn</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, ff.o(i.cmp_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = cmp_lfn
</UL>
<BR>[Calls]<UL><LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
</UL>
<BR>[Called By]<UL><LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[918]"></a>create_chain</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, ff.o(i.create_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[91b]"></a>create_name</STRONG> (Thumb, 604 bytes, Stack size 56 bytes, ff.o(i.create_name))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = create_name &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
<LI><a href="#[917]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_wtoupper
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[91c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[91e]"></a>dir_alloc</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, ff.o(i.dir_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = dir_alloc &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[921]"></a>dir_find</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, ff.o(i.dir_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[923]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[916]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[920]"></a>dir_next</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, ff.o(i.dir_next))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[918]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_chain
</UL>
<BR>[Called By]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[926]"></a>dir_read</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, ff.o(i.dir_read))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = dir_read &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[927]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pick_lfn
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[928]"></a>dir_register</STRONG> (Thumb, 298 bytes, Stack size 48 bytes, ff.o(i.dir_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = dir_register &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[922]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sum_sfn
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[92b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fit_lfn
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[92c]"></a>dir_remove</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, ff.o(i.dir_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = dir_remove &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
</UL>

<P><STRONG><a name="[91f]"></a>dir_sdi</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, ff.o(i.dir_sdi))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[925]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
</UL>

<P><STRONG><a name="[931]"></a>find_volume</STRONG> (Thumb, 886 bytes, Stack size 80 bytes, ff.o(i.find_volume))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = find_volume &rArr; check_fs &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[939]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ldnumber
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[92d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
</UL>

<P><STRONG><a name="[92b]"></a>fit_lfn</STRONG> (Thumb, 122 bytes, Stack size 20 bytes, ff.o(i.fit_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fit_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[932]"></a>follow_path</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, ff.o(i.follow_path))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; create_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[91f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
</UL>

<P><STRONG><a name="[92a]"></a>gen_numname</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, ff.o(i.gen_numname))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gen_numname &rArr; mem_cpy
</UL>
<BR>[Calls]<UL><LI><a href="#[929]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[93c]"></a>get_fileinfo</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, ff.o(i.get_fileinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_fileinfo &rArr; ff_convert
</UL>
<BR>[Calls]<UL><LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ff_convert
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_stat
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
</UL>

<P><STRONG><a name="[939]"></a>get_ldnumber</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ff.o(i.get_ldnumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_ldnumber
</UL>
<BR>[Called By]<UL><LI><a href="#[7d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
</UL>

<P><STRONG><a name="[93a]"></a>ld_clust</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ff.o(i.ld_clust))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_opendir
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[932]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[923]"></a>mem_cmp</STRONG> (Thumb, 38 bytes, Stack size 20 bytes, ff.o(i.mem_cmp))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[929]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(i.mem_cpy))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[92a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gen_numname
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
</UL>

<P><STRONG><a name="[91d]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(i.mem_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkfs
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[91b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[915]"></a>move_window</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ff.o(i.move_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[92f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[7da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_getfree
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
<LI><a href="#[931]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_volume
<LI><a href="#[92c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_remove
<LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[91e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_alloc
<LI><a href="#[914]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
</UL>

<P><STRONG><a name="[927]"></a>pick_lfn</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, ff.o(i.pick_lfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pick_lfn
</UL>
<BR>[Called By]<UL><LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
</UL>

<P><STRONG><a name="[93b]"></a>putc_bfd</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ff.o(i.putc_bfd))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + In Cycle
<LI>Call Chain = putc_bfd &rArr;  putc_bfd (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_puts
<LI><a href="#[898]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_printf
<LI><a href="#[93b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;putc_bfd
</UL>

<P><STRONG><a name="[938]"></a>remove_chain</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ff.o(i.remove_chain))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = remove_chain &rArr; put_fat &rArr; move_window &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[91a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;put_fat
<LI><a href="#[919]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[937]"></a>st_clust</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ff.o(i.st_clust))
<BR><BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[922]"></a>sum_sfn</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, ff.o(i.sum_sfn))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = sum_sfn
</UL>
<BR>[Called By]<UL><LI><a href="#[928]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_register
<LI><a href="#[926]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_read
<LI><a href="#[921]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[933]"></a>sync_fs</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, ff.o(i.sync_fs))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = sync_fs &rArr; sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[924]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_window
<LI><a href="#[91d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
<LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
<LI><a href="#[92e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_unlink
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_rename
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_chmod
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[924]"></a>sync_window</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ff.o(i.sync_window))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sync_window &rArr; disk_write &rArr; FlashWriteData &rArr; FlashPageCmd &rArr; FlashWaitReady &rArr; FlashStatusRegister1 &rArr; FlashTransmmitData &rArr; FlashSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[930]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mkdir
<LI><a href="#[933]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sync_fs
<LI><a href="#[915]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[920]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
</UL>

<P><STRONG><a name="[935]"></a>validate</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ff.o(i.validate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = validate
</UL>
<BR>[Calls]<UL><LI><a href="#[93d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_write
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_readdir
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[934]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_sync
</UL>

<P><STRONG><a name="[4]"></a>USBD_DataInStage</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_DataInStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_DataInStage &rArr; USBD_CtlContinueSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlReceiveStatus
<LI><a href="#[7ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueSendData
<LI><a href="#[7ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_RunTestMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[3]"></a>USBD_DataOutStage</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_DataOutStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_DataOutStage &rArr; USBD_CtlContinueRx &rArr; DCD_EP_PrepareRx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[7eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlContinueRx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>USBD_IsoINIncomplete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_IsoINIncomplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_IsoINIncomplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>USBD_IsoOUTIncomplete</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_IsoOUTIncomplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_IsoOUTIncomplete
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>USBD_Reset</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USBD_Reset &rArr; DCD_EP_Open &rArr; USB_OTG_EPActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>USBD_Resume</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_Resume
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[7ef]"></a>USBD_RunTestMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, usbd_core.o(i.USBD_RunTestMode))
<BR><BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_DataInStage
</UL>

<P><STRONG><a name="[6]"></a>USBD_SOF</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_SOF))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_SOF
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[5]"></a>USBD_SetupStage</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, usbd_core.o(i.USBD_SetupStage))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = USBD_SetupStage &rArr; USBD_StdDevReq &rArr; USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[80a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdItfReq
<LI><a href="#[80b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdEPReq
<LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
<LI><a href="#[808]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ParseSetupRequest
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Stall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>USBD_Suspend</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, usbd_core.o(i.USBD_Suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USBD_Suspend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_core.o(.data)
</UL>
<P><STRONG><a name="[7e8]"></a>USBD_ClrFeature</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_ClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_ClrFeature &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[7f0]"></a>USBD_GetConfig</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_GetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_GetConfig &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[7f1]"></a>USBD_GetDescriptor</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_GetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USBD_GetDescriptor &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[7f4]"></a>USBD_GetLen</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, usbd_req.o(i.USBD_GetLen))
<BR><BR>[Called By]<UL><LI><a href="#[7f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_GetString
</UL>

<P><STRONG><a name="[7f2]"></a>USBD_GetStatus</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_GetStatus &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[802]"></a>USBD_SetAddress</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_SetAddress))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_SetAddress &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[803]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_SetAddress
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[804]"></a>USBD_SetConfig</STRONG> (Thumb, 204 bytes, Stack size 16 bytes, usbd_req.o(i.USBD_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USBD_SetConfig &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
<LI><a href="#[805]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_SetCfg
<LI><a href="#[806]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_ClrCfg
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[807]"></a>USBD_SetFeature</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, usbd_req.o(i.USBD_SetFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USBD_SetFeature &rArr; USBD_CtlSendStatus &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[809]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_StdDevReq
</UL>

<P><STRONG><a name="[f]"></a>USBD_HID_DataIn</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, usbd_hid_core.o(i.USBD_HID_DataIn))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USBD_HID_DataIn &rArr; DCD_EP_Flush &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Flush
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>USBD_HID_DataOut</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, usbd_hid_core.o(i.USBD_HID_DataOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = USBD_HID_DataOut &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OSSemPost
<LI><a href="#[7f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlipSimpleCheck
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_PrepareRx
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>USBD_HID_DeInit</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, usbd_hid_core.o(i.USBD_HID_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USBD_HID_DeInit &rArr; DCD_EP_Close &rArr; USB_OTG_EPDeactivate
</UL>
<BR>[Calls]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Close
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>USBD_HID_GetCfgDesc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, usbd_hid_core.o(i.USBD_HID_GetCfgDesc))
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>USBD_HID_Init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, usbd_hid_core.o(i.USBD_HID_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = USBD_HID_Init &rArr; DCD_EP_Open &rArr; USB_OTG_EPActivate
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_EP_Open
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>USBD_HID_Setup</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, usbd_hid_core.o(i.USBD_HID_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USBD_HID_Setup &rArr; USBD_CtlSendData &rArr; DCD_EP_Tx &rArr; USB_OTG_EPStartXfer &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[7ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlSendData
<LI><a href="#[7ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_CtlError
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbd_hid_core.o(.data)
</UL>
<P><STRONG><a name="[819]"></a>USB_OTG_CoreReset</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, usb_core.o(i.USB_OTG_CoreReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_OTG_CoreReset &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[818]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_BSP_uDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_CoreInit
</UL>

<P><STRONG><a name="[81c]"></a>USB_OTG_EnableCommonInt</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usb_core.o(i.USB_OTG_EnableCommonInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_OTG_EnableCommonInt
</UL>
<BR>[Called By]<UL><LI><a href="#[81b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EnableDevInt
</UL>

<P><STRONG><a name="[4c1]"></a>DCD_HandleEnumDone_ISR</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_HandleEnumDone_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DCD_HandleEnumDone_ISR &rArr; USB_OTG_EP0Activate
</UL>
<BR>[Calls]<UL><LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_GetDeviceSpeed
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0Activate
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[4c4]"></a>DCD_HandleInEP_ISR</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleInEP_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = DCD_HandleInEP_ISR &rArr; DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevAllInEPItr
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_WriteEmptyTxFifo
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_ReadDevInEP
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[4c9]"></a>DCD_HandleOutEP_ISR</STRONG> (Thumb, 250 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleOutEP_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DCD_HandleOutEP_ISR &rArr; USB_OTG_EP0_OutStart
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevOutEP_itr
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadDevAllOutEp_itr
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[7fd]"></a>DCD_HandleResume_ISR</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleResume_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DCD_HandleResume_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[4cc]"></a>DCD_HandleRxStatusQueueLevel_ISR</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleRxStatusQueueLevel_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = DCD_HandleRxStatusQueueLevel_ISR &rArr; USB_OTG_ReadPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[7ff]"></a>DCD_HandleSof_ISR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_HandleSof_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_HandleSof_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[7fe]"></a>DCD_HandleUSBSuspend_ISR</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, usb_dcd_int.o(i.DCD_HandleUSBSuspend_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DCD_HandleUSBSuspend_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[4ce]"></a>DCD_HandleUsbReset_ISR</STRONG> (Thumb, 254 bytes, Stack size 40 bytes, usb_dcd_int.o(i.DCD_HandleUsbReset_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DCD_HandleUsbReset_ISR &rArr; USB_OTG_FlushTxFifo &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_EP0_OutStart
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_FlushTxFifo
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[800]"></a>DCD_IsoINIncomplete_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_IsoINIncomplete_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_IsoINIncomplete_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[801]"></a>DCD_IsoOUTIncomplete_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_dcd_int.o(i.DCD_IsoOUTIncomplete_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DCD_IsoOUTIncomplete_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[769]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBD_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[4c6]"></a>DCD_ReadDevInEP</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, usb_dcd_int.o(i.DCD_ReadDevInEP))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = DCD_ReadDevInEP
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[4c8]"></a>DCD_WriteEmptyTxFifo</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, usb_dcd_int.o(i.DCD_WriteEmptyTxFifo))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = DCD_WriteEmptyTxFifo &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCD_HandleInEP_ISR
</UL>

<P><STRONG><a name="[814]"></a>USB_OTG_USBH_handle_Disconnect_ISR</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_Disconnect_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_Disconnect_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[815]"></a>USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = USB_OTG_USBH_handle_IncompletePeriodicXfer_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[812]"></a>USB_OTG_USBH_handle_hc_ISR</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USB_OTG_USBH_handle_hc_ISR &rArr; USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[821]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadHostAllChannels_intr
<LI><a href="#[823]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_Out_ISR
<LI><a href="#[822]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_n_In_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[822]"></a>USB_OTG_USBH_handle_hc_n_In_ISR</STRONG> (Thumb, 1064 bytes, Stack size 40 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_n_In_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = USB_OTG_USBH_handle_hc_n_In_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
</UL>
<BR>[Called By]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[823]"></a>USB_OTG_USBH_handle_hc_n_Out_ISR</STRONG> (Thumb, 976 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_hc_n_Out_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_OTG_USBH_handle_hc_n_Out_ISR &rArr; USB_OTG_HC_Halt
</UL>
<BR>[Calls]<UL><LI><a href="#[824]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_Halt
<LI><a href="#[825]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_HC_DoPing
</UL>
<BR>[Called By]<UL><LI><a href="#[812]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_USBH_handle_hc_ISR
</UL>

<P><STRONG><a name="[810]"></a>USB_OTG_USBH_handle_nptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_nptxfempty_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_USBH_handle_nptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[813]"></a>USB_OTG_USBH_handle_port_ISR</STRONG> (Thumb, 282 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_port_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_OTG_USBH_handle_port_ISR &rArr; USB_OTG_ResetPort &rArr; USB_OTG_BSP_mDelay &rArr; USB_OTG_BSP_uDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[81e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ResetPort
<LI><a href="#[826]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_InitFSLSPClkSel
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[811]"></a>USB_OTG_USBH_handle_ptxfempty_ISR</STRONG> (Thumb, 302 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_ptxfempty_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_OTG_USBH_handle_ptxfempty_ISR &rArr; USB_OTG_WritePacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_WritePacket
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[80f]"></a>USB_OTG_USBH_handle_rx_qlvl_ISR</STRONG> (Thumb, 356 bytes, Stack size 32 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_rx_qlvl_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = USB_OTG_USBH_handle_rx_qlvl_ISR &rArr; USB_OTG_ReadPacket
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_OTG_ReadPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[80e]"></a>USB_OTG_USBH_handle_sof_ISR</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, usb_hcd_int.o(i.USB_OTG_USBH_handle_sof_ISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_OTG_USBH_handle_sof_ISR
</UL>
<BR>[Called By]<UL><LI><a href="#[768]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USBH_OTG_ISR_Handler
</UL>

<P><STRONG><a name="[8d7]"></a>_DrawBitLine16BPP</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, guidrv_template.o(i._DrawBitLine16BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _DrawBitLine16BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8d1]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 236 bytes, Stack size 64 bytes, guidrv_template.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _DrawBitLine1BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8d2]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, guidrv_template.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _DrawBitLine2BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8d3]"></a>_DrawBitLine32BPP</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, guidrv_template.o(i._DrawBitLine32BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _DrawBitLine32BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8d5]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, guidrv_template.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _DrawBitLine4BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8d6]"></a>_DrawBitLine8BPP</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, guidrv_template.o(i._DrawBitLine8BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _DrawBitLine8BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[13e]"></a>_DrawBitmap</STRONG> (Thumb, 250 bytes, Stack size 64 bytes, guidrv_template.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine1BPP &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[8d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine16BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>_DrawHLine</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, guidrv_template.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; Lcd_ClearPart &rArr; Lcd_CheckArea
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>_DrawVLine</STRONG> (Thumb, 26 bytes, Stack size 24 bytes, guidrv_template.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = _DrawVLine &rArr; _FillRect &rArr; Lcd_ClearPart &rArr; Lcd_CheckArea
</UL>
<BR>[Calls]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[141]"></a>_FillRect</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, guidrv_template.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = _FillRect &rArr; Lcd_ClearPart &rArr; Lcd_CheckArea
</UL>
<BR>[Calls]<UL><LI><a href="#[71d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lcd_ClearPart
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>_GetDevData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidrv_template.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>_GetDevFunc</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, guidrv_template.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>_GetDevProp</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guidrv_template.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _GetDevProp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>_GetPixelIndex</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, guidrv_template.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>_GetRect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, guidrv_template.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>_Init</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, guidrv_template.o(i._Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _Init &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[8f8]"></a>_InitOnce</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, guidrv_template.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[6cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__GetBPP
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVSize
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetVRAMAddr
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSize
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Init
</UL>

<P><STRONG><a name="[12e]"></a>_Off</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_template.o(i._Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Off &rArr; LCD_X_DisplayDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12d]"></a>_On</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guidrv_template.o(i._On))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _On &rArr; LCD_X_DisplayDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12f]"></a>_SetLUTEntry</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, guidrv_template.o(i._SetLUTEntry))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetLUTEntry &rArr; LCD_X_DisplayDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[145]"></a>_SetOrg</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, guidrv_template.o(i._SetOrg))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetOrg &rArr; LCD_X_DisplayDriver
</UL>
<BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>_SetPixelIndex</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, guidrv_template.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[8d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine8BPP
<LI><a href="#[8d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[8d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP
<LI><a href="#[8d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[8d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>_SetSize</STRONG> (Thumb, 62 bytes, Stack size 32 bytes, guidrv_template.o(i._SetSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = _SetSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[129]"></a>_SetVRAMAddr</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, guidrv_template.o(i._SetVRAMAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _SetVRAMAddr &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_X_DisplayDriver
<LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[12a]"></a>_SetVSize</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, guidrv_template.o(i._SetVSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _SetVSize &rArr; _InitOnce &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(i._GetDevFunc)
</UL>
<P><STRONG><a name="[144]"></a>_XorPixel</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, guidrv_template.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _XorPixel &rArr; _SetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidrv_template.o(.constdata)
</UL>
<P><STRONG><a name="[560]"></a>_DrawArcAA</STRONG> (Thumb, 106 bytes, Stack size 48 bytes, guiaa_arc.o(i._DrawArcAA))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _DrawArcAA &rArr; GUI_AA_Init_HiRes &rArr; GUI_AA_Init &rArr; GUI_ALLOC_GetFixedBlock &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetPenSize
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetPenSize
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init_HiRes
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
</UL>
<BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_DrawArc
</UL>

<P><STRONG><a name="[566]"></a>CalcClipRectHL</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, guiaa_lib.o(i.CalcClipRectHL))
<BR><BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_SetFactor
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
</UL>

<P><STRONG><a name="[565]"></a>_CleanLine</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, guiaa_lib.o(i._CleanLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _CleanLine &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Init
<LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>

<P><STRONG><a name="[9b]"></a>_DrawHLine</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, guiaa_lib.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = _DrawHLine &rArr; _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[562]"></a>_FlushLine</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, guiaa_lib.o(i._FlushLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _FlushLine &rArr; LCD_SetPixelAA &rArr; LCD_GetPixelColor &rArr; LCD_GetPixelIndex
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetPixelAA
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CleanLine
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AA_Exit
</UL>

<P><STRONG><a name="[9a]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, guiaa_lib.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guiaa_lib.o(i.GUI_AA_Init)
</UL>
<P><STRONG><a name="[151]"></a>_Color2IndexBulk</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, guicc_m565.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>_Color2Index_M565</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, guicc_m565.o(i._Color2Index_M565))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2Index_M565
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>_GetIndexMask_M565</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_m565.o(i._GetIndexMask_M565))
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>_Index2ColorBulk</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, guicc_m565.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_m565.o(.constdata)
</UL>
<P><STRONG><a name="[56e]"></a>_AddFreeMemory</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, gui_alloc.o(i._AddFreeMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[56b]"></a>_Alloc</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, gui_alloc.o(i._Alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + In Cycle
<LI>Call Chain = _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteTagData
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PushFreeBlock
<LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
<LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>

<P><STRONG><a name="[8e8]"></a>_EnlargeBlocks</STRONG> (Thumb, 144 bytes, Stack size 32 bytes, gui_alloc.o(i._EnlargeBlocks))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[8b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PopFreeBlock
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[8a5]"></a>_GetMinIndex</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_alloc.o(i._GetMinIndex))
<BR><BR>[Called By]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[570]"></a>_InitOnce</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, gui_alloc.o(i._InitOnce))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_TestRAM
<LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__RegisterExit
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[132]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gui_alloc.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_alloc.o(i._InitOnce)
</UL>
<P><STRONG><a name="[8b3]"></a>_PopFreeBlock</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, gui_alloc.o(i._PopFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _PopFreeBlock &rArr;  _EnlargeBlocks (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_EnlargeBlocks
</UL>
<BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[56f]"></a>_PushFreeBlock</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, gui_alloc.o(i._PushFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _PushFreeBlock
</UL>
<BR>[Called By]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[572]"></a>_RemoveFreeBlock</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gui_alloc.o(i._RemoveFreeBlock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[8a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMinIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveHoles
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[571]"></a>_RemoveHoles</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, gui_alloc.o(i._RemoveHoles))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _RemoveHoles &rArr; _AddFreeMemory &rArr; _RemoveFreeBlock
</UL>
<BR>[Calls]<UL><LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RemoveFreeBlock
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetFixedBlock
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
</UL>

<P><STRONG><a name="[8fa]"></a>_TestRAM</STRONG> (Thumb, 234 bytes, Stack size 20 bytes, gui_alloc.o(i._TestRAM))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _TestRAM
</UL>
<BR>[Called By]<UL><LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InitOnce
</UL>

<P><STRONG><a name="[8a6]"></a>_WriteTagData</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_alloc.o(i._WriteTagData))
<BR><BR>[Called By]<UL><LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Alloc
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddFreeMemory
</UL>

<P><STRONG><a name="[5d9]"></a>_InitContext</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, gui_core.o(i._InitContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _InitContext
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
</UL>

<P><STRONG><a name="[a0]"></a>_OnExit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_core.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_core.o(i.GUI__Config)
</UL>
<P><STRONG><a name="[59b]"></a>_UnlinkDevice</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_device.o(i._UnlinkDevice))
<BR><BR>[Called By]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_UnlinkTaskDevices
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
</UL>

<P><STRONG><a name="[8d9]"></a>_DoClipping</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, gui_drawbitmap_8888.o(i._DoClipping))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
<LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8d8]"></a>_DrawBitmap</STRONG> (Thumb, 660 bytes, Stack size 136 bytes, gui_drawbitmap_8888.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap &rArr; GUI_SetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SetPixelAlpha
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_FillRect
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap_8888
</UL>

<P><STRONG><a name="[8e5]"></a>_DrawBitmapHW</STRONG> (Thumb, 142 bytes, Stack size 64 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = _DrawBitmapHW &rArr; GUI_SetColorIndex &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetColorIndex
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColorIndex
<LI><a href="#[8d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DoClipping
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW_8888
</UL>

<P><STRONG><a name="[156]"></a>_DrawBitmapHW_8888</STRONG> (Thumb, 12 bytes, Stack size 16 bytes, gui_drawbitmap_8888.o(i._DrawBitmapHW_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _DrawBitmapHW_8888 &rArr; _DrawBitmapHW &rArr; GUI_SetColorIndex &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmapHW
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>_DrawBitmap_8888</STRONG> (Thumb, 24 bytes, Stack size 40 bytes, gui_drawbitmap_8888.o(i._DrawBitmap_8888))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _DrawBitmap_8888 &rArr; _DrawBitmap &rArr; GUI_SetColor &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_drawbitmap_8888.o(.constdata)
</UL>
<P><STRONG><a name="[536]"></a>Abs</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_drawline.o(i.Abs))
<BR><BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[53e]"></a>_DrawLineEnd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_drawline.o(i._DrawLineEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawLineEnd &rArr; GL_DrawPoint &rArr; GL_FillCircle
</UL>
<BR>[Calls]<UL><LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[539]"></a>_SetLineColor</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, gui_drawline.o(i._SetLineColor))
<BR><BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine1Ex
</UL>

<P><STRONG><a name="[53a]"></a>_atan2</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, gui_drawline.o(i._atan2))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _atan2
</UL>
<BR>[Called By]<UL><LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLineEx
</UL>

<P><STRONG><a name="[540]"></a>_Add</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, gui_fillpolygon.o(i._Add))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _Add
</UL>
<BR>[Called By]<UL><LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_FillPolygon
</UL>

<P><STRONG><a name="[5d5]"></a>_GotoX</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoX))
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[5d6]"></a>_GotoY</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gui_goto.o(i._GotoY))
<BR><BR>[Called By]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
</UL>

<P><STRONG><a name="[61c]"></a>_IncPointer</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gui_onkey.o(i._IncPointer))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKeyMsg
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncReadPointer
</UL>

<P><STRONG><a name="[605]"></a>_IncReadPointer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_onkey.o(i._IncReadPointer))
<BR><BR>[Calls]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncPointer
</UL>
<BR>[Called By]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
</UL>

<P><STRONG><a name="[159]"></a>_CalcSizeOfChar</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._CalcSizeOfChar))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Encode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>_Encode</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, gui_uc_encodeutf8.o(i._Encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _Encode
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcSizeOfChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[157]"></a>_GetCharCode</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>_GetCharSize</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gui_uc_encodeutf8.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodeutf8.o(.constdata)
</UL>
<P><STRONG><a name="[6b9]"></a>_GetDevProp</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetDevProp))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
</UL>
<BR>[Called By]<UL><LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVYSizeEx
<LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeEx
<LI><a href="#[6bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColorsEx
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[6b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetBitsPerPixelEx
<LI><a href="#[6c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetMaxValue
</UL>

<P><STRONG><a name="[6c0]"></a>_GetMaxValue</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lcd_getex.o(i._GetMaxValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _GetMaxValue &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDevProp
</UL>
<BR>[Called By]<UL><LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetVXSizeMax
</UL>

<P><STRONG><a name="[8dc]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 312 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8dd]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 220 bytes, Stack size 56 bytes, guidev_16.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8de]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 340 bytes, Stack size 40 bytes, guidev_16.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[15f]"></a>_DrawBitmap</STRONG> (Thumb, 678 bytes, Stack size 104 bytes, guidev_16.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[8de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[8dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[160]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_16.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>_DrawVLine</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, guidev_16.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>_FillRect</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, guidev_16.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset16
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[169]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[167]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>_GetDevProp</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[163]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_16.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_16.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[166]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_16.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_16.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[8db]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_16.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[165]"></a>_XorPixel</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, guidev_16.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_16.o(.constdata)
</UL>
<P><STRONG><a name="[2e0]"></a>_OnButtonPressed</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, button.o(i._OnButtonPressed))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = _OnButtonPressed &rArr; WIDGET_OrState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[2e1]"></a>_OnButtonReleased</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, button.o(i._OnButtonReleased))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BUTTON_Callback
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouchDefault
</UL>

<P><STRONG><a name="[24]"></a>_OnTouchDefault</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, button.o(i._OnTouchDefault))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _OnTouchDefault &rArr; _OnButtonReleased &rArr; WIDGET_AndState &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonReleased
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnButtonPressed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.data)
</UL>
<P><STRONG><a name="[8f2]"></a>_GetDividerIndex</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, header.o(i._GetDividerIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _GetDividerIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[685]"></a>_GetItemIndex</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, header.o(i._GetItemIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _GetItemIndex &rArr; WM_GetWindowSizeY &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[686]"></a>_HandlePID</STRONG> (Thumb, 226 bytes, Stack size 56 bytes, header.o(i._HandlePID))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = _HandlePID &rArr; _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[688]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_RestoreOldCursor
<LI><a href="#[8f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_LimitDragWitdh
<LI><a href="#[8f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDividerIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
</UL>

<P><STRONG><a name="[8f6]"></a>_LimitDragWitdh</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, header.o(i._LimitDragWitdh))
<BR><BR>[Stack]<UL><LI>Max Depth = 360 + Unknown Stack Size
<LI>Call Chain = _LimitDragWitdh &rArr; WM_GetScrollbarV &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[68f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRectEx
<LI><a href="#[695]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetItemWidth
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
</UL>
<BR>[Called By]<UL><LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[688]"></a>_RestoreOldCursor</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, header.o(i._RestoreOldCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _RestoreOldCursor &rArr; GUI_CURSOR_SelectEx &rArr; GUI_SPRITE__CreateEx &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_GetStateEx
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_Callback
<LI><a href="#[686]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_HandlePID
</UL>

<P><STRONG><a name="[6ce]"></a>_AddKey</STRONG> (Thumb, 230 bytes, Stack size 40 bytes, listbox.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 648 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; LISTBOX_IncSel &rArr; _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[6e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetpStringLocked
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
<LI><a href="#[8a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Tolower
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>
<BR>[Called By]<UL><LI><a href="#[6cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_AddKey
</UL>

<P><STRONG><a name="[8c2]"></a>_CallOwnerDraw</STRONG> (Thumb, 36 bytes, Stack size 48 bytes, listbox.o(i._CallOwnerDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _CallOwnerDraw
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>

<P><STRONG><a name="[6ef]"></a>_GetContentsSizeX</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, listbox.o(i._GetContentsSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _GetContentsSizeX &rArr; GUI_SetFont &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[6da]"></a>_GetItemFromPos</STRONG> (Thumb, 104 bytes, Stack size 48 bytes, listbox.o(i._GetItemFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _GetItemFromPos &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[6f1]"></a>_GetItemPosY</STRONG> (Thumb, 190 bytes, Stack size 40 bytes, listbox.o(i._GetItemPosY))
<BR><BR>[Stack]<UL><LI>Max Depth = 184 + Unknown Stack Size
<LI>Call Chain = _GetItemPosY &rArr; _GetItemSizeY &rArr; GUI_SetFont &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[6e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItemAndBelow
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
</UL>

<P><STRONG><a name="[6f2]"></a>_GetItemSizeY</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, listbox.o(i._GetItemSizeY))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = _GetItemSizeY &rArr; GUI_SetFont &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CallOwnerDraw
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
</UL>
<BR>[Called By]<UL><LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
<LI><a href="#[6da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemFromPos
</UL>

<P><STRONG><a name="[6dc]"></a>_GetNumVisItems</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, listbox.o(i._GetNumVisItems))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _GetNumVisItems &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
</UL>
<BR>[Called By]<UL><LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScroll
</UL>

<P><STRONG><a name="[8f4]"></a>_GetYSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, listbox.o(i._GetYSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[6ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
</UL>

<P><STRONG><a name="[6ee]"></a>_ManageAutoScroll</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, listbox.o(i._ManageAutoScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarWidth
<LI><a href="#[6ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__SetScrollbarColor
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisItems
<LI><a href="#[6ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetContentsSizeX
</UL>
<BR>[Called By]<UL><LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[6e0]"></a>_MoveSel</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, listbox.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = _MoveSel &rArr; LISTBOX_UpdateScrollers &rArr; _ManageAutoScroll &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_GetSel
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[6d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateInsideArea
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[6e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_IncSel
<LI><a href="#[6df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_DecSel
</UL>

<P><STRONG><a name="[6d8]"></a>_NotifyOwner</STRONG> (Thumb, 66 bytes, Stack size 40 bytes, listbox.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _NotifyOwner &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ToggleMultiSel
</UL>

<P><STRONG><a name="[6d9]"></a>_OnPaint</STRONG> (Thumb, 270 bytes, Stack size 112 bytes, listbox.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ClearRectEx
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
</UL>

<P><STRONG><a name="[6db]"></a>_ToggleMultiSel</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, listbox.o(i._ToggleMultiSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = _ToggleMultiSel &rArr; LISTBOX__InvalidateItem &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GethItem
<LI><a href="#[6d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__InvalidateItem
<LI><a href="#[6d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_NotifyOwner
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_Callback
<LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[8a7]"></a>_Tolower</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, listbox.o(i._Tolower))
<BR><BR>[Called By]<UL><LI><a href="#[6ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6ed]"></a>_UpdateScrollPos</STRONG> (Thumb, 186 bytes, Stack size 72 bytes, listbox.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; _GetYSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[6e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX__GetNumItems
<LI><a href="#[8f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetYSize
<LI><a href="#[6f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemSizeY
<LI><a href="#[6f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetItemPosY
</UL>
<BR>[Called By]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_SetSel
<LI><a href="#[6d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTBOX_UpdateScrollers
</UL>

<P><STRONG><a name="[701]"></a>_AddKey</STRONG> (Thumb, 184 bytes, Stack size 40 bytes, listview.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[6f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__InvalidateInsideArea
<LI><a href="#[710]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_UpdateScrollPos
<LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
<LI><a href="#[877]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollValue
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[702]"></a>_FreeAttached</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, listview.o(i._FreeAttached))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _FreeAttached &rArr; GUI_ARRAY_Delete &rArr; GUI_ALLOC_FreePtr &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_Delete
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[711]"></a>_GetNumVisibleRows</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, listview.o(i._GetNumVisibleRows))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[6fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPaint
</UL>

<P><STRONG><a name="[8a8]"></a>_MoveSel</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, listview.o(i._MoveSel))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[709]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_RowIsDisabled
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
</UL>
<BR>[Called By]<UL><LI><a href="#[8a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnPage
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[700]"></a>_NotifyOwner</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, listview.o(i._NotifyOwner))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _NotifyOwner &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetParent
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[8a9]"></a>_OnPage</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, listview.o(i._OnPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = _OnPage &rArr; _MoveSel &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[8a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveSel
</UL>
<BR>[Called By]<UL><LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[6fe]"></a>_OnPaint</STRONG> (Thumb, 1058 bytes, Stack size 248 bytes, listview.o(i._OnPaint))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _OnPaint &rArr; _GetNumVisibleRows &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetSel
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[6fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumColumns
<LI><a href="#[708]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetWrapMode
<LI><a href="#[707]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetRBorder
<LI><a href="#[706]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_GetLBorder
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[6f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetpRow
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[711]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisibleRows
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[691]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetItemWidth
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[6ff]"></a>_SetSelFromPos</STRONG> (Thumb, 142 bytes, Stack size 40 bytes, listview.o(i._SetSelFromPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = _SetSelFromPos &rArr; LISTVIEW__SetSel &rArr; LISTVIEW__InvalidateRow &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetNumRows
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[70f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__GetRowDistY
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[68e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_GetHeight
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW_Callback
</UL>

<P><STRONG><a name="[710]"></a>_UpdateScrollPos</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, listview.o(i._UpdateScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _UpdateScrollPos &rArr; WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[846]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollBounds
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
<LI><a href="#[697]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HEADER_SetScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[6fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__UpdateScrollParas
<LI><a href="#[70e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LISTVIEW__SetSel
<LI><a href="#[701]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[723]"></a>_AddKey</STRONG> (Thumb, 1170 bytes, Stack size 152 bytes, multiedit.o(i._AddKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = _AddKey &rArr; _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesFromCurrent
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveCursor2NextLine
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsOverwriteAtThisChar
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorSizeX
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_AddKey
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
</UL>

<P><STRONG><a name="[8b4]"></a>_CalcNextValidCursorPos</STRONG> (Thumb, 226 bytes, Stack size 48 bytes, multiedit.o(i._CalcNextValidCursorPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 536 + Unknown Stack Size
<LI>Call Chain = _CalcNextValidCursorPos &rArr; _GetCursorLine &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpLineLocked
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumChars
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorLine
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsOverwriteAtThisChar
</UL>

<P><STRONG><a name="[727]"></a>_CalcScrollParas</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, multiedit.o(i._CalcScrollParas))
<BR><BR>[Stack]<UL><LI>Max Depth = 584 + Unknown Stack Size
<LI>Call Chain = _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
</UL>

<P><STRONG><a name="[8c1]"></a>_CalcScrollPos</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, multiedit.o(i._CalcScrollPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[729]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetScrollState
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[845]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CheckScrollPos
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[726]"></a>_ClearCache</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, multiedit.o(i._ClearCache))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetWrapMode
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScrollV
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[8af]"></a>_DeleteChar</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, multiedit.o(i._DeleteChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = _DeleteChar &rArr; _GetCursorLine &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesToNextLine
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpLineLocked
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorLine
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearCache
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[8cb]"></a>_DispString</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, multiedit.o(i._DispString))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = _DispString &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectMax
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChars
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumCharsInPrompt
</UL>
<BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
</UL>

<P><STRONG><a name="[8ef]"></a>_GetCharDistX</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, multiedit.o(i._GetCharDistX))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _GetCharDistX &rArr; GUI_UC_GetCharCode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumCharsInPrompt
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorSizeX
</UL>

<P><STRONG><a name="[8b6]"></a>_GetCursorLine</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, multiedit.o(i._GetCursorLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = _GetCursorLine &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsOverwriteAtThisChar
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
</UL>

<P><STRONG><a name="[8ad]"></a>_GetCursorSizeX</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, multiedit.o(i._GetCursorSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = _GetCursorSizeX &rArr; _IsOverwriteAtThisChar &rArr; _CalcNextValidCursorPos &rArr; _GetCursorLine &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[8b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsOverwriteAtThisChar
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[8ae]"></a>_GetCursorXY</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, multiedit.o(i._GetCursorXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosX
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpLineLocked
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveCursor2NextLine
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[8b5]"></a>_GetNumChars</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, multiedit.o(i._GetNumChars))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetNumChars &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
</UL>

<P><STRONG><a name="[8cc]"></a>_GetNumCharsInPrompt</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, multiedit.o(i._GetNumCharsInPrompt))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetNumCharsInPrompt &rArr; GUI_UC__NumChars2NumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesFromCurrent
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharDistX
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispString
</UL>

<P><STRONG><a name="[8be]"></a>_GetNumLines</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, multiedit.o(i._GetNumLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = _GetNumLines &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScrollV
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[8bf]"></a>_GetNumVisLines</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, multiedit.o(i._GetNumVisLines))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = _GetNumVisLines &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScrollV
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[8c0]"></a>_GetTextSizeX</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, multiedit.o(i._GetTextSizeX))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = _GetTextSizeX &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesToNextLine
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
</UL>

<P><STRONG><a name="[8ab]"></a>_GetXSize</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, multiedit.o(i._GetXSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesToNextLine
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[8b7]"></a>_GetpLineLocked</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, multiedit.o(i._GetpLineLocked))
<BR><BR>[Stack]<UL><LI>Max Depth = 480 + Unknown Stack Size
<LI>Call Chain = _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesToNextLine
</UL>
<BR>[Called By]<UL><LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
</UL>

<P><STRONG><a name="[8f7]"></a>_IncrementBuffer</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, multiedit.o(i._IncrementBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Realloc
</UL>
<BR>[Called By]<UL><LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
</UL>

<P><STRONG><a name="[8b0]"></a>_InsertChar</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, multiedit.o(i._InsertChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _InsertChar &rArr; _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__CalcSizeOfChar
<LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_Encode
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearCache
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[8fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[728]"></a>_Invalidate</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, multiedit.o(i._Invalidate))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = _Invalidate &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
</UL>

<P><STRONG><a name="[72e]"></a>_InvalidateTextArea</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, multiedit.o(i._InvalidateTextArea))
<BR><BR>[Stack]<UL><LI>Max Depth = 616 + Unknown Stack Size
<LI>Call Chain = _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[6f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateRect
<LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
<LI><a href="#[6e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetInsideRectExScrollbar
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetFont
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetWrapMode
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[730]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFlag
</UL>

<P><STRONG><a name="[725]"></a>_InvertCursor</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, multiedit.o(i._InvertCursor))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _InvertCursor &rArr; _GetCursorSizeX &rArr; _IsOverwriteAtThisChar &rArr; _CalcNextValidCursorPos &rArr; _GetCursorLine &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_InvertRect
<LI><a href="#[8aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYSizeOfFont
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorSizeX
<LI><a href="#[900]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HasFocus
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
</UL>

<P><STRONG><a name="[8fb]"></a>_IsCharsAvailable</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, multiedit.o(i._IsCharsAvailable))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _IsCharsAvailable &rArr; _GetNumChars &rArr; GUI__GetNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[8b2]"></a>_IsOverwriteAtThisChar</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, multiedit.o(i._IsOverwriteAtThisChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = _IsOverwriteAtThisChar &rArr; _CalcNextValidCursorPos &rArr; _GetCursorLine &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorLine
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[8ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorSizeX
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[8fd]"></a>_IsSpaceInBuffer</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, multiedit.o(i._IsSpaceInBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = _IsSpaceInBuffer &rArr; _IncrementBuffer &rArr; GUI_ALLOC_Realloc &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IncrementBuffer
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[8b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InsertChar
</UL>

<P><STRONG><a name="[72a]"></a>_MULTIEDIT_Paint</STRONG> (Thumb, 392 bytes, Stack size 112 bytes, multiedit.o(i._MULTIEDIT_Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 752 + Unknown Stack Size
<LI>Call Chain = _MULTIEDIT_Paint &rArr; _InvertCursor &rArr; _GetCursorSizeX &rArr; _IsOverwriteAtThisChar &rArr; _CalcNextValidCursorPos &rArr; _GetCursorLine &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesToNextLine
<LI><a href="#[725]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvertCursor
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispString
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[901]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDown
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
</UL>

<P><STRONG><a name="[902]"></a>_ManageAutoScrollV</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, multiedit.o(i._ManageAutoScrollV))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = _ManageAutoScrollV &rArr; WM_SetScrollbarV &rArr; WM__SetScrollbarV &rArr; _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumVisLines
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearCache
<LI><a href="#[6eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarV
</UL>
<BR>[Called By]<UL><LI><a href="#[72d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageScrollers
</UL>

<P><STRONG><a name="[72d]"></a>_ManageScrollers</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, multiedit.o(i._ManageScrollers))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[902]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ManageAutoScrollV
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[727]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollParas
<LI><a href="#[712]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetScrollbarH
</UL>
<BR>[Called By]<UL><LI><a href="#[72c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_CreateUser
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateTextArea
<LI><a href="#[728]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Invalidate
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[8b1]"></a>_MoveCursor2NextLine</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, multiedit.o(i._MoveCursor2NextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 664 + Unknown Stack Size
<LI>Call Chain = _MoveCursor2NextLine &rArr; _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[68d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetYDistOfFont
</UL>
<BR>[Called By]<UL><LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[72f]"></a>_SetCursorPos</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, multiedit.o(i._SetCursorPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 600 + Unknown Stack Size
<LI>Call Chain = _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
</UL>
<BR>[Called By]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetMaxNumChars
<LI><a href="#[732]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetWrapMode
<LI><a href="#[731]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetText
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[72b]"></a>_SetCursorXY</STRONG> (Thumb, 286 bytes, Stack size 40 bytes, multiedit.o(i._SetCursorXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _SetCursorXY &rArr; _SetCursorPos &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[904]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetCursorPosChar
<LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpLineLocked
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCharDistX
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[8b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveCursor2NextLine
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[730]"></a>_SetFlag</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, multiedit.o(i._SetFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _SetFlag &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateTextArea
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetPasswordMode
</UL>

<P><STRONG><a name="[729]"></a>_SetScrollState</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, multiedit.o(i._SetScrollState))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = _SetScrollState &rArr; WIDGET__SetScrollState &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[83b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__SetScrollState
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_Callback
<LI><a href="#[8c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcScrollPos
</UL>

<P><STRONG><a name="[731]"></a>_SetText</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, multiedit.o(i._SetText))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = _SetText &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[8fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsSpaceInBuffer
<LI><a href="#[8fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_IsCharsAvailable
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateTextArea
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetText
</UL>

<P><STRONG><a name="[732]"></a>_SetWrapMode</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, multiedit.o(i._SetWrapMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = _SetWrapMode &rArr; _InvalidateTextArea &rArr; _ManageScrollers &rArr; _CalcScrollParas &rArr; _CalcScrollPos &rArr; _GetCursorXY &rArr; _GetpLineLocked &rArr; _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[72f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorPos
<LI><a href="#[72e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_InvalidateTextArea
<LI><a href="#[726]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClearCache
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MULTIEDIT_SetWrapChar
</UL>

<P><STRONG><a name="[8ac]"></a>_WrapGetNumBytesFromCurrent</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, multiedit.o(i._WrapGetNumBytesFromCurrent))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumBytesToNextLine
<LI><a href="#[8b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumCharsDisp
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumCharsInPrompt
</UL>
<BR>[Called By]<UL><LI><a href="#[8c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesToNextLine
<LI><a href="#[723]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_AddKey
</UL>

<P><STRONG><a name="[8c8]"></a>_WrapGetNumBytesToNextLine</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, multiedit.o(i._WrapGetNumBytesToNextLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = _WrapGetNumBytesToNextLine &rArr; _WrapGetNumBytesFromCurrent &rArr; _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesFromCurrent
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[72a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MULTIEDIT_Paint
<LI><a href="#[8b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetpLineLocked
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorLine
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
</UL>

<P><STRONG><a name="[8b8]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, multiedit.o(i._WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = _WrapGetNumCharsDisp &rArr; _GetXSize &rArr; WM_GetInsideRectExScrollbar &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineDistX
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumChars2NumBytes
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetNumChars
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[8ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetXSize
<LI><a href="#[8cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumCharsInPrompt
</UL>
<BR>[Called By]<UL><LI><a href="#[8ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WrapGetNumBytesFromCurrent
<LI><a href="#[72b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetCursorXY
<LI><a href="#[8c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetTextSizeX
<LI><a href="#[8be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNumLines
<LI><a href="#[8ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorXY
<LI><a href="#[8b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetCursorLine
<LI><a href="#[8cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DispString
<LI><a href="#[8af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteChar
<LI><a href="#[8b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcNextValidCursorPos
</UL>

<P><STRONG><a name="[76f]"></a>_SetValue</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, progbar.o(i._SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _SetValue &rArr; GUI_AddDecMin &rArr; GUI_Long2Len
</UL>
<BR>[Calls]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_AddDecMin
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_SetValue
<LI><a href="#[76d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR_CreateUser
</UL>

<P><STRONG><a name="[77b]"></a>_OnTouch</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, radio.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_SetValue
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RADIO_Callback
</UL>

<P><STRONG><a name="[8c9]"></a>_DeleteTimer</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, scrollbar.o(i._DeleteTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _DeleteTimer &rArr; WM_DeleteTimer &rArr; GUI_TIMER_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteTimer
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[79e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTouch
<LI><a href="#[79f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_OnTimer
</UL>

<P><STRONG><a name="[79f]"></a>_OnTimer</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, scrollbar.o(i._OnTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _OnTimer &rArr; SCROLLBAR_AddValue &rArr; SCROLLBAR_SetValue &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_RestartTimer
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[79c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_AddValue
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[79e]"></a>_OnTouch</STRONG> (Thumb, 522 bytes, Stack size 104 bytes, scrollbar.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_CreateTimer
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_SetValue
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[8c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_Callback
</UL>

<P><STRONG><a name="[7a5]"></a>_OnTouch</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, slider.o(i._OnTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _OnTouch &rArr; WM_SetCapture &rArr; WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_SetValue
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[687]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_NotifyParent
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_OrState
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_AndState
<LI><a href="#[83a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetWindowSizeX
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SLIDER_Callback
</UL>

<P><STRONG><a name="[889]"></a>WM__PaintWinAndOverlays</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, wm.o(i.WM__PaintWinAndOverlays))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_cbPaintMemDev
</UL>

<P><STRONG><a name="[84e]"></a>_DeleteAllChildren</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, wm.o(i._DeleteAllChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + In Cycle
<LI>Call Chain = _DeleteAllChildren &rArr;  WM_DeleteWindow (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>

<P><STRONG><a name="[87e]"></a>_DesktopHandle2Index</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, wm.o(i._DesktopHandle2Index))
<BR><BR>[Called By]<UL><LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[862]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ClipAtParentBorders
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cbBackWin
</UL>

<P><STRONG><a name="[852]"></a>_DrawNext</STRONG> (Thumb, 82 bytes, Stack size 144 bytes, wm.o(i._DrawNext))
<BR><BR>[Stack]<UL><LI>Max Depth = 624 + Unknown Stack Size
<LI>Call Chain = _DrawNext &rArr; WM__Paint &rArr; GUI_MEMDEV_Draw &rArr; GUI_MEMDEV_CopyToLCD &rArr; GUI_MEMDEV_CopyToLCDAt &rArr; GUI_MEMDEV__WriteToActiveOpaque &rArr; _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetColor
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SaveContext_W
<LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RestoreContext
<LI><a href="#[87c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[851]"></a>_Exec1Input</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, wm.o(i._Exec1Input))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _Exec1Input &rArr; GUI_PollKeyMsg &rArr; WM_OnKey &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_PollKeyMsg
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Lock
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DeleteWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_Exec
</UL>

<P><STRONG><a name="[883]"></a>_FindNext_IVR</STRONG> (Thumb, 318 bytes, Stack size 32 bytes, wm.o(i._FindNext_IVR))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _FindNext_IVR &rArr; _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
</UL>

<P><STRONG><a name="[8eb]"></a>_Findx0</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, wm.o(i._Findx0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx0 &rArr;  _Findx0 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
</UL>
<BR>[Called By]<UL><LI><a href="#[8eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx0
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[8ec]"></a>_Findx1</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, wm.o(i._Findx1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findx1 &rArr;  _Findx1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
</UL>
<BR>[Called By]<UL><LI><a href="#[8ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findx1
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[8ea]"></a>_Findy1</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, wm.o(i._Findy1))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + In Cycle
<LI>Call Chain = _Findy1 &rArr;  _Findy1 (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
</UL>
<BR>[Called By]<UL><LI><a href="#[8ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Findy1
<LI><a href="#[883]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FindNext_IVR
</UL>

<P><STRONG><a name="[866]"></a>_Invalidate1Abs</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, wm.o(i._Invalidate1Abs))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Invalidate1Abs &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SignalEvent
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[773]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MergeRect
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RectIsNZ
</UL>
<BR>[Called By]<UL><LI><a href="#[886]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InvalidateRect
<LI><a href="#[863]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Invalidate1Abs
<LI><a href="#[865]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindowAndDescsEx
</UL>

<P><STRONG><a name="[122]"></a>_OnExit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, wm.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[88a]"></a>_Paint1</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wm.o(i._Paint1))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Paint1
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[88c]"></a>_Paint1Trans</STRONG> (Thumb, 130 bytes, Stack size 32 bytes, wm.o(i._Paint1Trans))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Paint1Trans &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRects
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[88a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1
</UL>
<BR>[Called By]<UL><LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[88b]"></a>_PaintTransChildren</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, wm.o(i._PaintTransChildren))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + In Cycle
<LI>Call Chain = _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[88c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint1Trans
</UL>
<BR>[Called By]<UL><LI><a href="#[88b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PaintTransChildren
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>

<P><STRONG><a name="[87d]"></a>_SetClipRectUserIntersect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, wm.o(i._SetClipRectUserIntersect))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[6c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetClipRectEx
<LI><a href="#[860]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Client2Screen
</UL>
<BR>[Called By]<UL><LI><a href="#[87a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__ActivateClipRect
</UL>

<P><STRONG><a name="[123]"></a>_cbPaintMemDev</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm.o(i._cbPaintMemDev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _cbPaintMemDev &rArr; WM__PaintWinAndOverlays &rArr; _PaintTransChildren &rArr;  _PaintTransChildren (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[889]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__PaintWinAndOverlays
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM__Paint)
</UL>
<P><STRONG><a name="[121]"></a>cbBackWin</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, wm.o(i.cbBackWin))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = cbBackWin &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_DefaultProc
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetBkColor
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_StoreKey
<LI><a href="#[87e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DesktopHandle2Index
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm.o(i.WM_Init)
</UL>
<P><STRONG><a name="[855]"></a>_GetDialogItem</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, wm_getdialogitem.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[855]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[85d]"></a>_GetDefaultWin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, wm_getwindowsize.o(i._GetDefaultWin))
<BR><BR>[Calls]<UL><LI><a href="#[8f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetActiveWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[7cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeX
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowSizeY
</UL>

<P><STRONG><a name="[888]"></a>_MoveDescendents</STRONG> (Thumb, 110 bytes, Stack size 72 bytes, wm_move.o(i._MoveDescendents))
<BR><BR>[Stack]<UL><LI>Max Depth = 312 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _MoveDescendents &rArr;  _MoveDescendents (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>
<BR>[Called By]<UL><LI><a href="#[86c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__MoveWindow
<LI><a href="#[888]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_MoveDescendents
</UL>

<P><STRONG><a name="[120]"></a>_cbTimer</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, wm_timer.o(i._cbTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _cbTimer &rArr; WM_SendMessage &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SendMessage
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_timer.o(i.WM_CreateTimer)
</UL>
<P><STRONG><a name="[884]"></a>_CalcNumBytes</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, wm_userdata.o(i._CalcNumBytes))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _CalcNumBytes
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetSize
</UL>
<BR>[Called By]<UL><LI><a href="#[87b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetUserDataEx
<LI><a href="#[85c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetUserDataEx
</UL>

<P><STRONG><a name="[28]"></a>_GetCursorCharacter</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, gui__getcursorpos.o(i._GetCursorCharacter))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _GetCursorCharacter &rArr; GUI_UC_GetCharCode &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[27]"></a>_GetCursorPosChar</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gui__getcursorpos.o(i._GetCursorPosChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _GetCursorPosChar &rArr; GUI_UC_GetCharSize &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[8b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__NumBytes2NumChars
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharSize
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC_GetCharCode
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[26]"></a>_GetCursorPosX</STRONG> (Thumb, 28 bytes, Stack size 24 bytes, gui__getcursorpos.o(i._GetCursorPosX))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = _GetCursorPosX &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__getcursorpos.o(.data)
</UL>
<P><STRONG><a name="[2a]"></a>_GetCharWrap</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, gui__wrap.o(i._GetCharWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _GetCharWrap &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[29]"></a>_GetWordWrap</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, gui__wrap.o(i._GetWordWrap))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = _GetWordWrap &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__wrap.o(.data)
</UL>
<P><STRONG><a name="[647]"></a>_WrapGetNumCharsDisp</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__wrap.o(i._WrapGetNumCharsDisp))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _WrapGetNumCharsDisp &rArr; GUI__GetLineNumChars &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetLineNumChars
</UL>
<BR>[Called By]<UL><LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsDisp
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__WrapGetNumCharsToNextLine
</UL>

<P><STRONG><a name="[8d0]"></a>_CalcInterSectLin</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, gui_arc.o(i._CalcInterSectLin))
<BR><BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[8cf]"></a>_CalcX</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, gui_arc.o(i._CalcX))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _CalcX
</UL>
<BR>[Called By]<UL><LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawArc
</UL>

<P><STRONG><a name="[52f]"></a>_DrawArc</STRONG> (Thumb, 706 bytes, Stack size 80 bytes, gui_arc.o(i._DrawArc))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = _DrawArc &rArr; __hardfp_floor &rArr; __aeabi_cdrcmple
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__SinHQ
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CosHQ
<LI><a href="#[8cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcX
<LI><a href="#[8d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CalcInterSectLin
<LI><a href="#[8ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_floor
<LI><a href="#[8cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ceil
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawArc
</UL>

<P><STRONG><a name="[639]"></a>_DispLine</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, gui_charline.o(i._DispLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DispLine &rArr; GUI_UC__GetCharCodeInc
</UL>
<BR>[Calls]<UL><LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_UC__GetCharCodeInc
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ManageCache
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
</UL>
<BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DispLine
</UL>

<P><STRONG><a name="[2b]"></a>_Log2VisBuffered</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, gui_charline.o(i._Log2VisBuffered))
<BR>[Address Reference Count : 1]<UL><LI> gui_charline.o(.data)
</UL>
<P><STRONG><a name="[9c]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gui_curs1.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit &rArr; GUI__memset
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_curs1.o(i.GUI_CURSOR_SelectEx)
</UL>
<P><STRONG><a name="[58d]"></a>_Show</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gui_curs1.o(i._Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 320 + Unknown Stack Size
<LI>Call Chain = _Show &rArr; GUI_SPRITE_Show &rArr; _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetLayerVisEx
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCursorLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CURSOR_SelectEx
</UL>

<P><STRONG><a name="[362]"></a>CL_DispChar</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, gui_dispchar.o(i.CL_DispChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = CL_DispChar &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InitIVRSearch
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetNextIVR
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontSizeY
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetCharDistX
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__GetOverlap
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DispChar
</UL>
<BR>[Called By]<UL><LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispCharAt
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispChar
</UL>

<P><STRONG><a name="[99]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gui_task.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_task.o(i.GUITASK_Init)
</UL>
<P><STRONG><a name="[61e]"></a>_Link</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, gui_timer.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Link
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Create
</UL>

<P><STRONG><a name="[9f]"></a>_OnExit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_timer.o(i._OnExit))
<BR>[Address Reference Count : 1]<UL><LI> gui_timer.o(i.GUI_TIMER_Create)
</UL>
<P><STRONG><a name="[620]"></a>_RemoveFromLinList</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gui_timer.o(i._RemoveFromLinList))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _RemoveFromLinList
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[621]"></a>_Unlink</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_timer.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Restart
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_TIMER_Delete
</UL>

<P><STRONG><a name="[16f]"></a>_CalcSizeOfChar</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._CalcSizeOfChar))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[170]"></a>_Encode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._Encode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>_GetCharCode</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharCode))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>_GetCharSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_uc_encodenone.o(i._GetCharSize))
<BR>[Address Reference Count : 1]<UL><LI> gui_uc_encodenone.o(.constdata)
</UL>
<P><STRONG><a name="[62d]"></a>_WaitEvent</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gui_waitevent.o(i._WaitEvent))
<BR><BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_WaitEvent
</UL>

<P><STRONG><a name="[172]"></a>_SetBkColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetBkColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetBkColor
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[6ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[171]"></a>_SetColor</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, lcd.o(i._SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Color2Index
<LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColorIndex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[173]"></a>_SetDrawMode</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, lcd.o(i._SetDrawMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _SetDrawMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd.o(.constdata)
</UL>
<P><STRONG><a name="[a4]"></a>_OnExit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, lcd_color.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_color.o(i.LCD_InitColors)
</UL>
<P><STRONG><a name="[5ed]"></a>_Min</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_banding.o(i._Min))
<BR><BR>[Called By]<UL><LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Draw
</UL>

<P><STRONG><a name="[5f5]"></a>_CreateStaticDevice</STRONG> (Thumb, 276 bytes, Stack size 48 bytes, guidev_staticdevices.o(i._CreateStaticDevice))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = _CreateStaticDevice &rArr; WM_SetSize &rArr; WM_ResizeWindow &rArr;  WM__UpdateChildPositions (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDesktopWindow
<LI><a href="#[6c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetYSize
<LI><a href="#[6c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetXSize
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__memset
<LI><a href="#[694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetSize
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Paint1
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__AlphaSuppressMixing
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_SetOrg
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__CreateFixed
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Select
</UL>
<BR>[Called By]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_Paint1Static
</UL>

<P><STRONG><a name="[8c5]"></a>_Convert16</STRONG> (Thumb, 62 bytes, Stack size 40 bytes, guidev_writetoactiveopaque.o(i._Convert16))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Convert16 &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_WriteToActiveOpaque_8
</UL>

<P><STRONG><a name="[600]"></a>_WriteToActiveOpaque_8</STRONG> (Thumb, 806 bytes, Stack size 160 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_8))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_8 &rArr; LCD__DrawBitmap_1bpp &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[906]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfColor2IndexEx
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetpfIndex2ColorEx
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
<LI><a href="#[8c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Convert16
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV_GetDataPtr
<LI><a href="#[6cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD__DrawBitmap_1bpp
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[601]"></a>_WriteToActiveOpaque_HT</STRONG> (Thumb, 752 bytes, Stack size 104 bytes, guidev_writetoactiveopaque.o(i._WriteToActiveOpaque_HT))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _WriteToActiveOpaque_HT &rArr; LCD_DrawBitmap &rArr; LCD_FillRect
</UL>
<BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawBitmap
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MEMDEV__WriteToActiveOpaque
</UL>

<P><STRONG><a name="[175]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, button_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> button_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[174]"></a>_Paint</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, button_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DrawRect &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[177]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, header_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> header_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[8e7]"></a>_DrawTriangle</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, header_skinclassic.o(i._DrawTriangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[176]"></a>_Paint</STRONG> (Thumb, 632 bytes, Stack size 112 bytes, header_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[6ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRect
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetNumItems
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetClientRect
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetYSize
<LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__GetXSize
<LI><a href="#[8e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawTriangle
<LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DRAW__Draw
</UL>
<BR>[Address Reference Count : 1]<UL><LI> header_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[179]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, progbar_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> progbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[8e6]"></a>_DrawPart</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, progbar_skinclassic.o(i._DrawPart))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = _DrawPart &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GotoXY
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispString
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
</UL>
<BR>[Called By]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Paint
</UL>

<P><STRONG><a name="[178]"></a>_Paint</STRONG> (Thumb, 268 bytes, Stack size 64 bytes, progbar_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; _DrawPart &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[770]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__Value2Pos
<LI><a href="#[772]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextRect
<LI><a href="#[771]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PROGBAR__GetTextLocked
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetUserClipRect
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[8e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawPart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> progbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[17b]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, radio_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[2d]"></a>_GetButtonSize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, radio_skinclassic.o(i._GetButtonSize))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetButtonSize
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.data)
</UL>
<P><STRONG><a name="[17a]"></a>_Paint</STRONG> (Thumb, 460 bytes, Stack size 120 bytes, radio_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringAt &rArr; GUI_DispString &rArr; GUI__DispLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringAt
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawBitmap
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontDistY
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[887]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__IsEnabled
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawFocusRect
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetStringDistX
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ARRAY_GetpItemLocked
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetFontInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> radio_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>_CalcPositions</STRONG> (Thumb, 310 bytes, Stack size 48 bytes, scrollbar_skinclassic.o(i._CalcPositions))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = _CalcPositions &rArr; WM_GetScrollbarH &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[690]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_MoveRect
<LI><a href="#[8bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__DivideRound32
<LI><a href="#[8ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR__Rect2VRect
<LI><a href="#[8bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetYSize
<LI><a href="#[8bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetXSize
<LI><a href="#[85a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetWindowRectEx
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(i._Create)
</UL>
<P><STRONG><a name="[17d]"></a>_Create</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, scrollbar_skinclassic.o(i._Create))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Create
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[17c]"></a>_Paint</STRONG> (Thumb, 372 bytes, Stack size 88 bytes, scrollbar_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 280 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__DrawTriangle &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[832]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawTriangle
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> scrollbar_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[17f]"></a>_Create</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, slider_skinclassic.o(i._Create))
<BR>[Address Reference Count : 1]<UL><LI> slider_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[17e]"></a>_Paint</STRONG> (Thumb, 316 bytes, Stack size 88 bytes, slider_skinclassic.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; WIDGET__DrawVLine &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__ReduceRect
<LI><a href="#[833]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawVLine
<LI><a href="#[830]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__DrawFocusRect
<LI><a href="#[837]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__FillRectEx
<LI><a href="#[838]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__GetClientRect
<LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider_skinclassic.o(.constdata)
</UL>
<P><STRONG><a name="[7dc]"></a>_Paint</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, text.o(i._Paint))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = _Paint &rArr; GUI_DispStringInRectWrap &rArr; GUI_WrapGetNumLines &rArr; GUI__WrapGetNumBytesToNextLine &rArr; GUI__WrapGetNumCharsToNextLine &rArr; GUI_GetCharDistX &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Clear
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetFont
<LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetBkColor
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DispStringInRectWrap
<LI><a href="#[858]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetHasTrans
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SetTextMode
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TEXT_Callback
</UL>

<P><STRONG><a name="[835]"></a>_EffectRequiresRedraw</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, widget.o(i._EffectRequiresRedraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _EffectRequiresRedraw
</UL>
<BR>[Calls]<UL><LI><a href="#[88d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__Screen2Client
</UL>
<BR>[Called By]<UL><LI><a href="#[834]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawDownRect
<LI><a href="#[836]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET__EFFECT_DrawUpRect
</UL>

<P><STRONG><a name="[182]"></a>_DrawDown</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDown))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[183]"></a>_DrawDownRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawDownRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[184]"></a>_DrawFlat</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawFlat))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[180]"></a>_DrawUp</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUp))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[181]"></a>_DrawUpRect</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, widget_effect_none.o(i._DrawUpRect))
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_none.o(.constdata)
</UL>
<P><STRONG><a name="[85b]"></a>_GetDialogItem</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, wm_getscrollbar.o(i._GetDialogItem))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
 + In Cycle
<LI>Call Chain = _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
<LI><a href="#[859]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetId
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>
<BR>[Called By]<UL><LI><a href="#[6d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarH
<LI><a href="#[6d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetScrollbarV
<LI><a href="#[85b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetDialogItem
</UL>

<P><STRONG><a name="[86e]"></a>WM__ReleaseCapture</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, wm_setcapture.o(i.WM__ReleaseCapture))
<BR><BR>[Stack]<UL><LI>Max Depth = 272 + Unknown Stack Size
<LI>Call Chain = WM__ReleaseCapture &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[696]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SendMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[871]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetCapture
<LI><a href="#[868]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ReleaseCapture
</UL>

<P><STRONG><a name="[8f3]"></a>_GetNextChild</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i._GetNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetNextChild
</UL>
<BR>[Calls]<UL><LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_h2p
</UL>
<BR>[Called By]<UL><LI><a href="#[873]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[873]"></a>_SetFocusOnNextChild</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, wm_setfocusonnextchild.o(i._SetFocusOnNextChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 304 + Unknown Stack Size
<LI>Call Chain = _SetFocusOnNextChild &rArr; WM_SetFocus &rArr; WM__SendMessage &rArr; WM_DefaultProc &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocus
<LI><a href="#[84c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetTopLevelLayer
<LI><a href="#[867]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_IsFocussable
<LI><a href="#[874]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetFocussedChild
<LI><a href="#[8f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetNextChild
</UL>
<BR>[Called By]<UL><LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnNextChild
</UL>

<P><STRONG><a name="[875]"></a>_GetPrevChild</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, wm_setfocusonprevchild.o(i._GetPrevChild))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = _GetPrevChild &rArr; WM__GetPrevSibling &rArr; WM__GetFirstSibling &rArr; WM_GetParent &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[842]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetPrevSibling
<LI><a href="#[882]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__GetLastSibling
</UL>
<BR>[Called By]<UL><LI><a href="#[83f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_SetFocusOnPrevChild
</UL>

<P><STRONG><a name="[88f]"></a>_SetScrollbar</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, wm_setscrollbar.o(i._SetScrollbar))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = _SetScrollbar &rArr; SCROLLBAR_CreateAttached &rArr; SCROLLBAR_CreateEx &rArr; SCROLLBAR_CreateUser &rArr; SCROLLBAR__InvalidatePartner &rArr; WM_GetScrollPartner &rArr; WM_GetDialogItem &rArr; _GetDialogItem &rArr;  _GetDialogItem (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_HideWindow
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetDialogItem
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__DeleteSecure
<LI><a href="#[7a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCROLLBAR_CreateAttached
</UL>
<BR>[Called By]<UL><LI><a href="#[879]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarV
<LI><a href="#[878]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__SetScrollbarH
</UL>

<P><STRONG><a name="[a2]"></a>_OnExit</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gui__alpha.o(i._OnExit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _OnExit
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_FreeFixedBlock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui__alpha.o(i.GUI__GetAlphaBuffer)
</UL>
<P><STRONG><a name="[8c3]"></a>_ClipRectEx</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, gui_sprite.o(i._ClipRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _ClipRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[8c7]"></a>_CreateBuffer</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, gui_sprite.o(i._CreateBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE__GetpDriver
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_GetMaxSize
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocNoInit
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[60f]"></a>_DoColorConversion</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, gui_sprite.o(i._DoColorConversion))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = _DoColorConversion &rArr; GUI_ALLOC_AllocZero &rArr; GUI_ALLOC_AllocNoInit &rArr; _Alloc &rArr;  _InitOnce (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_AllocZero
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
</UL>

<P><STRONG><a name="[185]"></a>_DrawBitmap</STRONG> (Thumb, 604 bytes, Stack size 168 bytes, gui_sprite.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = _DrawBitmap &rArr; _GetClipParam
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndexEx
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[8df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipParam
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[186]"></a>_DrawHLine</STRONG> (Thumb, 272 bytes, Stack size 96 bytes, gui_sprite.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = _DrawHLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[187]"></a>_DrawVLine</STRONG> (Thumb, 268 bytes, Stack size 72 bytes, gui_sprite.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = _DrawVLine &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[188]"></a>_FillRect</STRONG> (Thumb, 302 bytes, Stack size 80 bytes, gui_sprite.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = _FillRect &rArr; _GetClipRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[861]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__IntersectRect
<LI><a href="#[8ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_RectsIntersect
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[8e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetClipRect
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[8ed]"></a>_FlushBuffer</STRONG> (Thumb, 116 bytes, Stack size 48 bytes, gui_sprite.o(i._FlushBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[8c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__CompactPixelIndices
</UL>
<BR>[Called By]<UL><LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
</UL>

<P><STRONG><a name="[8ee]"></a>_GetBkPixel</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, gui_sprite.o(i._GetBkPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _GetBkPixel &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[8df]"></a>_GetClipParam</STRONG> (Thumb, 320 bytes, Stack size 36 bytes, gui_sprite.o(i._GetClipParam))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = _GetClipParam
</UL>
<BR>[Called By]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8e0]"></a>_GetClipRect</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, gui_sprite.o(i._GetClipRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = _GetClipRect
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[18f]"></a>_GetDevData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[18d]"></a>_GetDevFunc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[18e]"></a>_GetDevProp</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[189]"></a>_GetPixelIndex</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, gui_sprite.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _GetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[190]"></a>_GetRect</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._GetRect))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[60d]"></a>_Link</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sprite.o(i._Link))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _Link &rArr; GUI_DEVICE_Link
</UL>
<BR>[Calls]<UL><LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Link
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[8f5]"></a>_PixelExists</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, gui_sprite.o(i._PixelExists))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
</UL>

<P><STRONG><a name="[903]"></a>_ReleaseBuffer</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, gui_sprite.o(i._ReleaseBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = _ReleaseBuffer &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
<LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[18c]"></a>_SetOrg</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gui_sprite.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[18a]"></a>_SetPixelIndex</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, gui_sprite.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SetPixelIndex &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[905]"></a>_SetSpriteBkPixel</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, gui_sprite.o(i._SetSpriteBkPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _SetSpriteBkPixel &rArr; _FlushBuffer &rArr; GUI__CompactPixelIndices
</UL>
<BR>[Calls]<UL><LI><a href="#[8ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_Undraw
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SpriteDraw
</UL>

<P><STRONG><a name="[60e]"></a>_SpriteDraw</STRONG> (Thumb, 260 bytes, Stack size 104 bytes, gui_sprite.o(i._SpriteDraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = _SpriteDraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[8ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetBkPixel
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE__CreateEx
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Show
</UL>

<P><STRONG><a name="[60a]"></a>_Undraw</STRONG> (Thumb, 210 bytes, Stack size 96 bytes, gui_sprite.o(i._Undraw))
<BR><BR>[Stack]<UL><LI>Max Depth = 288 + Unknown Stack Size
<LI>Call Chain = _Undraw &rArr; _CreateBuffer &rArr; GUI_ALLOC_GetMaxSize &rArr; _InitOnce &rArr; _EnlargeBlocks &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitmapPixelIndex
<LI><a href="#[905]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetSpriteBkPixel
<LI><a href="#[903]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ReleaseBuffer
<LI><a href="#[8c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_CreateBuffer
<LI><a href="#[8c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ClipRectEx
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[60b]"></a>_Unlink</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gui_sprite.o(i._Unlink))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Unlink
</UL>
<BR>[Calls]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DEVICE_Unlink
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_SPRITE_Delete
</UL>

<P><STRONG><a name="[18b]"></a>_XorPixel</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, gui_sprite.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _XorPixel &rArr; _PixelExists &rArr; GUI_GetBitmapPixelIndex &rArr; GUI_GetBitmapPixelIndexEx
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_PixelExists
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_sprite.o(.constdata)
</UL>
<P><STRONG><a name="[191]"></a>_Color2Index_0</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, guicc_0.o(i._Color2Index_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _Color2Index_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
<LI><a href="#[8c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_CalcColorDist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[193]"></a>_GetIndexMask_0</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, guicc_0.o(i._GetIndexMask_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetIndexMask_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[192]"></a>_Index2Color_0</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, guicc_0.o(i._Index2Color_0))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _Index2Color_0 &rArr; LCD_GetNumColors &rArr; _GetDevProp
</UL>
<BR>[Calls]<UL><LI><a href="#[6bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPalette
<LI><a href="#[6ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetNumColors
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_0.o(.constdata)
</UL>
<P><STRONG><a name="[196]"></a>_Color2IndexBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Color2IndexBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Color2IndexBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[194]"></a>_Color2Index_8888</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, guicc_8888.o(i._Color2Index_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[195]"></a>_GetIndexMask_8888</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, guicc_8888.o(i._GetIndexMask_8888))
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[197]"></a>_Index2ColorBulk</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guicc_8888.o(i._Index2ColorBulk))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _Index2ColorBulk
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guicc_8888.o(.constdata)
</UL>
<P><STRONG><a name="[8e2]"></a>_DrawBitLine1BPP</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine1BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine1BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8e3]"></a>_DrawBitLine2BPP</STRONG> (Thumb, 218 bytes, Stack size 56 bytes, guidev_32.o(i._DrawBitLine2BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawBitLine2BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8d4]"></a>_DrawBitLine32BPP_DDB</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, guidev_32.o(i._DrawBitLine32BPP_DDB))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _DrawBitLine32BPP_DDB &rArr; GUI__MixColors
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI__MixColors
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[8e4]"></a>_DrawBitLine4BPP</STRONG> (Thumb, 338 bytes, Stack size 40 bytes, guidev_32.o(i._DrawBitLine4BPP))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _DrawBitLine4BPP
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[198]"></a>_DrawBitmap</STRONG> (Thumb, 652 bytes, Stack size 112 bytes, guidev_32.o(i._DrawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = _DrawBitmap &rArr; _DrawBitLine2BPP
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
<LI><a href="#[8e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine4BPP
<LI><a href="#[8d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine32BPP_DDB
<LI><a href="#[8e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine2BPP
<LI><a href="#[8e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitLine1BPP
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[199]"></a>_DrawHLine</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, guidev_32.o(i._DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _DrawHLine &rArr; _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19a]"></a>_DrawVLine</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, guidev_32.o(i._DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _DrawVLine &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19b]"></a>_FillRect</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, guidev_32.o(i._FillRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _FillRect &rArr; GUI_USAGE_AddRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_USAGE_AddRect
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawHLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1a2]"></a>_GetDevData</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevData))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1a0]"></a>_GetDevFunc</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevFunc))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1a1]"></a>_GetDevProp</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, guidev_32.o(i._GetDevProp))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19c]"></a>_GetPixelIndex</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, guidev_32.o(i._GetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _GetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1a3]"></a>_GetRect</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, guidev_32.o(i._GetRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _GetRect
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19f]"></a>_SetOrg</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, guidev_32.o(i._SetOrg))
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[19d]"></a>_SetPixelIndex</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, guidev_32.o(i._SetPixelIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _SetPixelIndex &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[8e1]"></a>_XY2PTR</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, guidev_32.o(i._XY2PTR))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XorPixel
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SetPixelIndex
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GetPixelIndex
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_FillRect
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawVLine
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawBitmap
</UL>

<P><STRONG><a name="[19e]"></a>_XorPixel</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, guidev_32.o(i._XorPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _XorPixel &rArr; _XY2PTR
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[8e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_XY2PTR
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_32.o(.constdata)
</UL>
<P><STRONG><a name="[1a5]"></a>GUI_USAGE_BM_AddHLine</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = GUI_USAGE_BM_AddHLine
</UL>
<BR>[Calls]<UL><LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1a4]"></a>GUI_USAGE_BM_AddPixel</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_AddPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_USAGE_BM_AddPixel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1a6]"></a>GUI_USAGE_BM_Clear</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = GUI_USAGE_BM_Clear &rArr; __aeabi_memclr4
</UL>
<BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1a8]"></a>GUI_USAGE_BM_GetNextDirty</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, guidev_usagebm.o(i.GUI_USAGE_BM_GetNextDirty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUI_USAGE_BM_GetNextDirty
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1a7]"></a>_GUI_USAGE_BM_Delete</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, guidev_usagebm.o(i._GUI_USAGE_BM_Delete))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _GUI_USAGE_BM_Delete &rArr; GUI_ALLOC_Free &rArr; GUI_Unlock &rArr; GUI_X_Unlock &rArr; OSSemPost &rArr; OS_EventTaskRdy &rArr; OS_EventTaskRemoveMulti
</UL>
<BR>[Calls]<UL><LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_Free
</UL>
<BR>[Address Reference Count : 1]<UL><LI> guidev_usagebm.o(.constdata)
</UL>
<P><STRONG><a name="[1ab]"></a>_DrawDown</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, widget_effect_3d.o(i._DrawDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = _DrawDown &rArr; _DrawDownRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_GetClientRect
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDownRect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[1ac]"></a>_DrawDownRect</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawDownRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawDownRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_DrawDown
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[1aa]"></a>_DrawUpRect</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, widget_effect_3d.o(i._DrawUpRect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = _DrawUpRect &rArr; GUI_DrawHLine &rArr; WM__InitIVRSearch &rArr; WM__GetNextIVR &rArr; WM__ActivateClipRect &rArr; _SetClipRectUserIntersect &rArr; LCD_SetClipRectEx &rArr; GUI__IntersectRects
</UL>
<BR>[Calls]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetColor
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawVLine
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawHLine
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRect
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIDGET_EFFECT_3D_DrawUp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> widget_effect_3d.o(.constdata)
</UL>
<P><STRONG><a name="[844]"></a>_BringToTop</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, wm_bringtotop.o(i._BringToTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = _BringToTop &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_UnlockH
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ALLOC_LockH
<LI><a href="#[87f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__RemoveWindowFromList
<LI><a href="#[847]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM__InsertWindowIntoList
<LI><a href="#[853]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_ForEachDesc
</UL>
<BR>[Called By]<UL><LI><a href="#[82b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_BringToTop
</UL>

<P><STRONG><a name="[126]"></a>_cbInvalidateOne</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wm_bringtotop.o(i._cbInvalidateOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = _cbInvalidateOne &rArr; WM_InvalidateWindow &rArr; WM_InvalidateRect &rArr; WM__InvalidateRectEx &rArr; WM__InvalidateRect &rArr;  WM__InvalidateRect (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WM_InvalidateWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> wm_bringtotop.o(i._BringToTop)
</UL>
<P><STRONG><a name="[608]"></a>LCD_ReadRectEx</STRONG> (Thumb, 404 bytes, Stack size 64 bytes, lcd_readrect.o(i.LCD_ReadRectEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = LCD_ReadRectEx
</UL>
<BR>[Calls]<UL><LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GetBitsPerPixelEx
</UL>
<BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_ReadRectEx
</UL>

<P><STRONG><a name="[1e7]"></a>_tm_carry</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[953]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[954]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[945]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[952]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[944]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[1eb]"></a>_fp_digits</STRONG> (Thumb, 426 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[92]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[1f5]"></a>_fp_value</STRONG> (Thumb, 504 bytes, Stack size 88 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[93]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
